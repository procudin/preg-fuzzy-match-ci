<?php

/**
 * Unit tests for question/type/preg/authoring_tools/preg_simplification_tool.php.
 *
 * @package    qtype_preg
 * @copyright  2015 Oleg Sychev, Volgograd State Technical University
 * @author     Terechov Grigory, Volgograd State Technical University
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

defined('MOODLE_INTERNAL') || die();

global $CFG;
require_once($CFG->dirroot . '/question/type/preg/authoring_tools/preg_simplification_tool.php');

class qtype_preg_simplification_tool_test extends PHPUnit_Framework_TestCase {

    /*public function test_1() {
        $stooloptions = new qtype_preg_simplification_tool_options();
        $stooloptions->engine = 'fa_matcher';
        $stooloptions->notation = 'native';
        $stooloptions->exactmatch = false;
        $stooloptions->problem_ids = array();
        $stooloptions->problem_ids[0] = '';
        $stooloptions->problem_type = -2;
        $stooloptions->indfirst = -2;
        $stooloptions->indlast = -2;

        $stooloptions->selection = new qtype_preg_position(-2, -2);
        $stooloptions->preserveallnodes = true;

        $st = new qtype_preg_simplification_tool('aa{1,1}', $stooloptions);
        $rule = new qtype_preg_regex_hint_common_subexpressions($st->get_dst_root());
        $rhr = $rule->check_hint();

        var_dump($rhr);
//        $this->assertTrue(true);

        $st = new qtype_preg_simplification_tool('aa{1,1}', $stooloptions);
        $rule = new qtype_preg_regex_hint_common_subexpressions($st->get_dst_root());
        $restree = $rule->use_hint($rhr);

        var_dump($restree);
        $this->assertTrue(true);

//        if ($restree === null) {
//            $this->assertTrue(false);
//        } else {
//            var_dump($restree->get_regex_string());
//            $this->assertTrue(true);
//        }
    }*/


    protected function abstract_testing($function_name_for_test, $function_name_with_tests) {
        $tests = $this->$function_name_with_tests();
        for($i = 0; $i < count($tests); $i++) {
            $test_result = $tests[$i][1];
            $test_regex = $tests[$i][0];

            //var_dump($test_regex);

            $stooloptions = new qtype_preg_simplification_tool_options();
            $stooloptions->engine = 'fa_matcher';
            $stooloptions->notation = 'native';
            $stooloptions->exactmatch = false;
            $stooloptions->problem_ids = array();
            $stooloptions->problem_ids[0] = '';
            $stooloptions->problem_type = -2;
            $stooloptions->indfirst = -2;
            $stooloptions->indlast = -2;

            $stooloptions->selection = new qtype_preg_position(-2, -2);
            $stooloptions->preserveallnodes = true;

            $result_regex = '';
            $st = new qtype_preg_simplification_tool($test_regex, $stooloptions);

            $rule_name = 'qtype_preg_regex_hint_' . $function_name_for_test;

            $rule = new $rule_name($st->get_dst_root());
            $rhr = $rule->check_hint();

            if (count($rhr->problem_ids) > 0) {
                $st = new qtype_preg_simplification_tool($test_regex, $stooloptions);
                $rule = new $rule_name($st->get_dst_root());
                $restree = $rule->use_hint($rhr);

                if ($restree === null) {
                    $result_regex = '';
                } else {
                    if ($rhr->problem_type === 'qtype_preg_regex_hint_common_subexpressions') {
                        $result_regex = $restree;
                    } else {
                        $result_regex = $restree->get_regex_string();
                    }
                }
            } else {
                $result_regex = $test_regex;
            }

            if ($result_regex !== $test_result) {
                echo "---Test failure!---\n";
                echo "input: {$test_regex}\n";
                echo "output: {$result_regex}\n";
                echo "correct answer: {$test_result}\n";
            }

            $this->assertTrue($result_regex === $test_result);
        }
    }

    public function test_common_subexpressions_trivial() {
        $this->abstract_testing('common_subexpressions', 'get_test_common_subexpressions_trivial');
    }

    public function test_repeated_assertions_trivial() {
        $this->abstract_testing('repeated_assertions', 'get_test_repeated_assertions_trivial');
    }

    public function test_grouping_node_trivial() {
        $this->abstract_testing('grouping_node', 'get_test_grouping_node_trivial');
    }

    public function test_subpattern_node_trivial() {
        $this->abstract_testing('subpattern_node', 'get_test_subpattern_node_trivial');
    }

    public function test_single_charset_trivial() {
        $this->abstract_testing('single_charset_node', 'get_test_single_charset_trivial');
    }

    public function test_alt_without_question_quant_trivial() {
        $this->abstract_testing('alt_without_question_quant', 'get_test_alt_without_question_quant_trivial');
    }

    public function test_alt_with_question_quant_trivial() {
        $this->abstract_testing('alt_with_question_quant', 'get_test_alt_with_question_quant_trivial');
    }

    public function test_quant_node_trivial() {
        $this->abstract_testing('quant_node', 'get_test_quant_node_trivial');
    }

    public function test_question_quant_for_alternative_node_trivial() {
        $this->abstract_testing('question_quant_for_alternative_node', 'get_test_question_quant_for_alternative_node_trivial');
    }

    public function test_nullable_alt_without_question_quant_trivial() {
        $this->abstract_testing('nullable_alt_without_question_quant', 'get_test_nullable_alt_without_question_quant_trivial');
    }

    public function test_quant_node_1_to_1_trivial() {
        $this->abstract_testing('quant_node_1_to_1', 'get_test_quant_node_1_to_1_trivial');
    }

    public function test_single_alternative_node_trivial() {
        $this->abstract_testing('single_alternative_node', 'get_test_single_alternative_node_trivial');
    }

    public function test_space_charset_trivial() {
        $this->abstract_testing('space_charset', 'get_test_space_charset_trivial');
    }

    public function test_space_charset_without_quant_trivial() {
        $this->abstract_testing('space_charset_without_quant', 'get_test_space_charset_without_quant_trivial');
    }

    public function test_subpattern_without_backref_trivial() {
        $this->abstract_testing('subpattern_without_backref', 'get_test_subpattern_without_backref_trivial');
    }

    public function test_space_charset_with_finit_quant_trivial() {
        $this->abstract_testing('space_charset_with_finit_quant', 'get_test_space_charset_with_finit_quant_trivial');
    }

    public function test_consecutive_quant_nodes_trivial() {
        $this->abstract_testing('consecutive_quant_nodes', 'get_test_consecutive_quant_nodes_trivial');
    }

    public function test_useless_circumflex_assertion_trivial() {
        $this->abstract_testing('useless_circumflex_assertion', 'get_test_useless_circumflex_assertion_trivial');
    }

    public function test_useless_dollar_assertion_trivial() {
        $this->abstract_testing('useless_dollar_assertion', 'get_test_useless_dollar_assertion_trivial');
    }

    public function test_exact_match_trivial() {
        $this->abstract_testing('exact_match', 'get_test_exact_match_trivial');
    }

    public function test_nullable_regex_trivial() {
        $this->abstract_testing('nullable_regex', 'get_test_nullable_regex_trivial');
    }

    protected function get_test_common_subexpressions_trivial() {
        return array (
            array('a?a+', 'a+'), // a*
            array('(?:a|b)(?:a|b)', '(?:a|b){2}'),
            array('(?:a|b)?(?:a|b)+', '(?:a|b)+'), //(?:a|b)*

            array('a?a{0,0}', 'a?'), // a*

            array('(?:)', '(?:)'),
            array('aaa', 'a{3}'),
            array('aaab', 'a{3}b'),
            array('baaa', 'ba{3}'),
            array('abab', '(?:ab){2}'),
            array('ababa', '(?:ab){2}a'), //или a(?:ba){2}
            array('cbaba', 'c(?:ba){2}'),
            array('cbabc', 'cbabc'),
            array('cbabb', 'cbab{2}'),
            array('bbaba', 'b{2}aba'), // или b(?:ba){2}
            array('bbabb', 'b{2}abb'),
            array('b{2}abb', 'b{2}ab{2}'),
            array('babac', '(?:ba){2}c'),
            array('cbbababa', 'cb{2}ababa'),
            array('cb{2}ababa', 'cb{2}(?:ab){2}a'), //или cb(?:ba){3}
            array('aababab', 'a{2}babab'),
            array('a{2}babab', 'a{2}(?:ba){2}b'), //или a(?:ab){3}
            array('(aaa)', '(a{3})'),
            array('(?:aaa)', '(?:a{3})'),
            array('(abab)', '((?:ab){2})'),
            array('(?:abab)', '(?:(?:ab){2})'),
            array('aa(?:a)', 'a{3}'),
            array('(?:a)aa', 'a{3}'),
            array('a(?:a)a', 'a{3}'),
            array('(?:aa)aa', 'a{4}'),
            array('(?:a{2})aa', 'a{4}'),
            array('aa(?:aa)aa', 'a{6}'),
            array('a{2}(?:aa)aa', 'a{6}'),
            array('a{2}(?:a{2})aa', 'a{6}'),
            array('aa(?:aa)', 'a{4}'),
            array('a{2}(?:aa)', 'a{4}'),
            array('(?:ab)aaaa', '(?:ab)a{4}'),
            array('aa(?:ab)aa', 'a{3}baa'),
            array('a(?:ba)aa', 'aba{3}'),
            array('a{2}(?:ab)aa', 'a{3}baa'),
            array('aaaa(?:ab)', 'a{5}b'),
            array('(?:ab)aa', '(?:ab)a{2}'),
            array('aa(?:ab)', 'a{3}b'),
            array('(?:ba)aa', 'ba{3}'),
            array('aa(?:ba)aa', 'a{2}(?:ba)aa'),
            array('a(?:(?:ba)aa)', 'a(?:ba{3})'),
            array('a(?:(?:ba)aab)', 'a(?:ba{3}b)'),
            array('(?:aa(?:ab))a', '(?:a{3}b)a'),
            array('(?:baa(?:ab))a', '(?:ba{3}b)a'),
            array('a{2}(?:ba)aa', 'a{2}ba{3}'),
            array('aa(?:ba)', 'a{2}(?:ba)'),
            array('(?:ab)ab', '(?:ab){2}'),
            array('ab(?:ab)ab', '(?:ab){3}'),
            array('ab(?:ab)', '(?:ab){2}'),
            array('(?:abab)ab', '(?:ab){3}'),
            array('ab(?:abab)ab', '(?:ab){4}'),
            array('ab(?:abab)', '(?:ab){3}'),
            array('(?:a)bab', '(?:ab){2}'),
            array('a(?:b)ab', '(?:ab){2}'),
            array('ab(?:a)b', '(?:ab){2}'),
            array('aba(?:b)', '(?:ab){2}'),

            array('a(?:a)', 'a{2}'),
            array('(?:a)a', 'a{2}'),
            array('a(?:a)a', 'a{3}'),
            array('aa(?:aa)aa', 'a{6}'),
            array('a(?:ab)', 'a{2}b'),
            array('(?:ab)a', '(?:ab)a'),
            array('a(?:ab)a', 'a{2}ba'),
            array('a(?:ba)', 'a(?:ba)'),
            array('(?:ba)a', 'ba{2}'),
            array('a(?:ba)a', 'aba{2}'),

            array('ab(?:ab)', '(?:ab){2}'),
            array('(?:ab)ab', '(?:ab){2}'),
            array('ab(?:ab)ab', '(?:ab){3}'),
            array('abab(?:abab)abab', '(?:ab){6}'),
            array('ab(?:abc)', '(?:ab){2}c'),
            array('(?:abc)ab', '(?:abc)ab'),
            array('ab(?:abc)ab', '(?:ab){2}cab'),
            array('ab(?:cab)', 'ab(?:cab)'),
            array('(?:cab)ab', 'c(?:ab){2}'),
            array('ab(?:cab)ab', 'abc(?:ab){2}'),

            array('(?:a)(?:a)', 'a{2}'),
            array('a(?:a)(?:a)', 'a{3}'),
            array('(?:a)(?:a)(?:a)', 'a{3}'),
            array('(?:a)(?:a)a', 'a{3}'),
            array('(?:a)a(?:a)', 'a{3}'),
            array('(?:a)a(?:aa)aa', 'a{6}'),
            array('(?:a)a(?:aa)a(?:a)', 'a{6}'),
            array('aa(?:aa)a(?:a)', 'a{6}'),
            array('a(?:a)(?:aa)(?:a)a', 'a{6}'),
            array('a(?:a)(?:aa)aa', 'a{6}'),
            array('aa(?:aa)(?:a)a', 'a{6}'),
            array('(?:a)(?:ab)', 'a{2}b'),
            array('(?:ab)(?:a)', '(?:ab)(?:a)'),
            array('(?:a)(?:ab)a', 'a{2}ba'),
            array('(?:a)(?:ab)(?:a)', 'a{2}b(?:a)'),
            array('a(?:ab)(?:a)', 'a{2}b(?:a)'),
            array('(?:a)(?:ba)', '(?:a)(?:ba)'),
            array('(?:ba)(?:a)', 'ba{2}'),
            array('(?:a)(?:ba)(?:a)', '(?:a)ba{2}'),
            array('(?:a)(?:ba)a', '(?:a)ba{2}'),
            array('a(?:ba)(?:a)', 'aba{2}'),

            array('(?:ab)(?:ab)', '(?:ab){2}'),
            array('(?:ab)(?:a)b', '(?:ab){2}'),
            array('(?:ab)a(?:b)', '(?:ab){2}'),
            array('(?:a)b(?:ab)', '(?:ab){2}'),
            array('a(?:b)(?:ab)', '(?:ab){2}'),
            array('(?:ab)(?:ab)ab', '(?:ab){3}'),
            array('ab(?:ab)(?:ab)', '(?:ab){3}'),
            array('(?:ab)(?:ab)(?:ab)', '(?:ab){3}'),
            array('(?:a)bab(?:abab)abab', '(?:ab){6}'),
            array('a(?:b)ab(?:abab)abab', '(?:ab){6}'),
            array('ab(?:a)b(?:abab)abab', '(?:ab){6}'),
            array('aba(?:b)(?:abab)abab', '(?:ab){6}'),
            array('abab(?:abab)(?:a)bab', '(?:ab){6}'),
            array('abab(?:abab)a(?:b)ab', '(?:ab){6}'),
            array('abab(?:abab)ab(?:a)b', '(?:ab){6}'),
            array('abab(?:abab)aba(?:b)', '(?:ab){6}'),
            array('(?:ab)(?:abc)', '(?:ab){2}c'),
            array('(?:abc)(?:ab)', '(?:abc)(?:ab)'),
            array('(?:ab)(?:abc)ab', '(?:ab){2}cab'),
            array('ab(?:abc)(?:ab)', '(?:ab){2}c(?:ab)'),
            array('(?:ab)(?:cab)', '(?:ab)(?:cab)'),
            array('(?:cab)(?:ab)', 'c(?:ab){2}'),
            array('(?:ab)(?:cab)ab', '(?:ab)c(?:ab){2}'),
            array('ab(?:cab)(?:ab)', 'abc(?:ab){2}'),

            /*array('a(?>a)', 'a{2}'),
            array('(?>a)a', 'a{2}'),
            array('a(?>a)a', 'a{3}'),
            array('aa(?>aa)aa', 'a{6}'),
            array('a(?>ab)', 'a{2}b'),
            array('(?>ab)a', '(?>ab)a'),
            array('a(?>ab)a', 'a{2}ba'),
            array('a(?>ba)', 'a(?>ba)'),
            array('(?>ba)a', 'ba{2}'),
            array('a(?>ba)a', 'aba{2}'),

            array('ab(?>ab)', '(?>ab){2}'),
            array('(?>ab)ab', '(?>ab){2}'),
            array('ab(?>ab)ab', '(?>ab){3}'),
            array('abab(?>abab)abab', '(?>ab){6}'),
            array('ab(?>abc)', '(?>ab){2}c'),
            array('(?>abc)ab', '(?>abc)ab'),
            array('ab(?>abc)ab', '(?>ab){2}cab'),
            array('ab(?>cab)', 'ab(?>cab)'),
            array('(?>cab)ab', 'c(?>ab){2}'),
            array('ab(?>cab)ab', 'abc(?>ab){2}'),

            array('(?>a)(?>a)', 'a{2}'),
            array('a(?>a)(?>a)', 'a{3}'),
            array('(?>a)(?>a)(?>a)', 'a{3}'),
            array('(?>a)(?>a)a', 'a{3}'),
            array('(?>a)a(?>a)', 'a{3}'),
            array('(?>a)a(?>aa)aa', 'a{6}'),
            array('(?>a)a(?>aa)a(?>a)', 'a{6}'),
            array('aa(?>aa)a(?>a)', 'a{6}'),
            array('a(?>a)(?>aa)(?>a)a', 'a{6}'),
            array('a(?>a)(?>aa)aa', 'a{6}'),
            array('aa(?>aa)(?>a)a', 'a{6}'),
            array('(?>a)(?>ab)', 'a{2}b'),
            array('(?>ab)(?>a)', '(?>ab)(?>a)'),
            array('(?>a)(?>ab)a', 'a{2}ba'),
            array('(?>a)(?>ab)(?>a)', 'a{2}b(?>a)'),
            array('a(?>ab)(?>a)', 'a{2}b(?>a)'),
            array('(?>a)(?>ba)', '(?>a)(?>ba)'),
            array('(?>ba)(?>a)', 'ba{2}'),
            array('(?>a)(?>ba)(?>a)', '(?>a)ba{2}'),
            array('(?>a)(?>ba)a', '(?>a)ba{2}'),
            array('a(?>ba)(?>a)', 'aba{2}'),

            array('(?>ab)(?>ab)', '(?>ab){2}'),
            array('(?>ab)(?>a)b', '(?>ab){2}'),
            array('(?>ab)a(?>b)', '(?>ab){2}'),
            array('(?>a)b(?>ab)', '(?>ab){2}'),
            array('a(?>b)(?>ab)', '(?>ab){2}'),
            array('(?>ab)(?>ab)ab', '(?>ab){3}'),
            array('ab(?>ab)(?>ab)', '(?>ab){3}'),
            array('(?>ab)(?>ab)(?>ab)', '(?>ab){3}'),
            array('(?>a)bab(?>abab)abab', '(?>ab){6}'),
            array('a(?>b)ab(?>abab)abab', '(?>ab){6}'),
            array('ab(?>a)b(?>abab)abab', '(?>ab){6}'),
            array('aba(?>b)(?>abab)abab', '(?>ab){6}'),
            array('abab(?>abab)(?>a)bab', '(?>ab){6}'),
            array('abab(?>abab)a(?>b)ab', '(?>ab){6}'),
            array('abab(?>abab)ab(?>a)b', '(?>ab){6}'),
            array('abab(?>abab)aba(?>b)', '(?>ab){6}'),
            array('(?>ab)(?>abc)', '(?>ab){2}c'),
            array('(?>abc)(?>ab)', '(?>abc)(?>ab)'),
            array('(?>ab)(?>abc)ab', '(?>ab){2}cab'),
            array('ab(?>abc)(?>ab)', '(?>ab){2}c(?>ab)'),
            array('(?>ab)(?>cab)', '(?>ab)(?>cab)'),
            array('(?>cab)(?>ab)', 'c(?>ab){2}'),
            array('(?>ab)(?>cab)ab', '(?>ab)c(?>ab){2}'),
            array('ab(?>cab)(?>ab)', 'abc(?>ab){2}'),*/

            array('[a]aa', 'a{3}'),
            array('a[a]a', 'a{3}'),
            array('aa[a]', 'a{3}'),
            array('[a]bab', '(?:ab){2}'),
            array('a[b]ab', '(?:ab){2}'),
            array('ab[a]b', '(?:ab){2}'),
            array('aba[b]', '(?:ab){2}'),
            array('(?:)aa', '(?:)a{2}'),
            array('a(?:)a', 'a{2}'),
            array('aa(?:)', 'a{2}(?:)'),
            array('(?:a|c)(?:c|a)', '(?:a|c){2}'),
            array('(?:ab|c)(?:c|ab)', '(?:ab|c){2}'),
            array('a(?:ab|c)(?:c|ab)', 'a(?:ab|c){2}'),
            array('(?:ab|c)(?:c|ab)a', '(?:ab|c){2}a'),
            array('[ab](?:a|b)', '[ab]{2}'),
            array('[ab](?:[ab])', '[ab]{2}'),
            array('a|aa', 'a{1,2}'),
            array('a|a{2}', 'a{1,2}'),
            array('(a|aa)', '(a{1,2})'),
            array('(a|a{2})', '(a{1,2})'),
            array('(?:a|aa)', '(?:a{1,2})'),
            array('(?:a|a{2})', '(?:a{1,2})'),
            array('aa?', 'a{1,2}'),
            array('aa+', 'a{2,}'),
            array('aa*', 'a+'),
            // Cast to quantifiers: complex tests
            // Quantifier? , A lot of single characters
            array('aaa?', 'a{2,3}'),
            array('aa?a', 'a{2,3}'),
            array('a?aa', 'a{2,3}'),
            array('a?a?a', 'a{1,3}'),
            array('aa?a?', 'a{1,3}'),
            array('a?aa?', 'a{1,3}'),
            array('a?a?a?', 'a{0,3}'),
            array('aa(?:a)?', 'a{2,3}'),
            array('aa?(?:a)?', 'a{1,3}'),
            array('a?a(?:a)?', 'a{1,3}'),
            array('a?a?(?:a)?', 'a{0,3}'),
            array('aa(?:a?)', 'a{2,3}'),
            array('aa?(?:a?)', 'a{1,3}'),
            array('a?a(?:a?)', 'a{1,3}'),
            array('a?a?(?:a?)', 'a{0,3}'),
            array('aa(?:a)?(?:a)?', 'a{2,4}'),
            array('aa?(?:a)?(?:a)?', 'a{1,4}'),
            array('a?a(?:a)?(?:a)?', 'a{1,4}'),
            array('a?a?(?:a)?(?:a)?', 'a{0,4}'),
            array('aa(?:a?)(?:a?)', 'a{2,4}'),
            array('aa?(?:a?)(?:a?)', 'a{1,4}'),
            array('a?a(?:a?)(?:a?)', 'a{1,4}'),
            array('a?a?(?:a?)(?:a?)', 'a{0,4}'),
            array('aa(?:a?)(?:a)?', 'a{2,4}'),
            array('aa?(?:a?)(?:a)?', 'a{1,4}'),
            array('a?a(?:a?)(?:a)?', 'a{1,4}'),
            array('a?a?(?:a?)(?:a)?', 'a{0,4}'),
            array('aa(?:a)?(?:a?)', 'a{2,4}'),
            array('aa?(?:a)?(?:a?)', 'a{1,4}'),
            array('a?a(?:a)?(?:a?)', 'a{1,4}'),
            array('a?a?(?:a)?(?:a?)', 'a{0,4}'),
            array('aa(a)?', 'a{2,3}'),
            array('aa?(a)?', 'a{1,3}'),
            array('a?a(a)?', 'a{1,3}'),
            array('a?a?(a)?', 'a{0,3}'),
            array('aa(a?)', 'a{2,3}'),
            array('aa?(a?)', 'a{1,3}'),
            array('a?a(a?)', 'a{1,3}'),
            array('a?a?(a?)', 'a{0,3}'),
            array('aa(a)?(a)?', 'a{2,4}'),
            array('aa?(a)?(a)?', 'a{1,4}'),
            array('a?a(a)?(a)?', 'a{1,4}'),
            array('a?a?(a)?(a)?', 'a{0,4}'),
            array('aa(a?)(a?)', 'a{2,4}'),
            array('aa?(a?)(a?)', 'a{1,4}'),
            array('a?a(a?)(a?)', 'a{1,4}'),
            array('a?a?(a?)(a?)', 'a{0,4}'),
            array('aa(a?)(a)?', 'a{2,4}'),
            array('aa?(a?)(a)?', 'a{1,4}'),
            array('a?a(a?)(a)?', 'a{1,4}'),
            array('a?a?(a?)(a)?', 'a{0,4}'),
            array('aa(a)?(a?)', 'a{2,4}'),
            array('aa?(a)?(a?)', 'a{1,4}'),
            array('a?a(a)?(a?)', 'a{1,4}'),
            array('a?a?(a)?(a?)', 'a{0,4}'),
            array('(aa)(a)?', 'a{2,3}'),
            array('(aa)?(a)?', '(a{2})?(a)?'),
            array('(aa?)(a)?', 'a{1,3}'),
            array('(a?a)(a)?', 'a{1,3}'),
            array('(a?a?)(a)?', 'a{0,3}'),
            array('(a?a)?(a)?', '(a{1,2})?(a)?'),
            array('(aa?)?(a)?', '(a{1,2})?(a)?'),
            array('(a?a?)?(a)?', '(a{0,2})?(a)?'),
            array('(aa)(a?)', 'a{2,3}'),
            array('(aa)?(a?)', '(a{2})?(a?)'),
            array('(aa?)(a?)', 'a{1,3}'),
            array('(a?a)(a?)', 'a{1,3}'),
            array('(a?a?)(a?)', 'a{0,3}'),
            array('(a?a)?(a?)', '(a{1,2})?(a?)'),
            array('(aa?)?(a?)', '(a{1,2})?(a?)'),
            array('(a?a?)?(a?)', '(a{0,2})?(a?)'),
            array('(aa)(?:a)?', 'a{2,3}'),
            array('(aa)?(?:a)?', '(a{2})?(?:a)?'),
            array('(aa?)(?:a)?', 'a{1,3}'),
            array('(a?a)(?:a)?', 'a{1,3}'),
            array('(a?a?)(?:a)?', 'a{0,3}'),
            array('(a?a)?(?:a)?', '(a{1,2})?(?:a)?'),
            array('(aa?)?(?:a)?', '(a{1,2})?(?:a)?'),
            array('(a?a?)?(?:a)?', '(a{0,2})?(?:a)?'),
            array('(aa)(?:a?)', 'a{2,3}'),
            array('(aa)?(?:a?)', '(a{2})?(?:a?)'),
            array('(aa?)(?:a?)', 'a{1,3}'),
            array('(a?a)(?:a?)', 'a{1,3}'),
            array('(a?a?)(?:a?)', 'a{0,3}'),
            array('(a?a)?(?:a?)', '(a{1,2})?(?:a?)'),
            array('(aa?)?(?:a?)', '(a{1,2})?(?:a?)'),
            array('(a?a?)?(?:a?)', '(a{0,2})?(?:a?)'),

            array('aa(a)?\1', 'a{2}(a)?\1'),
            array('aa?(a)?\1', 'a{1,2}(a)?\1'),
            array('a?a(a)?\1', 'a{1,2}(a)?\1'),
            array('a?a?(a)?\1', 'a{0,2}(a)?\1'),
            array('aa(a?)\1', 'a{2}(a?)\1'),
            array('aa?(a?)\1', 'a{1,2}(a?)\1'),
            array('a?a(a?)\1', 'a{1,2}(a?)\1'),
            array('a?a?(a?)\1', 'a{0,2}(a?)\1'),
            array('aa(a)?(a)?\1', 'a{2}(a)?(a)?\1'),
            array('aa?(a)?(a)?\1', 'a{1,2}(a)?(a)?\1'),
            array('a?a(a)?(a)?\1', 'a{1,2}(a)?(a)?\1'),
            array('a?a?(a)?(a)?\1', 'a{0,2}(a)?(a)?\1'),
            array('aa(a?)(a?)\1', 'a{2}(a?)(a?)\1'),
            array('aa?(a?)(a?)\1', 'a{1,2}(a?)(a?)\1'),
            array('a?a(a?)(a?)\1', 'a{1,2}(a?)(a?)\1'),
            array('a?a?(a?)(a?)\1', 'a{0,2}(a?)(a?)\1'),
            array('aa(a?)(a)?\1', 'a{2}(a?)(a)?\1'),
            array('aa?(a?)(a)?\1', 'a{1,2}(a?)(a)?\1'),
            array('a?a(a?)(a)?\1', 'a{1,2}(a?)(a)?\1'),
            array('a?a?(a?)(a)?\1', 'a{0,2}(a?)(a)?\1'),
            array('aa(a)?(a?)\1', 'a{2}(a)?(a?)\1'),
            array('aa?(a)?(a?)\1', 'a{1,2}(a)?(a?)\1'),
            array('a?a(a)?(a?)\1', 'a{1,2}(a)?(a?)\1'),
            array('a?a?(a)?(a?)\1', 'a{0,2}(a)?(a?)\1'),
            array('(aa)(a)?\1', '(a{2})(a)?\1'),
            array('(aa)?(a)?\1', '(a{2})?(a)?\1'),
            array('(aa?)(a)?\1', '(a{1,2})(a)?\1'),
            array('(a?a)(a)?\1', '(a{1,2})(a)?\1'),
            array('(a?a?)(a)?\1', '(a{0,2})(a)?\1'),
            array('(a?a)?(a)?\1', '(a{1,2})?(a)?\1'),
            array('(aa?)?(a)?\1', '(a{1,2})?(a)?\1'),
            array('(a?a?)?(a)?\1', '(a{0,2})?(a)?\1'),
            array('(aa)(a?)\1', '(a{2})(a?)\1'),
            array('(aa)?(a?)\1', '(a{2})?(a?)\1'),
            array('(aa?)(a?)\1', '(a{1,2})(a?)\1'),
            array('(a?a)(a?)\1', '(a{1,2})(a?)\1'),
            array('(a?a?)(a?)\1', '(a{0,2})(a?)\1'),
            array('(a?a)?(a?)\1', '(a{1,2})?(a?)\1'),
            array('(aa?)?(a?)\1', '(a{1,2})?(a?)\1'),
            array('(a?a?)?(a?)\1', '(a{0,2})?(a?)\1'),
            array('(aa)(?:a)?\1', '(a{2})(?:a)?\1'),
            array('(aa)?(?:a)?\1', '(a{2})?(?:a)?\1'),
            array('(aa?)(?:a)?\1', '(a{1,2})(?:a)?\1'),
            array('(a?a)(?:a)?\1', '(a{1,2})(?:a)?\1'),
            array('(a?a?)(?:a)?\1', '(a{0,2})(?:a)?\1'),
            array('(a?a)?(?:a)?\1', '(a{1,2})?(?:a)?\1'),
            array('(aa?)?(?:a)?\1', '(a{1,2})?(?:a)?\1'),
            array('(a?a?)?(?:a)?\1', '(a{0,2})?(?:a)?\1'),
            array('(aa)(?:a?)\1', '(a{2})(?:a?)\1'),
            array('(aa)?(?:a?)\1', '(a{2})?(?:a?)\1'),
            array('(aa?)(?:a?)\1', '(a{1,2})(?:a?)\1'),
            array('(a?a)(?:a?)\1', '(a{1,2})(?:a?)\1'),
            array('(a?a?)(?:a?)\1', '(a{0,2})(?:a?)\1'),
            array('(a?a)?(?:a?)\1', '(a{1,2})?(?:a?)\1'),
            array('(aa?)?(?:a?)\1', '(a{1,2})?(?:a?)\1'),
            array('(a?a?)?(?:a?)\1', '(a{0,2})?(?:a?)\1'),

            array('aa(a)?\2', 'a{2,3}\2'),
            array('aa?(a)?\2', 'a{1,3}\2'),
            array('a?a(a)?\2', 'a{1,3}\2'),
            array('a?a?(a)?\2', 'a{0,3}\2'),
            array('aa(a?)\2', 'a{2,3}\2'),
            array('aa?(a?)\2', 'a{1,3}\2'),
            array('a?a(a?)\2', 'a{1,3}\2'),
            array('a?a?(a?)\2', 'a{0,3}\2'),
            array('aa(a)?(a)?\2', 'a{2,3}(a)?\1'),
            array('aa?(a)?(a)?\2', 'a{1,3}(a)?\1'),
            array('a?a(a)?(a)?\2', 'a{1,3}(a)?\1'),
            array('a?a?(a)?(a)?\2', 'a{0,3}(a)?\1'),
            array('aa(a?)(a?)\2', 'a{2,3}(a?)\1'),
            array('aa?(a?)(a?)\2', 'a{1,3}(a?)\1'),
            array('a?a(a?)(a?)\2', 'a{1,3}(a?)\1'),
            array('a?a?(a?)(a?)\2', 'a{0,3}(a?)\1'),
            array('aa(a?)(a)?\2', 'a{2,3}(a)?\1'),
            array('aa?(a?)(a)?\2', 'a{1,3}(a)?\1'),
            array('a?a(a?)(a)?\2', 'a{1,3}(a)?\1'),
            array('a?a?(a?)(a)?\2', 'a{0,3}(a)?\1'),
            array('aa(a)?(a?)\2', 'a{2,3}(a?)\1'),
            array('aa?(a)?(a?)\2', 'a{1,3}(a?)\1'),
            array('a?a(a)?(a?)\2', 'a{1,3}(a?)\1'),
            array('a?a?(a)?(a?)\2', 'a{0,3}(a?)\1'),
            array('(aa)(a)?\2', '(a{2})(a)?\2'),
            array('(aa)?(a)?\2', '(a{2})?(a)?\2'),
            array('(aa?)(a)?\2', '(a{1,2})(a)?\2'),
            array('(a?a)(a)?\2', '(a{1,2})(a)?\2'),
            array('(a?a?)(a)?\2', '(a{0,2})(a)?\2'),
            array('(a?a)?(a)?\2', '(a{1,2})?(a)?\2'),
            array('(aa?)?(a)?\2', '(a{1,2})?(a)?\2'),
            array('(a?a?)?(a)?\2', '(a{0,2})?(a)?\2'),
            array('(aa)(a?)\2', '(a{2})(a?)\2'),
            array('(aa)?(a?)\2', '(a{2})?(a?)\2'),
            array('(aa?)(a?)\2', '(a{1,2})(a?)\2'),
            array('(a?a)(a?)\2', '(a{1,2})(a?)\2'),
            array('(a?a?)(a?)\2', '(a{0,2})(a?)\2'),
            array('(a?a)?(a?)\2', '(a{1,2})?(a?)\2'),
            array('(aa?)?(a?)\2', '(a{1,2})?(a?)\2'),
            array('(a?a?)?(a?)\2', '(a{0,2})?(a?)\2'),
            array('(aa)(?:a)?\2', 'a{2,3}\2'),
            array('(aa)?(?:a)?\2', '(a{2})?(?:a)?\2'),
            array('(aa?)(?:a)?\2', 'a{1,3}\2'),
            array('(a?a)(?:a)?\2', 'a{1,3}\2'),
            array('(a?a?)(?:a)?\2', 'a{0,3}\2'),
            array('(a?a)?(?:a)?\2', '(a{1,2})?(?:a)?\2'),
            array('(aa?)?(?:a)?\2', '(a{1,2})?(?:a)?\2'),
            array('(a?a?)?(?:a)?\2', '(a{0,2})?(?:a)?\2'),
            array('(aa)(?:a?)\2', 'a{2,3}\2'),
            array('(aa)?(?:a?)\2', '(a{2})?(?:a?)\2'),
            array('(aa?)(?:a?)\2', 'a{1,3}\2'),
            array('(a?a)(?:a?)\2', 'a{1,3}\2'),
            array('(a?a?)(?:a?)\2', 'a{0,3}\2'),
            array('(a?a)?(?:a?)\2', '(a{1,2})?(?:a?)\2'),
            array('(aa?)?(?:a?)\2', '(a{1,2})?(?:a?)\2'),
            array('(a?a?)?(?:a?)\2', '(a{0,2})?(?:a?)\2'),

            array('(?:aa)(?:a)?', 'a{2,3}'),
            array('(?:aa)?(?:a)?', '(?:a{2})?(?:a)?'),
            array('(?:aa?)(?:a)?', 'a{1,3}'),
            array('(?:a?a)(?:a)?', 'a{1,3}'),
            array('(?:a?a?)(?:a)?', 'a{0,3}'),
            array('(?:a?a)?(?:a)?', '(?:a{1,2})?(?:a)?'),
            array('(?:aa?)?(?:a)?', '(?:a{1,2})?(?:a)?'),
            array('(?:a?a?)?(?:a)?', '(?:a{0,2})?(?:a)?'),
            array('(?:aa)(?:a?)', 'a{2,3}'),
            array('(?:aa)?(?:a?)', '(?:a{2})?(?:a?)'),
            array('(?:aa?)(?:a?)', 'a{1,3}'),
            array('(?:a?a)(?:a?)', 'a{1,3}'),
            array('(?:a?a?)(?:a?)', 'a{0,3}'),
            array('(?:a?a)?(?:a?)', '(?:a{1,2})?(?:a?)'),
            array('(?:aa?)?(?:a?)', '(?:a{1,2})?(?:a?)'),
            array('(?:a?a?)?(?:a?)', '(?:a{0,2})?(?:a?)'),
            // Quantifier? a plurality of pairs of characters
            array('abab?', 'abab?'),
            array('aba?b', 'aba?b'),
            array('ab?ab', 'ab?ab'),
            array('a?bab', 'a?bab'),
            array('ababab?', '(?:ab){2}ab?'),
            array('ababa?b', '(?:ab){2}a?b'),
            array('abab(?:ab)?', '(?:ab){2,3}'),
            array('abab(?:ab?)', '(?:ab){2}(?:ab?)'),
            array('abab(?:a?b)', '(?:ab){2}(?:a?b)'),
            array('abab(?:ab)?(?:ab)?', '(?:ab){2,4}'),
            array('abab(?:ab?)(?:ab?)', '(?:ab){2}(?:ab?)(?:ab?)'),
            array('(?:ab){2}(?:ab?)(?:ab?)', '(?:ab){2}(?:ab?){2}'),
            array('abab(?:a?b)(?:ab?)', '(?:ab){2}(?:a?b)(?:ab?)'),
            array('abab(?:ab?)(?:a?b)', '(?:ab){2}(?:ab?)(?:a?b)'),
            array('abab(?:ab?)(?:ab)?', '(?:ab){2}(?:ab?)(?:ab)?'),
            array('abab(?:a?b)(?:ab)?', '(?:ab){2}(?:a?b)(?:ab)?'),
            array('abab(?:ab)?(?:ab?)', '(?:ab){2,3}(?:ab?)'),
            array('abab(?:ab)?(?:a?b)', '(?:ab){2,3}(?:a?b)'),
            array('abab(ab)?', '(?:ab){2}(ab)?'),
            array('abab(ab)?(ab)?', '(?:ab){2}(ab)?(ab)?'),
            array('abab(ab?)(ab?)', '(?:ab){2}(ab?)(ab?)'),
            array('abab(a?b)(ab?)', '(?:ab){2}(a?b)(ab?)'),
            array('abab(ab?)(a?b)', '(?:ab){2}(ab?)(a?b)'),
            array('abab(ab?)(ab)?', '(?:ab){2}(ab?)(ab)?'),
            array('abab(a?b)(ab)?', '(?:ab){2}(a?b)(ab)?'),
            array('abab(ab)?(ab?)', '(?:ab){2}(ab)?(ab?)'),
            array('abab(ab)?(a?b)', '(?:ab){2}(ab)?(a?b)'),
            array('(abab)(ab)?', '((?:ab){2})(ab)?'),
            array('(abab)(ab?)', '((?:ab){2})(ab?)'),
            array('(abab)(a?b)', '((?:ab){2})(a?b)'),
            array('(abab)(?:ab)?', '(?:ab){2,3}'),
            array('(abab)(?:ab?)', '((?:ab){2})(?:ab?)'),
            array('(abab)(?:a?b)', '((?:ab){2})(?:a?b)'),
            array('(?:abab)(?:ab)?', '(?:ab){2,3}'),
            array('(?:abab)(?:ab?)', '(?:(?:ab){2})(?:ab?)'),
            array('(?:abab)(?:a?b)', '(?:(?:ab){2})(?:a?b)'),
            array('aaa+', 'a{3,}'),
            array('aa+a', 'a{3,}'),
            array('a+aa', 'a{3,}'),
            // Quantifier + set of single characters
            array('a+a+a', 'a{3,}'),
            array('aa+a+', 'a{3,}'),
            array('a+aa+', 'a{3,}'),
            array('a+a+a+', 'a{3,}'),
            array('aa(?:a)+', 'a{3,}'),
            array('aa+(?:a)+', 'a{3,}'),
            array('a+a(?:a)+', 'a{3,}'),
            array('a+a+(?:a)+', 'a{3,}'),
            array('aa(?:a+)', 'a{3,}'),
            array('aa+(?:a+)', 'a{3,}'),
            array('a+a(?:a+)', 'a{3,}'),
            array('a+a+(?:a+)', 'a{3,}'),
            array('aa(?:a)+(?:a)+', 'a{4,}'),
            array('aa+(?:a)+(?:a)+', 'a{4,}'),
            array('a+a(?:a)+(?:a)+', 'a{4,}'),
            array('a+a+(?:a)+(?:a)+', 'a{4,}'),
            array('aa(?:a+)(?:a+)', 'a{4,}'),
            array('aa+(?:a+)(?:a+)', 'a{4,}'),
            array('a+a(?:a+)(?:a+)', 'a{4,}'),
            array('a+a+(?:a+)(?:a+)', 'a{4,}'),
            array('aa(?:a+)(?:a)+', 'a{4,}'),
            array('aa+(?:a+)(?:a)+', 'a{4,}'),
            array('a+a(?:a+)(?:a)+', 'a{4,}'),
            array('a+a+(?:a+)(?:a)+', 'a{4,}'),
            array('aa(?:a)+(?:a+)', 'a{4,}'),
            array('aa+(?:a)+(?:a+)', 'a{4,}'),
            array('a+a(?:a)+(?:a+)', 'a{4,}'),
            array('a+a+(?:a)+(?:a+)', 'a{4,}'),

            array('aa(a)+', 'a{3,}'),
            array('aa+(a)+', 'a{3,}'),
            array('a+a(a)+', 'a{3,}'),
            array('a+a+(a)+', 'a{3,}'),
            array('aa(a+)', 'a{3,}'),
            array('aa+(a+)', 'a{3,}'),
            array('a+a(a+)', 'a{3,}'),
            array('a+a+(a+)', 'a{3,}'),
            array('aa(a)+(a)+', 'a{4,}'),
            array('aa+(a)+(a)+', 'a{4,}'),
            array('a+a(a)+(a)+', 'a{4,}'),
            array('a+a+(a)+(a)+', 'a{4,}'),
            array('aa(a+)(a+)', 'a{4,}'),
            array('aa+(a+)(a+)', 'a{4,}'),
            array('a+a(a+)(a+)', 'a{4,}'),
            array('a+a+(a+)(a+)', 'a{4,}'),
            array('aa(a+)(a)+', 'a{4,}'),
            array('aa+(a+)(a)+', 'a{4,}'),
            array('a+a(a+)(a)+', 'a{4,}'),
            array('a+a+(a+)(a)+', 'a{4,}'),
            array('aa(a)+(a+)', 'a{4,}'),
            array('aa+(a)+(a+)', 'a{4,}'),
            array('a+a(a)+(a+)', 'a{4,}'),
            array('a+a+(a)+(a+)', 'a{4,}'),
            array('(aa)(a)+', 'a{3,}'),
            array('(aa)+(a)+', '(a{2})+(a)+'),
            array('(aa+)(a)+', 'a{3,}'),
            array('(a+a)(a)+', 'a{3,}'),
            array('(a+a+)(a)+', 'a{3,}'),
            array('(a+a)+(a)+', '(a{2,})+(a)+'),
            array('(aa+)+(a)+', '(a{2,})+(a)+'),
            array('(a+a+)+(a)+', '(a{2,})+(a)+'),
            array('(aa)(a+)', 'a{3,}'),
            array('(aa)+(a+)', '(a{2})+(a+)'),
            array('(aa+)(a+)', 'a{3,}'),
            array('(a+a)(a+)', 'a{3,}'),
            array('(a+a+)(a+)', 'a{3,}'),
            array('(a+a)+(a+)', '(a{2,})+(a+)'),
            array('(aa+)+(a+)', '(a{2,})+(a+)'),
            array('(a+a+)+(a+)', '(a{2,})+(a+)'),
            array('(aa)(?:a)+', 'a{3,}'),
            array('(aa)+(?:a)+', '(a{2})+(?:a)+'),
            array('(aa+)(?:a)+', 'a{3,}'),
            array('(a+a)(?:a)+', 'a{3,}'),
            array('(a+a+)(?:a)+', 'a{3,}'),
            array('(a+a)+(?:a)+', '(a{2,})+(?:a)+'),
            array('(aa+)+(?:a)+', '(a{2,})+(?:a)+'),
            array('(a+a+)+(?:a)+', '(a{2,})+(?:a)+'),
            array('(aa)(?:a+)', 'a{3,}'),
            array('(aa)+(?:a+)', '(a{2})+(?:a+)'),
            array('(aa+)(?:a+)', 'a{3,}'),
            array('(a+a)(?:a+)', 'a{3,}'),
            array('(a+a+)(?:a+)', 'a{3,}'),
            array('(a+a)+(?:a+)', '(a{2,})+(?:a+)'),
            array('(aa+)+(?:a+)', '(a{2,})+(?:a+)'),
            array('(a+a+)+(?:a+)', '(a{2,})+(?:a+)'),

            array('aa(a)+\1', 'a{2}(a)+\1'),
            array('aa+(a)+\1', 'a{2,}(a)+\1'),
            array('a+a(a)+\1', 'a{2,}(a)+\1'),
            array('a+a+(a)+\1', 'a{2,}(a)+\1'),
            array('aa(a+)\1', 'a{2}(a+)\1'),
            array('aa+(a+)\1', 'a{2,}(a+)\1'),
            array('a+a(a+)\1', 'a{2,}(a+)\1'),
            array('a+a+(a+)\1', 'a{2,}(a+)\1'),
            array('aa(a)+(a)+\1', 'a{2}(a)+(a)+\1'),
            array('aa+(a)+(a)+\1', 'a{2,}(a)+(a)+\1'),
            array('a+a(a)+(a)+\1', 'a{2,}(a)+(a)+\1'),
            array('a+a+(a)+(a)+\1', 'a{2,}(a)+(a)+\1'),
            array('aa(a+)(a+)\1', 'a{2}(a+)(a+)\1'),
            array('aa+(a+)(a+)\1', 'a{2,}(a+)(a+)\1'),
            array('a+a(a+)(a+)\1', 'a{2,}(a+)(a+)\1'),
            array('a+a+(a+)(a+)\1', 'a{2,}(a+)(a+)\1'),
            array('aa(a+)(a)+\1', 'a{2}(a+)(a)+\1'),
            array('aa+(a+)(a)+\1', 'a{2,}(a+)(a)+\1'),
            array('a+a(a+)(a)+\1', 'a{2,}(a+)(a)+\1'),
            array('a+a+(a+)(a)+\1', 'a{2,}(a+)(a)+\1'),
            array('aa(a)+(a+)\1', 'a{2}(a)+(a+)\1'),
            array('aa+(a)+(a+)\1', 'a{2,}(a)+(a+)\1'),
            array('a+a(a)+(a+)\1', 'a{2,}(a)+(a+)\1'),
            array('a+a+(a)+(a+)\1', 'a{2,}(a)+(a+)\1'),
            array('(aa)(a)+\1', '(a{2})(a)+\1'),
            array('(aa)+(a)+\1', '(a{2})+(a)+\1'),
            array('(aa+)(a)+\1', '(a{2,})(a)+\1'),
            array('(a+a)(a)+\1', '(a{2,})(a)+\1'),
            array('(a+a+)(a)+\1', '(a{2,})(a)+\1'),
            array('(a+a)+(a)+\1', '(a{2,})+(a)+\1'),
            array('(aa+)+(a)+\1', '(a{2,})+(a)+\1'),
            array('(a+a+)+(a)+\1', '(a{2,})+(a)+\1'),
            array('(aa)(a+)\1', '(a{2})(a+)\1'),
            array('(aa)+(a+)\1', '(a{2})+(a+)\1'),
            array('(aa+)(a+)\1', '(a{2,})(a+)\1'),
            array('(a+a)(a+)\1', '(a{2,})(a+)\1'),
            array('(a+a+)(a+)\1', '(a{2,})(a+)\1'),
            array('(a+a)+(a+)\1', '(a{2,})+(a+)\1'),
            array('(aa+)+(a+)\1', '(a{2,})+(a+)\1'),
            array('(a+a+)+(a+)\1', '(a{2,})+(a+)\1'),
            array('(aa)(?:a)+\1', '(a{2})(?:a)+\1'),
            array('(aa)+(?:a)+\1', '(a{2})+(?:a)+\1'),
            array('(aa+)(?:a)+\1', '(a{2,})(?:a)+\1'),
            array('(a+a)(?:a)+\1', '(a{2,})(?:a)+\1'),
            array('(a+a+)(?:a)+\1', '(a{2,})(?:a)+\1'),
            array('(a+a)+(?:a)+\1', '(a{2,})+(?:a)+\1'),
            array('(aa+)+(?:a)+\1', '(a{2,})+(?:a)+\1'),
            array('(a+a+)+(?:a)+\1', '(a{2,})+(?:a)+\1'),
            array('(aa)(?:a+)\1', '(a{2})(?:a+)\1'),
            array('(aa)+(?:a+)\1', '(a{2})+(?:a+)\1'),
            array('(aa+)(?:a+)\1', '(a{2,})(?:a+)\1'),
            array('(a+a)(?:a+)\1', '(a{2,})(?:a+)\1'),
            array('(a+a+)(?:a+)\1', '(a{2,})(?:a+)\1'),
            array('(a+a)+(?:a+)\1', '(a{2,})+(?:a+)\1'),
            array('(aa+)+(?:a+)\1', '(a{2,})+(?:a+)\1'),
            array('(a+a+)+(?:a+)\1', '(a{2,})+(?:a+)\1'),

            array('aa(a)+\2', 'a{3,}\2'),
            array('aa+(a)+\2', 'a{3,}\2'),
            array('a+a(a)+\2', 'a{3,}\2'),
            array('a+a+(a)+\2', 'a{3,}\2'),
            array('aa(a+)\2', 'a{3,}\2'),
            array('aa+(a+)\2', 'a{3,}\2'),
            array('a+a(a+)\2', 'a{3,}\2'),
            array('a+a+(a+)\2', 'a{3,}\2'),
            array('aa(a)+(a)+\2', 'a{3,}(a)+\1'),
            array('aa+(a)+(a)+\2', 'a{3,}(a)+\1'),
            array('a+a(a)+(a)+\2', 'a{3,}(a)+\1'),
            array('a+a+(a)+(a)+\2', 'a{3,}(a)+\1'),
            array('aa(a+)(a+)\2', 'a{3,}(a+)\1'),
            array('aa+(a+)(a+)\2', 'a{3,}(a+)\1'),
            array('a+a(a+)(a+)\2', 'a{3,}(a+)\1'),
            array('a+a+(a+)(a+)\2', 'a{3,}(a+)\1'),
            array('aa(a+)(a)+\2', 'a{3,}(a)+\1'),
            array('aa+(a+)(a)+\2', 'a{3,}(a)+\1'),
            array('a+a(a+)(a)+\2', 'a{3,}(a)+\1'),
            array('a+a+(a+)(a)+\2', 'a{3,}(a)+\1'),
            array('aa(a)+(a+)\2', 'a{3,}(a+)\1'),
            array('aa+(a)+(a+)\2', 'a{3,}(a+)\1'),
            array('a+a(a)+(a+)\2', 'a{3,}(a+)\1'),
            array('a+a+(a)+(a+)\2', 'a{3,}(a+)\1'),
            array('(aa)(a)+\2', '(a{2})(a)+\2'),
            array('(aa)+(a)+\2', '(a{2})+(a)+\2'),
            array('(aa+)(a)+\2', '(a{2,})(a)+\2'),
            array('(a+a)(a)+\2', '(a{2,})(a)+\2'),
            array('(a+a+)(a)+\2', '(a{2,})(a)+\2'),
            array('(a+a)+(a)+\2', '(a{2,})+(a)+\2'),
            array('(aa+)+(a)+\2', '(a{2,})+(a)+\2'),
            array('(a+a+)+(a)+\2', '(a{2,})+(a)+\2'),
            array('(aa)(a+)\2', '(a{2})(a+)\2'),
            array('(aa)+(a+)\2', '(a{2})+(a+)\2'),
            array('(aa+)(a+)\2', '(a{2,})(a+)\2'),
            array('(a+a)(a+)\2', '(a{2,})(a+)\2'),
            array('(a+a+)(a+)\2', '(a{2,})(a+)\2'),
            array('(a+a)+(a+)\2', '(a{2,})+(a+)\2'),
            array('(aa+)+(a+)\2', '(a{2,})+(a+)\2'),
            array('(a+a+)+(a+)\2', '(a{2,})+(a+)\2'),
            array('(aa)(?:a)+\2', 'a{3,}\2'),
            array('(aa)+(?:a)+\2', '(a{2})+(?:a)+\2'),
            array('(aa+)(?:a)+\2', 'a{3,}\2'),
            array('(a+a)(?:a)+\2', 'a{3,}\2'),
            array('(a+a+)(?:a)+\2', 'a{3,}\2'),
            array('(a+a)+(?:a)+\2', '(a{2,})+(?:a)+\2'),
            array('(aa+)+(?:a)+\2', '(a{2,})+(?:a)+\2'),
            array('(a+a+)+(?:a)+\2', '(a{2,})+(?:a)+\2'),
            array('(aa)(?:a+)\2', 'a{3,}\2'),
            array('(aa)+(?:a+)\2', '(a{2})+(?:a+)\2'),
            array('(aa+)(?:a+)\2', 'a{3,}\2'),
            array('(a+a)(?:a+)\2', 'a{3,}\2'),
            array('(a+a+)(?:a+)\2', 'a{3,}\2'),
            array('(a+a)+(?:a+)\2', '(a{2,})+(?:a+)\2'),
            array('(aa+)+(?:a+)\2', '(a{2,})+(?:a+)\2'),
            array('(a+a+)+(?:a+)\2', '(a{2,})+(?:a+)\2'),

            array('(?:aa)(?:a)+', 'a{3,}'),
            array('(?:aa)+(?:a)+', '(?:a{2})+(?:a)+'),
            array('(?:aa+)(?:a)+', 'a{3,}'),
            array('(?:a+a)(?:a)+', 'a{3,}'),
            array('(?:a+a+)(?:a)+', 'a{3,}'),
            array('(?:a+a)+(?:a)+', '(?:a{2,})+(?:a)+'),
            array('(?:aa+)+(?:a)+', '(?:a{2,})+(?:a)+'),
            array('(?:a+a+)+(?:a)+', '(?:a{2,})+(?:a)+'),
            array('(?:aa)(?:a+)', 'a{3,}'),
            array('(?:aa)+(?:a+)', '(?:a{2})+(?:a+)'),
            array('(?:aa+)(?:a+)', 'a{3,}'),
            array('(?:a+a)(?:a+)', 'a{3,}'),
            array('(?:a+a+)(?:a+)', 'a{3,}'),
            array('(?:a+a)+(?:a+)', '(?:a{2,})+(?:a+)'),
            array('(?:aa+)+(?:a+)', '(?:a{2,})+(?:a+)'),
            array('(?:a+a+)+(?:a+)', '(?:a{2,})+(?:a+)'),
            // Quantifier + set of delimiters
            array('abab+', 'abab+'),
            array('aba+b', 'aba+b'),
            array('ab+ab', 'ab+ab'),
            array('a+bab', 'a+bab'),
            array('ababab+', '(?:ab){2}ab+'),
            array('ababa+b', '(?:ab){2}a+b'),
            array('abab(?:ab)+', '(?:ab){3,}'),
            array('abab(?:ab+)', '(?:ab){2}(?:ab+)'),
            array('abab(?:a+b)', '(?:ab){2}(?:a+b)'),
            array('abab(?:ab)+(?:ab)+', '(?:ab){4,}'),
            array('abab(?:ab+)(?:ab+)', '(?:ab){2}(?:ab+)(?:ab+)'),
            array('(?:ab){2}(?:ab+)(?:ab+)', '(?:ab){2}(?:ab+){2}'),
            array('abab(?:a+b)(?:ab+)', '(?:ab){2}(?:a+b)(?:ab+)'),
            array('abab(?:ab+)(?:a+b)', '(?:ab){2}(?:ab+)(?:a+b)'),
            array('abab(?:ab+)(?:ab)+', '(?:ab){2}(?:ab+)(?:ab)+'),
            array('abab(?:a+b)(?:ab)+', '(?:ab){2}(?:a+b)(?:ab)+'),
            array('abab(?:ab)+(?:ab+)', '(?:ab){3,}(?:ab+)'),
            array('abab(?:ab)+(?:a+b)', '(?:ab){3,}(?:a+b)'),
            array('abab(ab)+', '(?:ab){2}(ab)+'),
            array('abab(ab)+(ab)+', '(?:ab){2}(ab)+(ab)+'),
            array('abab(ab+)(ab+)', '(?:ab){2}(ab+)(ab+)'),
            array('abab(a+b)(ab+)', '(?:ab){2}(a+b)(ab+)'),
            array('abab(ab+)(a+b)', '(?:ab){2}(ab+)(a+b)'),
            array('abab(ab+)(ab)+', '(?:ab){2}(ab+)(ab)+'),
            array('abab(a+b)(ab)+', '(?:ab){2}(a+b)(ab)+'),
            array('abab(ab)+(ab+)', '(?:ab){2}(ab)+(ab+)'),
            array('abab(ab)+(a+b)', '(?:ab){2}(ab)+(a+b)'),
            array('(abab)(ab)+', '((?:ab){2})(ab)+'),
            array('(abab)(ab+)', '((?:ab){2})(ab+)'),
            array('(abab)(a+b)', '((?:ab){2})(a+b)'),
            array('(abab)(?:ab)+', '(?:ab){3,}'),
            array('(abab)(?:ab+)', '((?:ab){2})(?:ab+)'),
            array('(abab)(?:a+b)', '((?:ab){2})(?:a+b)'),
            array('(?:abab)(?:ab)+', '(?:ab){3,}'),
            array('(?:abab)(?:ab+)', '(?:(?:ab){2})(?:ab+)'),
            array('(?:abab)(?:a+b)', '(?:(?:ab){2})(?:a+b)'),
            // Quantifier * set of single characters
            array('aaa*', 'a{2,}'),
            array('aa*a', 'a{2,}'),
            array('a*aa', 'a{2,}'),
            array('a*a*a', 'a+'),
            array('aa*a*', 'a+'),
            array('a*aa*', 'a+'),
            array('a*a*a*', 'a*'),
            array('aa(?:a)*', 'a{2,}'),
            array('aa*(?:a)*', 'a+'),
            array('a*a(?:a)*', 'a+'),
            array('a*a*(?:a)*', 'a*'),
            array('aa(?:a*)', 'a{2,}'),
            array('aa*(?:a*)', 'a+'),
            array('a*a(?:a*)', 'a+'),
            array('a*a*(?:a*)', 'a*'),
            array('aa(?:a)*(?:a)*', 'a{2,}'),
            array('aa*(?:a)*(?:a)*', 'a+'),
            array('a*a(?:a)*(?:a)*', 'a+'),
            array('a*a*(?:a)*(?:a)*', 'a*'),
            array('aa(?:a*)(?:a*)', 'a{2,}'),
            array('aa*(?:a*)(?:a*)', 'a+'),
            array('a*a(?:a*)(?:a*)', 'a+'),
            array('a*a*(?:a*)(?:a*)', 'a*'),
            array('aa(?:a*)(?:a)*', 'a{2,}'),
            array('aa*(?:a*)(?:a)*', 'a+'),
            array('a*a(?:a*)(?:a)*', 'a+'),
            array('a*a*(?:a*)(?:a)*', 'a*'),
            array('aa(?:a)*(?:a*)', 'a{2,}'),
            array('aa*(?:a)*(?:a*)', 'a+'),
            array('a*a(?:a)*(?:a*)', 'a+'),
            array('a*a*(?:a)*(?:a*)', 'a*'),

            array('aa(a)*', 'a{2,}'),
            array('aa*(a)*', 'a+'),
            array('a*a(a)*', 'a+'),
            array('a*a*(a)*', 'a*'),
            array('aa(a*)', 'a{2,}'),
            array('aa*(a*)', 'a+'),
            array('a*a(a*)', 'a+'),
            array('a*a*(a*)', 'a*'),
            array('aa(a)*(a)*', 'a{2,}'),
            array('aa*(a)*(a)*', 'a+'),
            array('a*a(a)*(a)*', 'a+'),
            array('a*a*(a)*(a)*', 'a*'),
            array('aa(a*)(a*)', 'a{2,}'),
            array('aa*(a*)(a*)', 'a+'),
            array('a*a(a*)(a*)', 'a+'),
            array('a*a*(a*)(a*)', 'a*'),
            array('aa(a*)(a)*', 'a{2,}'),
            array('aa*(a*)(a)*', 'a+'),
            array('a*a(a*)(a)*', 'a+'),
            array('a*a*(a*)(a)*', 'a*'),
            array('aa(a)*(a*)', 'a{2,}'),
            array('aa*(a)*(a*)', 'a+'),
            array('a*a(a)*(a*)', 'a+'),
            array('a*a*(a)*(a*)', 'a*'),
            array('(aa)(a)*', 'a{2,}'),
            array('(aa)*(a)*', '(a{2})*(a)*'),
            array('(aa*)(a)*', 'a+'),
            array('(a*a)(a)*', 'a+'),
            array('(a*a*)(a)*', 'a*'),
            array('(a*a)*(a)*', '(a+)*(a)*'),
            array('(aa*)*(a)*', '(a+)*(a)*'),
            array('(a*a*)*(a)*', '(a*)*(a)*'),
            array('(aa)(a*)', 'a{2,}'),
            array('(aa)*(a*)', '(a{2})*(a*)'),
            array('(aa*)(a*)', 'a+'),
            array('(a*a)(a*)', 'a+'),
            array('(a*a*)(a*)', 'a*'),
            array('(a*a)*(a*)', '(a+)*(a*)'),
            array('(aa*)*(a*)', '(a+)*(a*)'),
            array('(a*a*)*(a*)', '(a*)*(a*)'),
            array('(aa)(?:a)*', 'a{2,}'),
            array('(aa)*(?:a)*', '(a{2})*(?:a)*'),
            array('(aa*)(?:a)*', 'a+'),
            array('(a*a)(?:a)*', 'a+'),
            array('(a*a*)(?:a)*', 'a*'),
            array('(a*a)*(?:a)*', '(a+)*(?:a)*'),
            array('(aa*)*(?:a)*', '(a+)*(?:a)*'),
            array('(a*a*)*(?:a)*', '(a*)*(?:a)*'),
            array('(aa)(?:a*)', 'a{2,}'),
            array('(aa)*(?:a*)', '(a{2})*(?:a*)'),
            array('(aa*)(?:a*)', 'a+'),
            array('(a*a)(?:a*)', 'a+'),
            array('(a*a*)(?:a*)', 'a*'),
            array('(a*a)*(?:a*)', '(a+)*(?:a*)'),
            array('(aa*)*(?:a*)', '(a+)*(?:a*)'),
            array('(a*a*)*(?:a*)', '(a*)*(?:a*)'),

            array('aa(a)*\1', 'a{2}(a)*\1'),
            array('aa*(a)*\1', 'a+(a)*\1'),
            array('a*a(a)*\1', 'a+(a)*\1'),
            array('a*a*(a)*\1', 'a*(a)*\1'),
            array('aa(a*)\1', 'a{2}(a*)\1'),
            array('aa*(a*)\1', 'a+(a*)\1'),
            array('a*a(a*)\1', 'a+(a*)\1'),
            array('a*a*(a*)\1', 'a*(a*)\1'),
            array('aa(a)*(a)*\1', 'a{2}(a)*(a)*\1'),
            array('aa*(a)*(a)*\1', 'a+(a)*(a)*\1'),
            array('a*a(a)*(a)*\1', 'a+(a)*(a)*\1'),
            array('a*a*(a)*(a)*\1', 'a*(a)*(a)*\1'),
            array('aa(a*)(a*)\1', 'a{2}(a*)(a*)\1'),
            array('aa*(a*)(a*)\1', 'a+(a*)(a*)\1'),
            array('a*a(a*)(a*)\1', 'a+(a*)(a*)\1'),
            array('a*a*(a*)(a*)\1', 'a*(a*)(a*)\1'),
            array('aa(a*)(a)*\1', 'a{2}(a*)(a)*\1'),
            array('aa*(a*)(a)*\1', 'a+(a*)(a)*\1'),
            array('a*a(a*)(a)*\1', 'a+(a*)(a)*\1'),
            array('a*a*(a*)(a)*\1', 'a*(a*)(a)*\1'),
            array('aa(a)*(a*)\1', 'a{2}(a)*(a*)\1'),
            array('aa*(a)*(a*)\1', 'a+(a)*(a*)\1'),
            array('a*a(a)*(a*)\1', 'a+(a)*(a*)\1'),
            array('a*a*(a)*(a*)\1', 'a*(a)*(a*)\1'),
            array('(aa)(a)*\1', '(a{2})(a)*\1'),
            array('(aa)*(a)*\1', '(a{2})*(a)*\1'),
            array('(aa*)(a)*\1', '(a+)(a)*\1'),
            array('(a*a)(a)*\1', '(a+)(a)*\1'),
            array('(a*a*)(a)*\1', '(a*)(a)*\1'),
            array('(a*a)*(a)*\1', '(a+)*(a)*\1'),
            array('(aa*)*(a)*\1', '(a+)*(a)*\1'),
            array('(a*a*)*(a)*\1', '(a*)*(a)*\1'),
            array('(aa)(a*)\1', '(a{2})(a*)\1'),
            array('(aa)*(a*)\1', '(a{2})*(a*)\1'),
            array('(aa*)(a*)\1', '(a+)(a*)\1'),
            array('(a*a)(a*)\1', '(a+)(a*)\1'),
            array('(a*a*)(a*)\1', '(a*)(a*)\1'),
            array('(a*a)*(a*)\1', '(a+)*(a*)\1'),
            array('(aa*)*(a*)\1', '(a+)*(a*)\1'),
            array('(a*a*)*(a*)\1', '(a*)*(a*)\1'),
            array('(aa)(?:a)*\1', '(a{2})(?:a)*\1'),
            array('(aa)*(?:a)*\1', '(a{2})*(?:a)*\1'),
            array('(aa*)(?:a)*\1', '(a+)(?:a)*\1'),
            array('(a*a)(?:a)*\1', '(a+)(?:a)*\1'),
            array('(a*a*)(?:a)*\1', '(a*)(?:a)*\1'),
            array('(a*a)*(?:a)*\1', '(a+)*(?:a)*\1'),
            array('(aa*)*(?:a)*\1', '(a+)*(?:a)*\1'),
            array('(a*a*)*(?:a)*\1', '(a*)*(?:a)*\1'),
            array('(aa)(?:a*)\1', '(a{2})(?:a*)\1'),
            array('(aa)*(?:a*)\1', '(a{2})*(?:a*)\1'),
            array('(aa*)(?:a*)\1', '(a+)(?:a*)\1'),
            array('(a*a)(?:a*)\1', '(a+)(?:a*)\1'),
            array('(a*a*)(?:a*)\1', '(a*)(?:a*)\1'),
            array('(a*a)*(?:a*)\1', '(a+)*(?:a*)\1'),
            array('(aa*)*(?:a*)\1', '(a+)*(?:a*)\1'),
            array('(a*a*)*(?:a*)\1', '(a*)*(?:a*)\1'),

            array('aa(a)*\2', 'a{2,}\2'),
            array('aa*(a)*\2', 'a+\2'),
            array('a*a(a)*\2', 'a+\2'),
            array('a*a*(a)*\2', 'a*\2'),
            array('aa(a*)\2', 'a{2,}\2'),
            array('aa*(a*)\2', 'a+\2'),
            array('a*a(a*)\2', 'a+\2'),
            array('a*a*(a*)\2', 'a*\2'),
            array('aa(a)*(a)*\2', 'a{2,}(a)*\1'),
            array('aa*(a)*(a)*\2', 'a+(a)*\1'),
            array('a*a(a)*(a)*\2', 'a+(a)*\1'),
            array('a*a*(a)*(a)*\2', 'a*(a)*\1'),
            array('aa(a*)(a*)\2', 'a{2,}(a*)\1'),
            array('aa*(a*)(a*)\2', 'a+(a*)\1'),
            array('a*a(a*)(a*)\2', 'a+(a*)\1'),
            array('a*a*(a*)(a*)\2', 'a*(a*)\1'),
            array('aa(a*)(a)*\2', 'a{2,}(a)*\1'),
            array('aa*(a*)(a)*\2', 'a+(a)*\1'),
            array('a*a(a*)(a)*\2', 'a+(a)*\1'),
            array('a*a*(a*)(a)*\2', 'a*(a)*\1'),
            array('aa(a)*(a*)\2', 'a{2,}(a*)\1'),
            array('aa*(a)*(a*)\2', 'a+(a*)\1'),
            array('a*a(a)*(a*)\2', 'a+(a*)\1'),
            array('a*a*(a)*(a*)\2', 'a*(a*)\1'),
            array('(aa)(a)*\2', '(a{2})(a)*\2'),
            array('(aa)*(a)*\2', '(a{2})*(a)*\2'),
            array('(aa*)(a)*\2', '(a+)(a)*\2'),
            array('(a*a)(a)*\2', '(a+)(a)*\2'),
            array('(a*a*)(a)*\2', '(a*)(a)*\2'),
            array('(a*a)*(a)*\2', '(a+)*(a)*\2'),
            array('(aa*)*(a)*\2', '(a+)*(a)*\2'),
            array('(a*a*)*(a)*\2', '(a*)*(a)*\2'),
            array('(aa)(a*)\2', '(a{2})(a*)\2'),
            array('(aa)*(a*)\2', '(a{2})*(a*)\2'),
            array('(aa*)(a*)\2', '(a+)(a*)\2'),
            array('(a*a)(a*)\2', '(a+)(a*)\2'),
            array('(a*a*)(a*)\2', '(a*)(a*)\2'),
            array('(a*a)*(a*)\2', '(a+)*(a*)\2'),
            array('(aa*)*(a*)\2', '(a+)*(a*)\2'),
            array('(a*a*)*(a*)\2', '(a*)*(a*)\2'),
            array('(aa)(?:a)*\2', 'a{2,}\2'),
            array('(aa)*(?:a)*\2', '(a{2})*(?:a)*\2'),
            array('(aa*)(?:a)*\2', 'a+\2'),
            array('(a*a)(?:a)*\2', 'a+\2'),
            array('(a*a*)(?:a)*\2', 'a*\2'),
            array('(a*a)*(?:a)*\2', '(a+)*(?:a)*\2'),
            array('(aa*)*(?:a)*\2', '(a+)*(?:a)*\2'),
            array('(a*a*)*(?:a)*\2', '(a*)*(?:a)*\2'),
            array('(aa)(?:a*)\2', 'a{2,}\2'),
            array('(aa)*(?:a*)\2', '(a{2})*(?:a*)\2'),
            array('(aa*)(?:a*)\2', 'a+\2'),
            array('(a*a)(?:a*)\2', 'a+\2'),
            array('(a*a*)(?:a*)\2', 'a*\2'),
            array('(a*a)*(?:a*)\2', '(a+)*(?:a*)\2'),
            array('(aa*)*(?:a*)\2', '(a+)*(?:a*)\2'),
            array('(a*a*)*(?:a*)\2', '(a*)*(?:a*)\2'),

            array('(?:aa)(?:a)*', 'a{2,}'),
            array('(?:aa)*(?:a)*', '(?:a{2})*(?:a)*'),
            array('(?:aa*)(?:a)*', 'a+'),
            array('(?:a*a)(?:a)*', 'a+'),
            array('(?:a*a*)(?:a)*', 'a*'),
            array('(?:a*a)*(?:a)*', '(?:a+)*(?:a)*'),
            array('(?:aa*)*(?:a)*', '(?:a+)*(?:a)*'),
            array('(?:a*a*)*(?:a)*', '(?:a*)*(?:a)*'),
            array('(?:aa)(?:a*)', 'a{2,}'),
            array('(?:aa)*(?:a*)', '(?:a{2})*(?:a*)'),
            array('(?:aa*)(?:a*)', 'a+'),
            array('(?:a*a)(?:a*)', 'a+'),
            array('(?:a*a*)(?:a*)', 'a*'),
            array('(?:a*a)*(?:a*)', '(?:a+)*(?:a*)'),
            array('(?:aa*)*(?:a*)', '(?:a+)*(?:a*)'),
            array('(?:a*a*)*(?:a*)', '(?:a*)*(?:a*)'),
            // Quantifier *, the set of paired characters
            array('abab*', 'abab*'),
            array('aba*b', 'aba*b'),
            array('ab*ab', 'ab*ab'),
            array('a*bab', 'a*bab'),
            array('ababab*', '(?:ab){2}ab*'),
            array('ababa*b', '(?:ab){2}a*b'),
            array('abab(?:ab)*', '(?:ab){2,}'),
            array('abab(?:ab*)', '(?:ab){2}(?:ab*)'),
            array('abab(?:a*b)', '(?:ab){2}(?:a*b)'),
            array('abab(?:ab)*(?:ab)*', '(?:ab){2,}'),
            array('abab(?:ab*)(?:ab*)', '(?:ab){2}(?:ab*)(?:ab*)'),
            array('(?:ab){2}(?:ab*)(?:ab*)', '(?:ab){2}(?:ab*){2}'),
            array('abab(?:a*b)(?:ab*)', '(?:ab){2}(?:a*b)(?:ab*)'),
            array('abab(?:ab*)(?:a*b)', '(?:ab){2}(?:ab*)(?:a*b)'),
            array('abab(?:ab*)(?:ab)*', '(?:ab){2}(?:ab*)(?:ab)*'),
            array('abab(?:a*b)(?:ab)*', '(?:ab){2}(?:a*b)(?:ab)*'),
            array('abab(?:ab)*(?:ab*)', '(?:ab){2,}(?:ab*)'),
            array('abab(?:ab)*(?:a*b)', '(?:ab){2,}(?:a*b)'),
            array('abab(ab)*', '(?:ab){2}(ab)*'),
            array('abab(ab)*(ab)*', '(?:ab){2}(ab)*(ab)*'),
            array('abab(ab*)(ab*)', '(?:ab){2}(ab*)(ab*)'),
            array('abab(a*b)(ab*)', '(?:ab){2}(a*b)(ab*)'),
            array('abab(ab*)(a*b)', '(?:ab){2}(ab*)(a*b)'),
            array('abab(ab*)(ab)*', '(?:ab){2}(ab*)(ab)*'),
            array('abab(a*b)(ab)*', '(?:ab){2}(a*b)(ab)*'),
            array('abab(ab)*(ab*)', '(?:ab){2}(ab)*(ab*)'),
            array('abab(ab)*(a*b)', '(?:ab){2}(ab)*(a*b)'),
            array('(abab)(ab)*', '((?:ab){2})(ab)*'),
            array('(abab)(ab*)', '((?:ab){2})(ab*)'),
            array('(abab)(a*b)', '((?:ab){2})(a*b)'),
            array('(abab)(?:ab)*', '(?:ab){2,}'),
            array('(abab)(?:ab*)', '((?:ab){2})(?:ab*)'),
            array('(abab)(?:a*b)', '((?:ab){2})(?:a*b)'),
            array('(?:abab)(?:ab)*', '(?:ab){2,}'),
            array('(?:abab)(?:ab*)', '(?:(?:ab){2})(?:ab*)'),
            array('(?:abab)(?:a*b)', '(?:(?:ab){2})(?:a*b)'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character on the left
            array('a(?:ab?)?', 'a(?:ab?)?'),
            array('a(?:ab?)+', 'a(?:ab?)+'),
            array('a(?:ab?)*', 'a(?:ab?)*'),
            array('a(?:ab+)?', 'a(?:ab+)?'),
            array('a(?:ab+)+', 'a(?:ab+)+'),
            array('a(?:ab+)*', 'a(?:ab+)*'),
            array('a(?:ab*)?', 'a(?:ab*)?'),
            array('a(?:ab*)+', 'a(?:ab*)+'),
            array('a(?:ab*)*', 'a(?:ab*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character on the left
            array('a(ab?)?', 'a(ab?)?'),
            array('a(ab?)+', 'a(ab?)+'),
            array('a(ab?)*', 'a(ab?)*'),
            array('a(ab+)?', 'a(ab+)?'),
            array('a(ab+)+', 'a(ab+)+'),
            array('a(ab+)*', 'a(ab+)*'),
            array('a(ab*)?', 'a(ab*)?'),
            array('a(ab*)+', 'a(ab*)+'),
            array('a(ab*)*', 'a(ab*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character to the right
            array('(?:ab?)?a', '(?:ab?)?a'),
            array('(?:ab?)+a', '(?:ab?)+a'),
            array('(?:ab?)*a', '(?:ab?)*a'),
            array('(?:ab+)?a', '(?:ab+)?a'),
            array('(?:ab+)+a', '(?:ab+)+a'),
            array('(?:ab+)*a', '(?:ab+)*a'),
            array('(?:ab*)?a', '(?:ab*)?a'),
            array('(?:ab*)+a', '(?:ab*)+a'),
            array('(?:ab*)*a', '(?:ab*)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character to the right
            array('(ab?)?a', '(ab?)?a'),
            array('(ab?)+a', '(ab?)+a'),
            array('(ab?)*a', '(ab?)*a'),
            array('(ab+)?a', '(ab+)?a'),
            array('(ab+)+a', '(ab+)+a'),
            array('(ab+)*a', '(ab+)*a'),
            array('(ab*)?a', '(ab*)?a'),
            array('(ab*)+a', '(ab*)+a'),
            array('(ab*)*a', '(ab*)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character on the left
            array('a(?:ab?){1,2}', 'a(?:ab?){1,2}'),
            array('a(?:ab+){1,2}', 'a(?:ab+){1,2}'),
            array('a(?:ab*){1,2}', 'a(?:ab*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character on the left
            array('a(ab?){1,2}', 'a(ab?){1,2}'),
            array('a(ab+){1,2}', 'a(ab+){1,2}'),
            array('a(ab*){1,2}', 'a(ab*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character to the right
            array('(?:ab?){1,2}a', '(?:ab?){1,2}a'),
            array('(?:ab+){1,2}a', '(?:ab+){1,2}a'),
            array('(?:ab*){1,2}a', '(?:ab*){1,2}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character to the right
            array('(ab?){1,2}a', '(ab?){1,2}a'),
            array('(ab+){1,2}a', '(ab+){1,2}a'),
            array('(ab*){1,2}a', '(ab*){1,2}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ab?)?', 'ab(?:ab?)?'),
            array('ab(?:ab?)+', 'ab(?:ab?)+'),
            array('ab(?:ab?)*', 'ab(?:ab?)*'),
            array('ab(?:ab+)?', 'ab(?:ab+)?'),
            array('ab(?:ab+)+', 'ab(?:ab+)+'),
            array('ab(?:ab+)*', 'ab(?:ab+)*'),
            array('ab(?:ab*)?', 'ab(?:ab*)?'),
            array('ab(?:ab*)+', 'ab(?:ab*)+'),
            array('ab(?:ab*)*', 'ab(?:ab*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character in the sequence of characters left
            array('ab(ab?)?', 'ab(ab?)?'),
            array('ab(ab?)+', 'ab(ab?)+'),
            array('ab(ab?)*', 'ab(ab?)*'),
            array('ab(ab+)?', 'ab(ab+)?'),
            array('ab(ab+)+', 'ab(ab+)+'),
            array('ab(ab+)*', 'ab(ab+)*'),
            array('ab(ab*)?', 'ab(ab*)?'),
            array('ab(ab*)+', 'ab(ab*)+'),
            array('ab(ab*)*', 'ab(ab*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ab?)?ab', '(?:ab?)?ab'),
            array('(?:ab?)+ab', '(?:ab?)+ab'),
            array('(?:ab?)*ab', '(?:ab?)*ab'),
            array('(?:ab+)?ab', '(?:ab+)?ab'),
            array('(?:ab+)+ab', '(?:ab+)+ab'),
            array('(?:ab+)*ab', '(?:ab+)*ab'),
            array('(?:ab*)?ab', '(?:ab*)?ab'),
            array('(?:ab*)+ab', '(?:ab*)+ab'),
            array('(?:ab*)*ab', '(?:ab*)*ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character of a sequence of characters from the right
            array('(ab?)?ab', '(ab?)?ab'),
            array('(ab?)+ab', '(ab?)+ab'),
            array('(ab?)*ab', '(ab?)*ab'),
            array('(ab+)?ab', '(ab+)?ab'),
            array('(ab+)+ab', '(ab+)+ab'),
            array('(ab+)*ab', '(ab+)*ab'),
            array('(ab*)?ab', '(ab*)?ab'),
            array('(ab*)+ab', '(ab*)+ab'),
            array('(ab*)*ab', '(ab*)*ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ab?){1,2}', 'ab(?:ab?){1,2}'),
            array('ab(?:ab+){1,2}', 'ab(?:ab+){1,2}'),
            array('ab(?:ab*){1,2}', 'ab(?:ab*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character in the sequence of characters left
            array('ab(ab?){1,2}', 'ab(ab?){1,2}'),
            array('ab(ab+){1,2}', 'ab(ab+){1,2}'),
            array('ab(ab*){1,2}', 'ab(ab*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ab?){1,2}ab', '(?:ab?){1,2}ab'),
            array('(?:ab+){1,2}ab', '(?:ab+){1,2}ab'),
            array('(?:ab*){1,2}ab', '(?:ab*){1,2}ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character of a sequence of characters from the right
            array('(ab?){1,2}ab', '(ab?){1,2}ab'),
            array('(ab+){1,2}ab', '(ab+){1,2}ab'),
            array('(ab*){1,2}ab', '(ab*){1,2}ab'),
            // Integration tests on a combination of quantifiersв: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(?:a?)?', 'ab(?:a?)?'),
            array('ab(?:a?)+', 'ab(?:a?)+'),
            array('ab(?:a?)*', 'ab(?:a?)*'),
            array('ab(?:a+)?', 'ab(?:a+)?'),
            array('ab(?:a+)+', 'ab(?:a+)+'),
            array('ab(?:a+)*', 'ab(?:a+)*'),
            array('ab(?:a*)?', 'ab(?:a*)?'),
            array('ab(?:a*)+', 'ab(?:a*)+'),
            array('ab(?:a*)*', 'ab(?:a*)*'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(a?)?', 'ab(a?)?'),
            array('ab(a?)+', 'ab(a?)+'),
            array('ab(a?)*', 'ab(a?)*'),
            array('ab(a+)?', 'ab(a+)?'),
            array('ab(a+)+', 'ab(a+)+'),
            array('ab(a+)*', 'ab(a+)*'),
            array('ab(a*)?', 'ab(a*)?'),
            array('ab(a*)+', 'ab(a*)+'),
            array('ab(a*)*', 'ab(a*)*'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters on the left
            array('ba(?:a?)?', 'ba{1,2}'),
            array('ba(?:a?)+', 'ba+'),
            array('ba(?:a?)*', 'ba+'),
            array('ba(?:a+)?', 'ba+'),
            array('ba(?:a+)+', 'ba{2,}'),
            array('ba(?:a+)*', 'ba+'),
            array('ba(?:a*)?', 'ba+'),
            array('ba(?:a*)+', 'ba+'),
            array('ba(?:a*)*', 'ba+'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters on the left
            array('ba(a?)?', 'ba{1,2}'),
            array('ba(a?)+', 'ba+'),
            array('ba(a?)*', 'ba+'),
            array('ba(a+)?', 'ba+'),
            array('ba(a+)+', 'ba{2,}'),
            array('ba(a+)*', 'ba+'),
            array('ba(a*)?', 'ba+'),
            array('ba(a*)+', 'ba+'),
            array('ba(a*)*', 'ba+'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the rightmost characters of
            // A sequence of characters from the right
            array('(?:a?)?ba', '(?:a?)?ba'),
            array('(?:a?)+ba', '(?:a?)+ba'),
            array('(?:a?)*ba', '(?:a?)*ba'),
            array('(?:a+)?ba', '(?:a+)?ba'),
            array('(?:a+)+ba', '(?:a+)+ba'),
            array('(?:a+)*ba', '(?:a+)*ba'),
            array('(?:a*)?ba', '(?:a*)?ba'),
            array('(?:a*)+ba', '(?:a*)+ba'),
            array('(?:a*)*ba', '(?:a*)*ba'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the rightmost characters of
            // A sequence of characters from the right
            array('(a?)?ba', '(a?)?ba'),
            array('(a?)+ba', '(a?)+ba'),
            array('(a?)*ba', '(a?)*ba'),
            array('(a+)?ba', '(a+)?ba'),
            array('(a+)+ba', '(a+)+ba'),
            array('(a+)*ba', '(a+)*ba'),
            array('(a*)?ba', '(a*)?ba'),
            array('(a*)+ba', '(a*)+ba'),
            array('(a*)*ba', '(a*)*ba'),
            array('(a*)*ba', '(a*)*ba'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ba(?:a?){1,2}', 'ba{1,3}'),
            array('ba(?:a+){1,2}', 'ba{2,}'),
            array('ba(?:a*){1,2}', 'ba+'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters on the left
            array('ba(a?){1,2}', 'ba{1,3}'),
            array('ba(a+){1,2}', 'ba{2,}'),
            array('ba(a*){1,2}', 'ba+'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the rightmost characters of
            // A sequence of characters from the right
            array('(?:a?){1,2}ba', '(?:a?){1,2}ba'),
            array('(?:a+){1,2}ba', '(?:a+){1,2}ba'),
            array('(?:a*){1,2}ba', '(?:a*){1,2}ba'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters from the right
            array('(a?){1,2}ba', '(a?){1,2}ba'),
            array('(a+){1,2}ba', '(a+){1,2}ba'),
            array('(a*){1,2}ba', '(a*){1,2}ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character on the left
            array('a(?:ba?)?', 'a(?:ba?)?'),
            array('a(?:ba?)+', 'a(?:ba?)+'),
            array('a(?:ba?)*', 'a(?:ba?)*'),
            array('a(?:ba+)?', 'a(?:ba+)?'),
            array('a(?:ba+)+', 'a(?:ba+)+'),
            array('a(?:ba+)*', 'a(?:ba+)*'),
            array('a(?:ba*)?', 'a(?:ba*)?'),
            array('a(?:ba*)+', 'a(?:ba*)+'),
            array('a(?:ba*)*', 'a(?:ba*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character on the left
            array('a(ba?)?', 'a(ba?)?'),
            array('a(ba?)+', 'a(ba?)+'),
            array('a(ba?)*', 'a(ba?)*'),
            array('a(ba+)?', 'a(ba+)?'),
            array('a(ba+)+', 'a(ba+)+'),
            array('a(ba+)*', 'a(ba+)*'),
            array('a(ba*)?', 'a(ba*)?'),
            array('a(ba*)+', 'a(ba*)+'),
            array('a(ba*)*', 'a(ba*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character to the right
            array('(?:ba?)?a', '(?:ba?)?a'),
            array('(?:ba?)+a', '(?:ba?)+a'),
            array('(?:ba?)*a', '(?:ba?)*a'),
            array('(?:ba+)?a', '(?:ba+)?a'),
            array('(?:ba+)+a', '(?:ba+)+a'),
            array('(?:ba+)*a', '(?:ba+)*a'),
            array('(?:ba*)?a', '(?:ba*)?a'),
            array('(?:ba*)+a', '(?:ba*)+a'),
            array('(?:ba*)*a', '(?:ba*)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character to the right
            array('(ba?)?a', '(ba?)?a'),
            array('(ba?)+a', '(ba?)+a'),
            array('(ba?)*a', '(ba?)*a'),
            array('(ba+)?a', '(ba+)?a'),
            array('(ba+)+a', '(ba+)+a'),
            array('(ba+)*a', '(ba+)*a'),
            array('(ba*)?a', '(ba*)?a'),
            array('(ba*)+a', '(ba*)+a'),
            array('(ba*)*a', '(ba*)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character on the left
            array('a(?:ba?){1,2}', 'a(?:ba?){1,2}'),
            array('a(?:ba+){1,2}', 'a(?:ba+){1,2}'),
            array('a(?:ba*){1,2}', 'a(?:ba*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character on the left
            array('a(ba?){1,2}', 'a(ba?){1,2}'),
            array('a(ba+){1,2}', 'a(ba+){1,2}'),
            array('a(ba*){1,2}', 'a(ba*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character to the right
            array('(?:ba?){1,2}a', '(?:ba?){1,2}a'),
            array('(?:ba+){1,2}a', '(?:ba+){1,2}a'),
            array('(?:ba*){1,2}a', '(?:ba*){1,2}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character on the left
            array('(ba?){1,2}a', '(ba?){1,2}a'),
            array('(ba+){1,2}a', '(ba+){1,2}a'),
            array('(ba*){1,2}a', '(ba*){1,2}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // The rightmost characters of a sequence of characters on the left
            array('ba(?:ab?)?', 'ba(?:ab?)?'),
            array('ba(?:ab?)+', 'ba(?:ab?)+'),
            array('ba(?:ab?)*', 'ba(?:ab?)*'),
            array('ba(?:ab+)?', 'ba(?:ab+)?'),
            array('ba(?:ab+)+', 'ba(?:ab+)+'),
            array('ba(?:ab+)*', 'ba(?:ab+)*'),
            array('ba(?:ab*)?', 'ba(?:ab*)?'),
            array('ba(?:ab*)+', 'ba(?:ab*)+'),
            array('ba(?:ab*)*', 'ba(?:ab*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ba?)?', 'ab(?:ba?)?'),
            array('ab(?:ba?)+', 'ab(?:ba?)+'),
            array('ab(?:ba?)*', 'ab(?:ba?)*'),
            array('ab(?:ba+)?', 'ab(?:ba+)?'),
            array('ab(?:ba+)+', 'ab(?:ba+)+'),
            array('ab(?:ba+)*', 'ab(?:ba+)*'),
            array('ab(?:ba*)?', 'ab(?:ba*)?'),
            array('ab(?:ba*)+', 'ab(?:ba*)+'),
            array('ab(?:ba*)*', 'ab(?:ba*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters on the left
            array('ba(ab?)?', 'ba(ab?)?'),
            array('ba(ab?)+', 'ba(ab?)+'),
            array('ba(ab?)*', 'ba(ab?)*'),
            array('ba(ab+)?', 'ba(ab+)?'),
            array('ba(ab+)+', 'ba(ab+)+'),
            array('ba(ab+)*', 'ba(ab+)*'),
            array('ba(ab*)?', 'ba(ab*)?'),
            array('ba(ab*)+', 'ba(ab*)+'),
            array('ba(ab*)*', 'ba(ab*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters on the left
            array('ab(ba?)?', 'ab(ba?)?'),
            array('ab(ba?)+', 'ab(ba?)+'),
            array('ab(ba?)*', 'ab(ba?)*'),
            array('ab(ba+)?', 'ab(ba+)?'),
            array('ab(ba+)+', 'ab(ba+)+'),
            array('ab(ba+)*', 'ab(ba+)*'),
            array('ab(ba*)?', 'ab(ba*)?'),
            array('ab(ba*)+', 'ab(ba*)+'),
            array('ab(ba*)*', 'ab(ba*)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // The rightmost characters of a sequence of characters to the right
            array('(?:ab?)?ba', '(?:ab?)?ba'),
            array('(?:ab?)+ba', '(?:ab?)+ba'),
            array('(?:ab?)*ba', '(?:ab?)*ba'),
            array('(?:ab+)?ba', '(?:ab+)?ba'),
            array('(?:ab+)+ba', '(?:ab+)+ba'),
            array('(?:ab+)*ba', '(?:ab+)*ba'),
            array('(?:ab*)?ba', '(?:ab*)?ba'),
            array('(?:ab*)+ba', '(?:ab*)+ba'),
            array('(?:ab*)*ba', '(?:ab*)*ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ba?)?ab', '(?:ba?)?ab'),
            array('(?:ba?)+ab', '(?:ba?)+ab'),
            array('(?:ba?)*ab', '(?:ba?)*ab'),
            array('(?:ba+)?ab', '(?:ba+)?ab'),
            array('(?:ba+)+ab', '(?:ba+)+ab'),
            array('(?:ba+)*ab', '(?:ba+)*ab'),
            array('(?:ba*)?ab', '(?:ba*)?ab'),
            array('(?:ba*)+ab', '(?:ba*)+ab'),
            array('(?:ba*)*ab', '(?:ba*)*ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters from the right
            array('(ab?)?ba', '(ab?)?ba'),
            array('(ab?)+ba', '(ab?)+ba'),
            array('(ab?)*ba', '(ab?)*ba'),
            array('(ab+)?ba', '(ab+)?ba'),
            array('(ab+)+ba', '(ab+)+ba'),
            array('(ab+)*ba', '(ab+)*ba'),
            array('(ab*)?ba', '(ab*)?ba'),
            array('(ab*)+ba', '(ab*)+ba'),
            array('(ab*)*ba', '(ab*)*ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters to the right
            array('(ba?)?ab', '(ba?)?ab'),
            array('(ba?)+ab', '(ba?)+ab'),
            array('(ba?)*ab', '(ba?)*ab'),
            array('(ba+)?ab', '(ba+)?ab'),
            array('(ba+)+ab', '(ba+)+ab'),
            array('(ba+)*ab', '(ba+)*ab'),
            array('(ba*)?ab', '(ba*)?ab'),
            array('(ba*)+ab', '(ba*)+ab'),
            array('(ba*)*ab', '(ba*)*ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // The rightmost characters of a sequence of characters on the left
            array('ba(?:ab?){1,2}', 'ba(?:ab?){1,2}'),
            array('ba(?:ab+){1,2}', 'ba(?:ab+){1,2}'),
            array('ba(?:ab*){1,2}', 'ba(?:ab*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ba?){1,2}', 'ab(?:ba?){1,2}'),
            array('ab(?:ba+){1,2}', 'ab(?:ba+){1,2}'),
            array('ab(?:ba*){1,2}', 'ab(?:ba*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters on the left
            array('ba(ab?){1,2}', 'ba(ab?){1,2}'),
            array('ba(ab+){1,2}', 'ba(ab+){1,2}'),
            array('ba(ab*){1,2}', 'ba(ab*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters on the left
            array('ab(ba?){1,2}', 'ab(ba?){1,2}'),
            array('ab(ba+){1,2}', 'ab(ba+){1,2}'),
            array('ab(ba*){1,2}', 'ab(ba*){1,2}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // The rightmost characters of a sequence of characters to the right
            array('(?:ab?){1,2}ba', '(?:ab?){1,2}ba'),
            array('(?:ab+){1,2}ba', '(?:ab+){1,2}ba'),
            array('(?:ab*){1,2}ba', '(?:ab*){1,2}ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ba?){1,2}ab', '(?:ba?){1,2}ab'),
            array('(?:ba+){1,2}ab', '(?:ba+){1,2}ab'),
            array('(?:ba*){1,2}ab', '(?:ba*){1,2}ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters from the right
            array('(ab?){1,2}ba', '(ab?){1,2}ba'),
            array('(ab+){1,2}ba', '(ab+){1,2}ba'),
            array('(ab*){1,2}ba', '(ab*){1,2}ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters to the right
            array('(ba?){1,2}ab', '(ba?){1,2}ab'),
            array('(ba+){1,2}ab', '(ba+){1,2}ab'),
            array('(ba*){1,2}ab', '(ba*){1,2}ab'),
            // Integration tests on a combination of quantifiers: It does not help
            array('a(?:cb?)?', 'a(?:cb?)?'),
            array('a(?:cb?)+', 'a(?:cb?)+'),
            array('a(?:cb?)*', 'a(?:cb?)*'),
            array('a(?:cb+)?', 'a(?:cb+)?'),
            array('a(?:cb+)+', 'a(?:cb+)+'),
            array('a(?:cb+)*', 'a(?:cb+)*'),
            array('a(?:cb*)?', 'a(?:cb*)?'),
            array('a(?:cb*)+', 'a(?:cb*)+'),
            array('a(?:cb*)*', 'a(?:cb*)*'),
            array('a(cb?)?', 'a(cb?)?'),
            array('a(cb?)+', 'a(cb?)+'),
            array('a(cb?)*', 'a(cb?)*'),
            array('a(cb+)?', 'a(cb+)?'),
            array('a(cb+)+', 'a(cb+)+'),
            array('a(cb+)*', 'a(cb+)*'),
            array('a(cb*)?', 'a(cb*)?'),
            array('a(cb*)+', 'a(cb*)+'),
            array('a(cb*)*', 'a(cb*)*'),
            array('(?:cb?)?a', '(?:cb?)?a'),
            array('(?:cb?)+a', '(?:cb?)+a'),
            array('(?:cb?)*a', '(?:cb?)*a'),
            array('(?:cb+)?a', '(?:cb+)?a'),
            array('(?:cb+)+a', '(?:cb+)+a'),
            array('(?:cb+)*a', '(?:cb+)*a'),
            array('(?:cb*)?a', '(?:cb*)?a'),
            array('(?:cb*)+a', '(?:cb*)+a'),
            array('(?:cb*)*a', '(?:cb*)*a'),
            array('(cb?)?a', '(cb?)?a'),
            array('(cb?)+a', '(cb?)+a'),
            array('(cb?)*a', '(cb?)*a'),
            array('(cb+)?a', '(cb+)?a'),
            array('(cb+)+a', '(cb+)+a'),
            array('(cb+)*a', '(cb+)*a'),
            array('(cb*)?a', '(cb*)?a'),
            array('(cb*)+a', '(cb*)+a'),
            array('(cb*)*a', '(cb*)*a'),
            array('a(?:cb?){1,2}', 'a(?:cb?){1,2}'),
            array('a(?:cb+){1,2}', 'a(?:cb+){1,2}'),
            array('a(?:cb*){1,2}', 'a(?:cb*){1,2}'),
            array('a(cb?){1,2}', 'a(cb?){1,2}'),
            array('a(cb+){1,2}', 'a(cb+){1,2}'),
            array('a(cb*){1,2}', 'a(cb*){1,2}'),
            array('(?:cb?){1,2}a', '(?:cb?){1,2}a'),
            array('(?:cb+){1,2}a', '(?:cb+){1,2}a'),
            array('(?:cb*){1,2}a', '(?:cb*){1,2}a'),
            array('(cb?){1,2}a', '(cb?){1,2}a'),
            array('(cb+){1,2}a', '(cb+){1,2}a'),
            array('(cb*){1,2}a', '(cb*){1,2}a'),
            array('ab(?:cb?)?', 'ab(?:cb?)?'),
            array('ab(?:cb?)+', 'ab(?:cb?)+'),
            array('ab(?:cb?)*', 'ab(?:cb?)*'),
            array('ab(?:cb+)?', 'ab(?:cb+)?'),
            array('ab(?:cb+)+', 'ab(?:cb+)+'),
            array('ab(?:cb+)*', 'ab(?:cb+)*'),
            array('ab(?:cb*)?', 'ab(?:cb*)?'),
            array('ab(?:cb*)+', 'ab(?:cb*)+'),
            array('ab(?:cb*)*', 'ab(?:cb*)*'),
            array('ab(cb?)?', 'ab(cb?)?'),
            array('ab(cb?)+', 'ab(cb?)+'),
            array('ab(cb?)*', 'ab(cb?)*'),
            array('ab(cb+)?', 'ab(cb+)?'),
            array('ab(cb+)+', 'ab(cb+)+'),
            array('ab(cb+)*', 'ab(cb+)*'),
            array('ab(cb*)?', 'ab(cb*)?'),
            array('ab(cb*)+', 'ab(cb*)+'),
            array('ab(cb*)*', 'ab(cb*)*'),
            array('(?:cb?)?ab', '(?:cb?)?ab'),
            array('(?:cb?)+ab', '(?:cb?)+ab'),
            array('(?:cb?)*ab', '(?:cb?)*ab'),
            array('(?:cb+)?ab', '(?:cb+)?ab'),
            array('(?:cb+)+ab', '(?:cb+)+ab'),
            array('(?:cb+)*ab', '(?:cb+)*ab'),
            array('(?:cb*)?ab', '(?:cb*)?ab'),
            array('(?:cb*)+ab', '(?:cb*)+ab'),
            array('(?:cb*)*ab', '(?:cb*)*ab'),
            array('(cb?)?ab', '(cb?)?ab'),
            array('(cb?)+ab', '(cb?)+ab'),
            array('(cb?)*ab', '(cb?)*ab'),
            array('(cb+)?ab', '(cb+)?ab'),
            array('(cb+)+ab', '(cb+)+ab'),
            array('(cb+)*ab', '(cb+)*ab'),
            array('(cb*)?ab', '(cb*)?ab'),
            array('(cb*)+ab', '(cb*)+ab'),
            array('(cb*)*ab', '(cb*)*ab'),
            array('ab(?:cb?){1,2}', 'ab(?:cb?){1,2}'),
            array('ab(?:cb+){1,2}', 'ab(?:cb+){1,2}'),
            array('ab(?:cb*){1,2}', 'ab(?:cb*){1,2}'),
            array('ab(cb?){1,2}', 'ab(cb?){1,2}'),
            array('ab(cb+){1,2}', 'ab(cb+){1,2}'),
            array('ab(cb*){1,2}', 'ab(cb*){1,2}'),
            array('(?:cb?){1,2}ab', '(?:cb?){1,2}ab'),
            array('(?:cb+){1,2}ab', '(?:cb+){1,2}ab'),
            array('(?:cb*){1,2}ab', '(?:cb*){1,2}ab'),
            array('(cb?){1,2}ab', '(cb?){1,2}ab'),
            array('(cb+){1,2}ab', '(cb+){1,2}ab'),
            array('(cb*){1,2}ab', '(cb*){1,2}ab'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with a single character to the left
            array('a(?:a)?', 'a{1,2}'),
            array('a(?:a)+', 'a{2,}'),
            array('a(?:a)*', 'a+'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with a single character to the left
            array('a(a)?', 'a{1,2}'),
            array('a(a)+', 'a{2,}'),
            array('a(a)*', 'a+'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with a single character to the right
            array('(?:a)?a', 'a{1,2}'),
            array('(?:a)+a', 'a{2,}'),
            array('(?:a)*a', 'a+'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with a single character to the right
            array('(a)?a', 'a{1,2}'),
            array('(a)+a', 'a{2,}'),
            array('(a)*a', 'a+'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with a single character to the left
            array('a(?:a){1,2}', 'a{2,3}'),
            array('a(?:a){3,4}', 'a{4,5}'),
            array('a(?:a)?{3,4}', 'a{1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with a single character to the left
            array('a(a){1,2}', 'a{2,3}'),
            array('a(a){3,4}', 'a{4,5}'),
            array('a(a)?{3,4}', 'a{1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with a single character to the right
            array('(?:a){1,2}a', 'a{2,3}'),
            array('(?:a){3,4}a', 'a{4,5}'),
            array('(?:a)?{3,4}a', 'a{1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with a single character to the right
            array('(a){1,2}a', 'a{2,3}'),
            array('(a){3,4}a', 'a{4,5}'),
            array('(a)?{3,4}a', 'a{1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(?:a)?', 'ab(?:a)?'),
            array('ab(?:a)+', 'ab(?:a)+'),
            array('ab(?:a)*', 'ab(?:a)*'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters left
            array('ab(a)?', 'ab(a)?'),
            array('ab(a)+', 'ab(a)+'),
            array('ab(a)*', 'ab(a)*'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters from the right
            array('(?:a)?ab', 'a{1,2}b'),
            array('(?:a)+ab', 'a{2,}b'),
            array('(?:a)*ab', 'a+b'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters to the right
            array('(a)?ab', 'a{1,2}b'),
            array('(a)+ab', 'a{2,}b'),
            array('(a)*ab', 'a+b'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(?:a){1,2}', 'ab(?:a){1,2}'),
            array('ab(?:a){3,4}', 'ab(?:a){3,4}'),
            array('ab(?:a)?{3,4}', 'ab(?:a)?{3,4}'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters left
            array('ab(a){1,2}', 'ab(a){1,2}'),
            array('ab(a){3,4}', 'ab(a){3,4}'),
            array('ab(a)?{3,4}', 'ab(a)?{3,4}'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters from the right
            array('(?:a){1,2}ab', 'a{2,3}b'),
            array('(?:a){3,4}ab', 'a{4,5}b'),
            array('(?:a)?{3,4}ab', 'a{1,5}b'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters to the right
            array('(a){1,2}ab', 'a{2,3}b'),
            array('(a){3,4}ab', 'a{4,5}b'),
            array('(a)?{3,4}ab', 'a{1,5}b'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character on the left
            array('a(?:ab)?', 'a(?:ab)?'),
            array('a(?:ab)+', 'a(?:ab)+'),
            array('a(?:ab)*', 'a(?:ab)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character on the left
            array('a(ab)?', 'a(ab)?'),
            array('a(ab)+', 'a(ab)+'),
            array('a(ab)*', 'a(ab)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character to the right
            array('(?:ab)?a', '(?:ab)?a'),
            array('(?:ab)+a', '(?:ab)+a'),
            array('(?:ab)*a', '(?:ab)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character to the right
            array('(ab)?a', '(ab)?a'),
            array('(ab)+a', '(ab)+a'),
            array('(ab)*a', '(ab)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character on the left
            array('a(?:ab){1,2}', 'a(?:ab){1,2}'),
            array('a(?:ab){3,4}', 'a(?:ab){3,4}'),
            array('a(?:ab)?{3,4}', 'a(?:ab)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with
            // Character on the left
            array('a(ab){1,2}', 'a(ab){1,2}'),
            array('a(ab){3,4}', 'a(ab){3,4}'),
            array('a(ab)?{3,4}', 'a(ab)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Character to the right
            array('(?:ab){1,2}a', '(?:ab){1,2}a'),
            array('(?:ab){3,4}a', '(?:ab){3,4}a'),
            array('(?:ab)?{3,4}a', '(?:ab)?{3,4}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with the character
            // on the left
            array('(ab){1,2}a', '(ab){1,2}a'),
            array('(ab){3,4}a', '(ab){3,4}a'),
            array('(ab)?{3,4}a', '(ab)?{3,4}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ab)?', '(?:ab){1,2}'),
            array('ab(?:ab)+', '(?:ab){2,}'),
            array('ab(?:ab)*', '(?:ab)+'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character in the sequence of characters left
            array('ab(ab)?', '(?:ab){1,2}'),
            array('ab(ab)+', '(?:ab){2,}'),
            array('ab(ab)*', '(?:ab)+'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ab)?ab', '(?:ab){1,2}'),
            array('(?:ab)+ab', '(?:ab){2,}'),
            array('(?:ab)*ab', '(?:ab)+'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character of a sequence of characters from the right
            array('(ab)?ab', '(?:ab){1,2}'),
            array('(ab)+ab', '(?:ab){2,}'),
            array('(ab)*ab', '(?:ab)+'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ab){1,2}', '(?:ab){2,3}'),
            array('ab(?:ab){3,4}', '(?:ab){4,5}'),
            array('ab(?:ab)?{3,4}', '(?:ab){1,5}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character in the sequence of characters left
            array('ab(ab){1,2}', '(?:ab){2,3}'),
            array('ab(ab){3,4}', '(?:ab){4,5}'),
            array('ab(ab)?{3,4}', '(?:ab){1,5}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ab){1,2}ab', '(?:ab){2,3}'),
            array('(?:ab){3,4}ab', '(?:ab){4,5}'),
            array('(?:ab)?{3,4}ab', '(?:ab){1,5}'),
            // Integration tests on a combination of quantifiers: совпадение крайнего
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Leftmost character of a sequence of characters from the right
            array('(ab){1,2}ab', '(?:ab){2,3}'),
            array('(ab){3,4}ab', '(?:ab){4,5}'),
            array('(ab)?{3,4}ab', '(?:ab){1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(?:a)?', 'ab(?:a)?'),
            array('ab(?:a)+', 'ab(?:a)+'),
            array('ab(?:a)*', 'ab(?:a)*'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(a)?', 'ab(a)?'),
            array('ab(a)+', 'ab(a)+'),
            array('ab(a)*', 'ab(a)*'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters on the left
            array('ba(?:a)?', 'ba{1,2}'),
            array('ba(?:a)+', 'ba{2,}'),
            array('ba(?:a)*', 'ba+'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters on the left
            array('ba(a)?', 'ba{1,2}'),
            array('ba(a)+', 'ba{2,}'),
            array('ba(a)*', 'ba+'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the rightmost characters of
            // A sequence of characters from the right
            array('(?:a)?ba', '(?:a)?ba'),
            array('(?:a)+ba', '(?:a)+ba'),
            array('(?:a)*ba', '(?:a)*ba'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the rightmost characters of
            // A sequence of characters from the right
            array('(a)?ba', '(a)?ba'),
            array('(a)+ba', '(a)+ba'),
            array('(a)*ba', '(a)*ba'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ba(?:a){1,2}', 'ba{2,3}'),
            array('ba(?:a){3,4}', 'ba{4,5}'),
            array('ba(?:a)?{3,4}', 'ba{1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters on the left
            array('ba(a){1,2}', 'ba{2,3}'),
            array('ba(a){3,4}', 'ba{4,5}'),
            array('ba(a)?{3,4}', 'ba{1,5}'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the rightmost characters of
            // A sequence of characters from the right
            array('(?:a){1,2}ba', '(?:a){1,2}ba'),
            array('(?:a){3,4}ba', '(?:a){3,4}ba'),
            array('(?:a)?{3,4}ba', '(?:a)?{3,4}ba'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the rightmost characters of the
            // A sequence of characters from the right
            array('(a){1,2}ba', '(a){1,2}ba'),
            array('(a){3,4}ba', '(a){3,4}ba'),
            array('(a)?{3,4}ba', '(a)?{3,4}ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character on the left
            array('a(?:ba)?', 'a(?:ba)?'),
            array('a(?:ba)+', 'a(?:ba)+'),
            array('a(?:ba)*', 'a(?:ba)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the subpattern with
            // Character on the left
            array('a(ba)?', 'a(ba)?'),
            array('a(ba)+', 'a(ba)+'),
            array('a(ba)*', 'a(ba)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character to the right
            array('(?:ba)?a', '(?:ba)?a'),
            array('(?:ba)+a', '(?:ba)+a'),
            array('(?:ba)*a', '(?:ba)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character to the right
            array('(ba)?a', '(ba)?a'),
            array('(ba)+a', '(ba)+a'),
            array('(ba)*a', '(ba)*a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character on the left
            array('a(?:ba){1,2}', 'a(?:ba){1,2}'),
            array('a(?:ba){3,4}', 'a(?:ba){3,4}'),
            array('a(?:ba)?{3,4}', 'a(?:ba)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character on the left
            array('a(ba){1,2}', 'a(ba){1,2}'),
            array('a(ba){3,4}', 'a(ba){3,4}'),
            array('a(ba)?{3,4}', 'a(ba)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Character to the right
            array('(?:ba){1,2}a', '(?:ba){1,2}a'),
            array('(?:ba){3,4}a', '(?:ba){3,4}a'),
            array('(?:ba)?{3,4}a', '(?:ba)?{3,4}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Character on the left
            array('(ba){1,2}a', '(ba){1,2}a'),
            array('(ba){3,4}a', '(ba){3,4}a'),
            array('(ba)?{3,4}a', '(ba)?{3,4}a'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Rightmost characters of a sequence of characters on the left
            array('ba(?:ab)?', 'ba(?:ab)?'),
            array('ba(?:ab)+', 'ba(?:ab)+'),
            array('ba(?:ab)*', 'ba(?:ab)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ba)?', 'ab(?:ba)?'),
            array('ab(?:ba)+', 'ab(?:ba)+'),
            array('ab(?:ba)*', 'ab(?:ba)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters on the left
            array('ba(ab)?', 'ba(ab)?'),
            array('ba(ab)+', 'ba(ab)+'),
            array('ba(ab)*', 'ba(ab)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters on the left
            array('ab(ba)?', 'ab(ba)?'),
            array('ab(ba)+', 'ab(ba)+'),
            array('ab(ba)*', 'ab(ba)*'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Rightmost characters of a sequence of characters to the right
            array('(?:ab)?ba', '(?:ab)?ba'),
            array('(?:ab)+ba', '(?:ab)+ba'),
            array('(?:ab)*ba', '(?:ab)*ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ba)?ab', '(?:ba)?ab'),
            array('(?:ba)+ab', '(?:ba)+ab'),
            array('(?:ba)*ab', '(?:ba)*ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters from the right
            array('(ab)?ba', '(ab)?ba'),
            array('(ab)+ba', '(ab)+ba'),
            array('(ab)*ba', '(ab)*ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters to the right
            array('(ba)?ab', '(ba)?ab'),
            array('(ba)+ab', '(ba)+ab'),
            array('(ba)*ab', '(ba)*ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // Rightmost characters of a sequence of characters on the left
            array('ba(?:ab){1,2}', 'ba(?:ab){1,2}'),
            array('ba(?:ab){3,4}', 'ba(?:ab){3,4}'),
            array('ba(?:ab)?{3,4}', 'ba(?:ab)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters on the left
            array('ab(?:ba){1,2}', 'ab(?:ba){1,2}'),
            array('ab(?:ba){3,4}', 'ab(?:ba){3,4}'),
            array('ab(?:ba)?{3,4}', 'ab(?:ba)?{3,4}'),
            // Integration tests on a combination of quantifiersв: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters on the left
            array('ba(ab){1,2}', 'ba(ab){1,2}'),
            array('ba(ab){3,4}', 'ba(ab){3,4}'),
            array('ba(ab)?{3,4}', 'ba(ab)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters on the left
            array('ab(ba){1,2}', 'ab(ba){1,2}'),
            array('ab(ba){3,4}', 'ab(ba){3,4}'),
            array('ab(ba)?{3,4}', 'ab(ba)?{3,4}'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters within the group with
            // The rightmost characters of a sequence of characters to the right
            array('(?:ab){1,2}ba', '(?:ab){1,2}ba'),
            array('(?:ab){3,4}ba', '(?:ab){3,4}ba'),
            array('(?:ab)?{3,4}ba', '(?:ab)?{3,4}ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Right character sequence of characters within the group with
            // Leftmost character of a sequence of characters to the right
            array('(?:ba){1,2}ab', '(?:ba){1,2}ab'),
            array('(?:ba){3,4}ab', '(?:ba){3,4}ab'),
            array('(?:ba)?{3,4}ab', '(?:ba)?{3,4}ab'),
            // Integration tests on a combination of quantifiers: match extreme
            // Leftmost character of a sequence of characters inside a subpattern with extreme
            // Right character from a sequence of characters from the right
            array('(ab){1,2}ba', '(ab){1,2}ba'),
            array('(ab){3,4}ba', '(ab){3,4}ba'),
            array('(ab)?{3,4}ba', '(ab)?{3,4}ba'),
            // Integration tests on a combination of quantifiers: match extreme
            // Rightmost character of the character sequences inside a subpattern with
            // Leftmost character of a sequence of characters to the right
            array('(ba){1,2}ab', '(ba){1,2}ab'),
            array('(ba){3,4}ab', '(ba){3,4}ab'),
            array('(ba)?{3,4}ab', '(ba)?{3,4}ab'),

            // Alternatives
            array('a|a', 'a'),
            array('[a]|a', 'a'),
            array('a|[a]', 'a'),
            array('[a]|[a]', 'a'),
            array('a|a|', 'a|'),
            array('a|a|()', 'a|()'),
            array('a|a|(?:)', 'a|(?:)'),

            // Alternatives with quant childrens
            /*array('a|a?', 'a'),
            array('a?|a', 'a'),
            array('a?|a?', 'a'),
            array('a|a+', 'a'),
            array('a+|a', 'a'),
            array('a+|a+', 'a'),
            array('a|a*', 'a'),
            array('a*|a', 'a'),
            array('a*|a*', 'a'),
            array('a|a{1,3}', 'a'),
            array('a{1,3}|a', 'a'),
            array('a{1,3}|a{1,3}', 'a'),

            array('[a]|a?', 'a'),
            array('[a]?|a', 'a'),
            array('[a]?|a?', 'a'),
            array('[a]|a+', 'a'),
            array('[a]+|a', 'a'),
            array('[a]+|a+', 'a'),
            array('[a]|a*', 'a'),
            array('[a]*|a', 'a'),
            array('[a]*|a*', 'a'),
            array('[a]|a{1,3}', 'a'),
            array('[a]{1,3}|a', 'a'),
            array('[a]{1,3}|a{1,3}', 'a'),

            array('a|[a]?', 'a'),
            array('a?|[a]', 'a'),
            array('a?|[a]?', 'a'),
            array('a|[a]+', 'a'),
            array('a+|[a]', 'a'),
            array('a+|[a]+', 'a'),
            array('a|[a]*', 'a'),
            array('a*|[a]', 'a'),
            array('a*|[a]*', 'a'),
            array('a|[a]{1,3}', 'a'),
            array('a{1,3}|[a]', 'a'),
            array('a{1,3}|[a]{1,3}', 'a'),

            array('[a]|[a]?', 'a'),
            array('[a]?|[a]', 'a'),
            array('[a]?|[a]?', 'a'),
            array('[a]|[a]+', 'a'),
            array('[a]+|[a]', 'a'),
            array('[a]+|[a]+', 'a'),
            array('[a]|[a]*', 'a'),
            array('[a]*|[a]', 'a'),
            array('[a]*|[a]*', 'a'),
            array('[a]|[a]{1,3}', 'a'),
            array('[a]{1,3}|[a]', 'a'),
            array('[a]{1,3}|[a]{1,3}', 'a'),


            array('a|a?|', 'a'),
            array('a?|a|', 'a'),
            array('a?|a?|', 'a'),
            array('a|a+|', 'a'),
            array('a+|a|', 'a'),
            array('a+|a+|', 'a'),
            array('a|a*|', 'a'),
            array('a*|a|', 'a'),
            array('a*|a*|', 'a'),
            array('a|a{1,3}|', 'a'),
            array('a{1,3}|a|', 'a'),
            array('a{1,3}|a{1,3}|', 'a'),

            array('[a]|a?|', 'a'),
            array('[a]?|a|', 'a'),
            array('[a]?|a?|', 'a'),
            array('[a]|a+|', 'a'),
            array('[a]+|a|', 'a'),
            array('[a]+|a+|', 'a'),
            array('[a]|a*|', 'a'),
            array('[a]*|a|', 'a'),
            array('[a]*|a*|', 'a'),
            array('[a]|a{1,3}|', 'a'),
            array('[a]{1,3}|a|', 'a'),
            array('[a]{1,3}|a{1,3}|', 'a'),

            array('a|[a]?|', 'a'),
            array('a?|[a]|', 'a'),
            array('a?|[a]?|', 'a'),
            array('a|[a]+|', 'a'),
            array('a+|[a]|', 'a'),
            array('a+|[a]+|', 'a'),
            array('a|[a]*|', 'a'),
            array('a*|[a]|', 'a'),
            array('a*|[a]*|', 'a'),
            array('a|[a]{1,3}|', 'a'),
            array('a{1,3}|[a]|', 'a'),
            array('a{1,3}|[a]{1,3}|', 'a'),

            array('[a]|[a]?|', 'a'),
            array('[a]?|[a]|', 'a'),
            array('[a]?|[a]?|', 'a'),
            array('[a]|[a]+|', 'a'),
            array('[a]+|[a]|', 'a'),
            array('[a]+|[a]+|', 'a'),
            array('[a]|[a]*|', 'a'),
            array('[a]*|[a]|', 'a'),
            array('[a]*|[a]*|', 'a'),
            array('[a]|[a]{1,3}|', 'a'),
            array('[a]{1,3}|[a]|', 'a'),
            array('[a]{1,3}|[a]{1,3}|', 'a'),


            array('a|a?|()', 'a'),
            array('a?|a|()', 'a'),
            array('a?|a?|()', 'a'),
            array('a|a+|()', 'a'),
            array('a+|a|()', 'a'),
            array('a+|a+|()', 'a'),
            array('a|a*|()', 'a'),
            array('a*|a|()', 'a'),
            array('a*|a*|()', 'a'),
            array('a|a{1,3}|()', 'a'),
            array('a{1,3}|a|()', 'a'),
            array('a{1,3}|a{1,3}|()', 'a'),

            array('[a]|a?|()', 'a'),
            array('[a]?|a|()', 'a'),
            array('[a]?|a?|()', 'a'),
            array('[a]|a+|()', 'a'),
            array('[a]+|a|()', 'a'),
            array('[a]+|a+|()', 'a'),
            array('[a]|a*|()', 'a'),
            array('[a]*|a|()', 'a'),
            array('[a]*|a*|()', 'a'),
            array('[a]|a{1,3}|()', 'a'),
            array('[a]{1,3}|a|()', 'a'),
            array('[a]{1,3}|a{1,3}|()', 'a'),

            array('a|[a]?|()', 'a'),
            array('a?|[a]|()', 'a'),
            array('a?|[a]?|()', 'a'),
            array('a|[a]+|()', 'a'),
            array('a+|[a]|()', 'a'),
            array('a+|[a]+|()', 'a'),
            array('a|[a]*|()', 'a'),
            array('a*|[a]|()', 'a'),
            array('a*|[a]*|()', 'a'),
            array('a|[a]{1,3}|()', 'a'),
            array('a{1,3}|[a]|()', 'a'),
            array('a{1,3}|[a]{1,3}|()', 'a'),

            array('[a]|[a]?|()', 'a'),
            array('[a]?|[a]|()', 'a'),
            array('[a]?|[a]?|()', 'a'),
            array('[a]|[a]+|()', 'a'),
            array('[a]+|[a]|()', 'a'),
            array('[a]+|[a]+|()', 'a'),
            array('[a]|[a]*|()', 'a'),
            array('[a]*|[a]|()', 'a'),
            array('[a]*|[a]*|()', 'a'),
            array('[a]|[a]{1,3}|()', 'a'),
            array('[a]{1,3}|[a]|()', 'a'),
            array('[a]{1,3}|[a]{1,3}|()', 'a'),


            array('a|a?|(?:)', 'a'),
            array('a?|a|(?:)', 'a'),
            array('a?|a?|(?:)', 'a'),
            array('a|a+|(?:)', 'a'),
            array('a+|a|(?:)', 'a'),
            array('a+|a+|(?:)', 'a'),
            array('a|a*|(?:)', 'a'),
            array('a*|a|(?:)', 'a'),
            array('a*|a*|(?:)', 'a'),
            array('a|a{1,3}|(?:)', 'a'),
            array('a{1,3}|a|(?:)', 'a'),
            array('a{1,3}|a{1,3}|(?:)', 'a'),

            array('[a]|a?|(?:)', 'a'),
            array('[a]?|a|(?:)', 'a'),
            array('[a]?|a?|(?:)', 'a'),
            array('[a]|a+|(?:)', 'a'),
            array('[a]+|a|(?:)', 'a'),
            array('[a]+|a+|(?:)', 'a'),
            array('[a]|a*|(?:)', 'a'),
            array('[a]*|a|(?:)', 'a'),
            array('[a]*|a*|(?:)', 'a'),
            array('[a]|a{1,3}|(?:)', 'a'),
            array('[a]{1,3}|a|(?:)', 'a'),
            array('[a]{1,3}|a{1,3}|(?:)', 'a'),

            array('a|[a]?|(?:)', 'a'),
            array('a?|[a]|(?:)', 'a'),
            array('a?|[a]?|(?:)', 'a'),
            array('a|[a]+|(?:)', 'a'),
            array('a+|[a]|(?:)', 'a'),
            array('a+|[a]+|(?:)', 'a'),
            array('a|[a]*|(?:)', 'a'),
            array('a*|[a]|(?:)', 'a'),
            array('a*|[a]*|(?:)', 'a'),
            array('a|[a]{1,3}|(?:)', 'a'),
            array('a{1,3}|[a]|(?:)', 'a'),
            array('a{1,3}|[a]{1,3}|(?:)', 'a'),

            array('[a]|[a]?|(?:)', 'a'),
            array('[a]?|[a]|(?:)', 'a'),
            array('[a]?|[a]?|(?:)', 'a'),
            array('[a]|[a]+|(?:)', 'a'),
            array('[a]+|[a]|(?:)', 'a'),
            array('[a]+|[a]+|(?:)', 'a'),
            array('[a]|[a]*|(?:)', 'a'),
            array('[a]*|[a]|(?:)', 'a'),
            array('[a]*|[a]*|(?:)', 'a'),
            array('[a]|[a]{1,3}|(?:)', 'a'),
            array('[a]{1,3}|[a]|(?:)', 'a'),
            array('[a]{1,3}|[a]{1,3}|(?:)', 'a'),*/

            // Part of alternatives
            // TODO
            array('a|a|b', 'a|b'),
            array('b|a|a', 'b|a'),
            array('b|a|a|c', 'b|a|c'),

            // Part of alternatives with quants
            // TODO
            /*array('a|a?|b', 'a|b'),
            array('a?|a|b', 'a|b'),
            array('a?|a?|b', 'a|b'),
            array('a|a+|b', 'a|b'),
            array('a+|a|b', 'a|b'),
            array('a+|a+|b', 'a|b'),
            array('a|a*|b', 'a|b'),
            array('a*|a|b', 'a|b'),
            array('a*|a*|b', 'a|b'),
            array('a|a{1,3}|b', 'a|b'),
            array('a{1,3}|a|b', 'a|b'),
            array('a{1,3}|a{1,3}|b', 'a|b'),

            array('b|a|a?', 'a|b'),
            array('b|a?|a', 'a|b'),
            array('b|a?|a?', 'a|b'),
            array('b|a|a+', 'a|b'),
            array('b|a+|a', 'a|b'),
            array('b|a+|a+', 'a|b'),
            array('b|a|a*', 'a|b'),
            array('b|a*|a', 'a|b'),
            array('b|a*|a*', 'a|b'),
            array('b|a|a{1,3}', 'a|b'),
            array('b|a{1,3}|a', 'a|b'),
            array('b|a{1,3}|a{1,3}', 'a|b'),

            array('b|a|a?|b', 'a|b'),
            array('b|a?|a|b', 'a|b'),
            array('b|a?|a?|b', 'a|b'),
            array('b|a|a+|b', 'a|b'),
            array('b|a+|a|b', 'a|b'),
            array('b|a+|a+|b', 'a|b'),
            array('b|a|a*|b', 'a|b'),
            array('b|a*|a|b', 'a|b'),
            array('b|a*|a*|b', 'a|b'),
            array('b|a|a{1,3}|b', 'a|b'),
            array('b|a{1,3}|a|b', 'a|b'),
            array('b|a{1,3}|a{1,3}|b', 'a|b'),*/

            array('ab|ab', 'ab'),
            array('ab|ab|ab', 'ab'),
            /*array('ab|ab|a', 'ab|a'),
            array('ab|[a]b|a', 'ab|a'),
            array('ab|a[b]|a', 'ab|a'),
            array('ab|[ab]|a', 'ab|[ab]|a'),
            array('ab|[^a]b|a', 'ab|[^a]b|a'),
            array('ab|a[^b]|a', 'ab|a[^b]|a'),
            array('ab|[^ab]|a', 'ab|[^ab]|a'),

            array('a|ab|ab', 'ab|a'),
            array('a|ab|[a]b', 'ab|a'),
            array('a|ab|a[b]', 'ab|a'),
            array('a|ab|[ab]', 'ab|[ab]|a'),
            array('a|ab|[^a]b', 'ab|[^a]b|a'),
            array('a|ab|a[^b]', 'ab|a[^b]|a'),
            array('a|ab|[^ab]', 'ab|[^ab]|a')

            array('a|ab|ab|a', 'ab|a'),
            array('a|ab|[a]b|a', 'ab|a'),
            array('a|ab|a[b]|a', 'ab|a'),
            array('a|ab|[ab]|a', 'ab|[ab]|a'),
            array('a|ab|[^a]b|a', 'ab|[^a]b|a'),
            array('a|ab|a[^b]|a', 'ab|a[^b]|a'),
            array('a|ab|[^ab]|a', 'ab|[^ab]|a')*/

            array('a{2}ba{2}b', '(?:a{2}b){2}'),
            array('ab{2}ab{2}', '(?:ab{2}){2}'),
            array('ca{2}bca{2}b', '(?:ca{2}b){2}'),
            array('a{2}bca{2}bc', '(?:a{2}bc){2}'),
            array('cab{2}cab{2}', '(?:cab{2}){2}'),
            array('ab{2}cab{2}c', '(?:ab{2}c){2}'),

            // Repeated simple assertions
            array('^^a', '^^a'),
            array('^a^', '^a^'),
            array('a^^', 'a^^'),
            array('^^^a', '^^^a'),
            array('^^a^', '^^a^'),
            array('^a^^', '^a^^'),
            array('a^^^', 'a^^^'),

            array('^^aa', '^^a{2}'),
            array('^aa^', '^a{2}^'),
            array('aa^^', 'a{2}^^'),
            array('^^^aa', '^^^a{2}'),
            array('^^aa^', '^^a{2}^'),
            array('^aa^^', '^a{2}^^'),
            array('aa^^^', 'a{2}^^^'),

            array('$$a', '$$a'),
            array('$a$', '$a$'),
            array('a$$', 'a$$'),
            array('$$$a', '$$$a'),
            array('$$a$', '$$a$'),
            array('$a$$', '$a$$'),
            array('a$$$', 'a$$$'),

            array('$$aa', '$$a{2}'),
            array('$aa$', '$a{2}$'),
            array('aa$$', 'a{2}$$'),
            array('$$$aa', '$$$a{2}'),
            array('$$aa$', '$$a{2}$'),
            array('$aa$$', '$a{2}$$'),
            array('aa$$$', 'a{2}$$$'),


            // Repeated alternatives
            //array('(?:a|b)?(?:a|b|)', '(?:(?:a|b)?){2}'),

            // Quant from 1 to 1
            array('a{1,1}a', 'a{2}'),
            array('aa{1,1}', 'a{2}'),
            array('a{1,1}a{1,1}', 'a{2}'),

            array('aaa{1,1}', 'a{3}'),
            array('aa{1,1}a', 'a{3}'),
            array('a{1,1}aa', 'a{3}'),
            array('a{1,1}a{1,1}a', 'a{3}'),
            array('aa{1,1}a{1,1}', 'a{3}'),
            array('a{1,1}aa{1,1}', 'a{3}'),
            array('a{1,1}a{1,1}a{1,1}', 'a{3}'),
            array('aa(?:a){1,1}', 'a{3}'),
            array('aa{1,1}(?:a){1,1}', 'a{3}'),
            array('a{1,1}a(?:a){1,1}', 'a{3}'),
            array('a{1,1}a{1,1}(?:a){1,1}', 'a{3}'),
            array('aa(?:a{1,1})', 'a{3}'),
            array('aa{1,1}(?:a{1,1})', 'a{3}'),
            array('a{1,1}a(?:a{1,1})', 'a{3}'),
            array('a{1,1}a{1,1}(?:a{1,1})', 'a{3}'),
            array('aa(?:a){1,1}(?:a){1,1}', 'a{4}'),
            array('aa{1,1}(?:a){1,1}(?:a){1,1}', 'a{4}'),
            array('a{1,1}a(?:a){1,1}(?:a){1,1}', 'a{4}'),
            array('a{1,1}a{1,1}(?:a){1,1}(?:a){1,1}', 'a{4}'),
            array('aa(?:a{1,1})(?:a{1,1})', 'a{4}'),
            array('aa{1,1}(?:a{1,1})(?:a{1,1})', 'a{4}'),
            array('a{1,1}a(?:a{1,1})(?:a{1,1})', 'a{4}'),
            array('a{1,1}a{1,1}(?:a{1,1})(?:a{1,1})', 'a{4}'),
            array('aa(?:a{1,1})(?:a){1,1}', 'a{4}'),
            array('aa{1,1}(?:a{1,1})(?:a){1,1}', 'a{4}'),
            array('a{1,1}a(?:a{1,1})(?:a){1,1}', 'a{4}'),
            array('a{1,1}a{1,1}(?:a{1,1})(?:a){1,1}', 'a{4}'),
            array('aa(?:a){1,1}(?:a{1,1})', 'a{4}'),
            array('aa{1,1}(?:a){1,1}(?:a{1,1})', 'a{4}'),
            array('a{1,1}a(?:a){1,1}(?:a{1,1})', 'a{4}'),
            array('a{1,1}a{1,1}(?:a){1,1}(?:a{1,1})', 'a{4}'),
            array('aa(a){1,1}', 'a{3}'),
            array('aa{1,1}(a){1,1}', 'a{3}'),
            array('a{1,1}a(a){1,1}', 'a{3}'),
            array('a{1,1}a{1,1}(a){1,1}', 'a{3}'),
            array('aa(a{1,1})', 'a{3}'),
            array('aa{1,1}(a{1,1})', 'a{3}'),
            array('a{1,1}a(a{1,1})', 'a{3}'),
            array('a{1,1}a{1,1}(a{1,1})', 'a{3}'),
            array('aa(a){1,1}(a){1,1}', 'a{4}'),
            array('aa{1,1}(a){1,1}(a){1,1}', 'a{4}'),
            array('a{1,1}a(a){1,1}(a){1,1}', 'a{4}'),
            array('a{1,1}a{1,1}(a){1,1}(a){1,1}', 'a{4}'),
            array('aa(a{1,1})(a{1,1})', 'a{4}'),
            array('aa{1,1}(a{1,1})(a{1,1})', 'a{4}'),
            array('a{1,1}a(a{1,1})(a{1,1})', 'a{4}'),
            array('a{1,1}a{1,1}(a{1,1})(a{1,1})', 'a{4}'),
            array('aa(a{1,1})(a){1,1}', 'a{4}'),
            array('aa{1,1}(a{1,1})(a){1,1}', 'a{4}'),
            array('a{1,1}a(a{1,1})(a){1,1}', 'a{4}'),
            array('a{1,1}a{1,1}(a{1,1})(a){1,1}', 'a{4}'),
            array('aa(a){1,1}(a{1,1})', 'a{4}'),
            array('aa{1,1}(a){1,1}(a{1,1})', 'a{4}'),
            array('a{1,1}a(a){1,1}(a{1,1})', 'a{4}'),
            array('a{1,1}a{1,1}(a){1,1}(a{1,1})', 'a{4}'),
            array('(aa)(a){1,1}', 'a{3}'),
            /*array('(aa){1,1}(a){1,1}', 'a{4}'),
            array('(aa{1,1})(a){1,1}', 'a{3}'),
            array('(a{1,1}a)(a){1,1}', 'a{3}'),
            array('(a{1,1}a{1,1})(a){1,1}', 'a{3}'),
            array('(a{1,1}a){1,1}(a){1,1}', 'a{4}'),
            array('(aa{1,1}){1,1}(a){1,1}', 'a{3}'),
            array('(a{1,1}a{1,1}){1,1}(a){1,1}', 'a{3}'),
            array('(aa)(a{1,1})', 'a{3}'),
            array('(aa){1,1}(a{1,1})', 'a{3}'),
            array('(aa{1,1})(a{1,1})', 'a{3}'),
            array('(a{1,1}a)(a{1,1})', 'a{3}'),
            array('(a{1,1}a{1,1})(a{1,1})', 'a{3}'),
            array('(a{1,1}a){1,1}(a{1,1})', 'a{3}'),
            array('(aa{1,1}){1,1}(a{1,1})', 'a{3}'),
            array('(a{1,1}a{1,1}){1,1}(a{1,1})', 'a{3}'),
            array('(aa)(?:a){1,1}', 'a{3}'),
            array('(aa){1,1}(?:a){1,1}', 'a{3}'),
            array('(aa{1,1})(?:a){1,1}', 'a{3}'),
            array('(a{1,1}a)(?:a){1,1}', 'a{3}'),
            array('(a{1,1}a{1,1})(?:a){1,1}', 'a{3}'),
            array('(a{1,1}a){1,1}(?:a){1,1}', 'a{3}'),
            array('(aa{1,1}){1,1}(?:a){1,1}', 'a{3}'),
            array('(a{1,1}a{1,1}){1,1}(?:a){1,1}', 'a{3}'),
            array('(aa)(?:a{1,1})', 'a{3}'),
            array('(aa){1,1}(?:a{1,1})', 'a{3}'),
            array('(aa{1,1})(?:a{1,1})', 'a{3}'),
            array('(a{1,1}a)(?:a{1,1})', 'a{3}'),
            array('(a{1,1}a{1,1})(?:a{1,1})', 'a{3}'),
            array('(a{1,1}a){1,1}(?:a{1,1})', 'a{3}'),
            array('(aa{1,1}){1,1}(?:a{1,1})', 'a{3}'),
            array('(a{1,1}a{1,1}){1,1}(?:a{1,1})', 'a{3}'),*/

            // \Q+-*/\E
            //array('\Q+-*/\Eaa', '\Q+-*/\Ea{2}}'),
        );
    }

    protected function get_test_repeated_assertions_trivial() {
        return array(
            array('^^a', '^a'),
            array('^a^', '^a^'),
            array('a^^', 'a^'),
            array('^^^a', '^^a'),
            array('^^a^', '^a^'),
            array('^a^^', '^a^'),
            array('a^^^', 'a^^'),

            array('$$a', '$a'),
            array('$a$', '$a$'),
            array('a$$', 'a$'),
            array('$$$a', '$$a'),
            array('$$a$', '$a$'),
            array('$a$$', '$a$'),
            array('a$$$', 'a$$'),

            array('\A\Aa', '\Aa'),
            array('\Aa\A', '\Aa\A'),
            array('a\A\A', 'a\A'),
            array('\A\A\Aa', '\A\Aa'),
            array('\A\Aa\A', '\Aa\A'),
            array('\Aa\A\A', '\Aa\A'),
            array('a\A\A\A', 'a\A\A'),

            array('\Z\Za', '\Za'),
            array('\Za\Z', '\Za\Z'),
            array('a\Z\Z', 'a\Z'),
            array('\Z\Z\Za', '\Z\Za'),
            array('\Z\Za\Z', '\Za\Z'),
            array('\Za\Z\Z', '\Za\Z'),
            array('a\Z\Z\Z', 'a\Z\Z'),

            array('\z\za', '\za'),
            array('\za\z', '\za\z'),
            array('a\z\z', 'a\z'),
            array('\z\z\za', '\z\za'),
            array('\z\za\z', '\za\z'),
            array('\za\z\z', '\za\z'),
            array('a\z\z\z', 'a\z\z'),


            array('abc^^a', 'abc^a'),
            array('abc^a^', 'abc^a^'),
            array('abca^^', 'abca^'),
            array('abc^^^a', 'abc^^a'),
            array('abc^^a^', 'abc^a^'),
            array('abc^a^^', 'abc^a^'),
            array('abca^^^', 'abca^^'),

            array('abc$$a', 'abc$a'),
            array('abc$a$', 'abc$a$'),
            array('abca$$', 'abca$'),
            array('abc$$$a', 'abc$$a'),
            array('abc$$a$', 'abc$a$'),
            array('abc$a$$', 'abc$a$'),
            array('abca$$$', 'abca$$'),

            array('abc\A\Aa', 'abc\Aa'),
            array('abc\Aa\A', 'abc\Aa\A'),
            array('abca\A\A', 'abca\A'),
            array('abc\A\A\Aa', 'abc\A\Aa'),
            array('abc\A\Aa\A', 'abc\Aa\A'),
            array('abc\Aa\A\A', 'abc\Aa\A'),
            array('abca\A\A\A', 'abca\A\A'),

            array('abc\Z\Za', 'abc\Za'),
            array('abc\Za\Z', 'abc\Za\Z'),
            array('abca\Z\Z', 'abca\Z'),
            array('abc\Z\Z\Za', 'abc\Z\Za'),
            array('abc\Z\Za\Z', 'abc\Za\Z'),
            array('abc\Za\Z\Z', 'abc\Za\Z'),
            array('abca\Z\Z\Z', 'abca\Z\Z'),

            array('abc\z\za', 'abc\za'),
            array('abc\za\z', 'abc\za\z'),
            array('abca\z\z', 'abca\z'),
            array('abc\z\z\za', 'abc\z\za'),
            array('abc\z\za\z', 'abc\za\z'),
            array('abc\za\z\z', 'abc\za\z'),
            array('abca\z\z\z', 'abca\z\z'),

            array('^^aabc', '^aabc'),
            array('^a^abc', '^a^abc'),
            array('a^^abc', 'a^abc'),
            array('^^^aabc', '^^aabc'),
            array('^^a^abc', '^a^abc'),
            array('^a^^abc', '^a^abc'),
            array('a^^^abc', 'a^^abc'),

            array('$$aabc', '$aabc'),
            array('$a$abc', '$a$abc'),
            array('a$$abc', 'a$abc'),
            array('$$$aabc', '$$aabc'),
            array('$$a$abc', '$a$abc'),
            array('$a$$abc', '$a$abc'),
            array('a$$$abc', 'a$$abc'),

            array('\A\Aaabc', '\Aaabc'),
            array('\Aa\Aabc', '\Aa\Aabc'),
            array('a\A\Aabc', 'a\Aabc'),
            array('\A\A\Aaabc', '\A\Aaabc'),
            array('\A\Aa\Aabc', '\Aa\Aabc'),
            array('\Aa\A\Aabc', '\Aa\Aabc'),
            array('a\A\A\Aabc', 'a\A\Aabc'),

            array('\Z\Zaabc', '\Zaabc'),
            array('\Za\Zabc', '\Za\Zabc'),
            array('a\Z\Zabc', 'a\Zabc'),
            array('\Z\Z\Zaabc', '\Z\Zaabc'),
            array('\Z\Za\Zabc', '\Za\Zabc'),
            array('\Za\Z\Zabc', '\Za\Zabc'),
            array('a\Z\Z\Zabc', 'a\Z\Zabc'),

            array('\z\zaabc', '\zaabc'),
            array('\za\zabc', '\za\zabc'),
            array('a\z\zabc', 'a\zabc'),
            array('\z\z\zaabc', '\z\zaabc'),
            array('\z\za\zabc', '\za\zabc'),
            array('\za\z\zabc', '\za\zabc'),
            array('a\z\z\zabc', 'a\z\zabc'),

            array('abc^^aabc', 'abc^aabc'),
            array('abc^a^abc', 'abc^a^abc'),
            array('abca^^abc', 'abca^abc'),
            array('abc^^^aabc', 'abc^^aabc'),
            array('abc^^a^abc', 'abc^a^abc'),
            array('abc^a^^abc', 'abc^a^abc'),
            array('abca^^^abc', 'abca^^abc'),

            array('abc$$aabc', 'abc$aabc'),
            array('abc$a$abc', 'abc$a$abc'),
            array('abca$$abc', 'abca$abc'),
            array('abc$$$aabc', 'abc$$aabc'),
            array('abc$$a$abc', 'abc$a$abc'),
            array('abc$a$$abc', 'abc$a$abc'),
            array('abca$$$abc', 'abca$$abc'),

            array('abc\A\Aaabc', 'abc\Aaabc'),
            array('abc\Aa\Aabc', 'abc\Aa\Aabc'),
            array('abca\A\Aabc', 'abca\Aabc'),
            array('abc\A\A\Aaabc', 'abc\A\Aaabc'),
            array('abc\A\Aa\Aabc', 'abc\Aa\Aabc'),
            array('abc\Aa\A\Aabc', 'abc\Aa\Aabc'),
            array('abca\A\A\Aabc', 'abca\A\Aabc'),

            array('abc\Z\Zaabc', 'abc\Zaabc'),
            array('abc\Za\Zabc', 'abc\Za\Zabc'),
            array('abca\Z\Zabc', 'abca\Zabc'),
            array('abc\Z\Z\Zaabc', 'abc\Z\Zaabc'),
            array('abc\Z\Za\Zabc', 'abc\Za\Zabc'),
            array('abc\Za\Z\Zabc', 'abc\Za\Zabc'),
            array('abca\Z\Z\Zabc', 'abca\Z\Zabc'),

            array('abc\z\zaabc', 'abc\zaabc'),
            array('abc\za\zabc', 'abc\za\zabc'),
            array('abca\z\zabc', 'abca\zabc'),
            array('abc\z\z\zaabc', 'abc\z\zaabc'),
            array('abc\z\za\zabc', 'abc\za\zabc'),
            array('abc\za\z\zabc', 'abc\za\zabc'),
            array('abca\z\z\zabc', 'abca\z\zabc'),


            array('^|^a', '^|^a'),
            array('^^|a', '^|a'),
            array('^|a^', '^|a^'),
            array('^a|^', '^a|^'),
            array('a|^^', 'a|^'),
//            array('a^|^', 'a^|^'),
            array('^|^^a', '^|^a'),
            array('^^|^a', '^|^a'),
            array('^^|^|a', '^|^|a'),
//            array('^|^|^a', '^|^|^a'),
//            array('^|^|^|a', '^|^|^|a'),
            array('^|^a^', '^|^a^'),
            array('^^|a^', '^|a^'),
            array('^^|a^', '^|a^'),
            array('^^a|^', '^a|^'),
            array('^|^a|^', '^|^a|^'),
            array('^|a^^', '^|a^'),
            array('^a|^^', '^a|^'),
//            array('^a^|^', '^a^|^'),
//            array('^|a|^|^', '^|a|^|^'),
            array('a|^^^', 'a|^^'),
            array('a^|^^', 'a^|^'),
            array('a^^|^', 'a^|^'),
//            array('a^|^|^', 'a^|^|^'),


            /*array('(?:^)^a', '(?:^)a'),
            array('^(?:^)a', '(?:^)a'),
            array('(?:^)(?:^)a', '(?:^)a'),
            array('(?:^)a^', '(?:^)a^'),
            array('^a(?:^)', '^a(?:^)'),
            array('(?:^)a(?:^)', '(?:^)a(?:^)'),
            array('a(?:^)^', 'a(?:^)'),
            array('a^(?:^)', 'a^'),
            array('a(?:^)(?:^)', 'a(?:^)'),
            array('(?:^)^^a', '(?:^)^a'),
            array('^(?:^)^a', '^^a'),
            array('^^(?:^)a', '^(?:^)a'),
            array('(?:^)(?:^)^a', '(?:^)^a'),
            array('^(?:^)(?:^)a', '^(?:^)a'),
            array('(?:^)(?:^)(?:^)a', '(?:^)(?:^)a'),
            array('(?:^)^a^', '(?:^)a^'),
            array('^(?:^)a^', '^a^'),
            array('^^a(?:^)', '^a(?:^)'),
            array('(?:^)(?:^)a^', '(?:^)a^'),
            array('^(?:^)a(?:^)', '^a(?:^)'),
            array('(?:^)(?:^)a(?:^)', '(?:^)a(?:^)'),
            array('(?:^)a^^', '(?:^)a^'),
            array('^a(?:^)^', '^a(?:^)'),
            array('^a^(?:^)', '^a^'),
            array('(?:^)a(?:^)^', '(?:^)a(?:^)'),
            array('^a(?:^)(?:^)', '^a(?:^)'),
            array('(?:^)a(?:^)(?:^)', '(?:^)a(?:^)'),
            array('a(?:^)^^', 'a(?:^)^'),
            array('a^(?:^)^', 'a^^'),
            array('a^^(?:^)', 'a^(?:^)'),
            array('a(?:^)(?:^)^', 'a(?:^)^'),
            array('a^(?:^)(?:^)', 'a^(?:^)'),
            array('a(?:^)(?:^)(?:^)', 'a(?:^)(?:^)'),*/
        );
    }

    protected function get_test_single_charset_trivial() {
        return array(
            array('\\Q[a]\\E', '\\Q[a]\\E'),
//            array('\\Q[a]\\E[a]', '\\Q[a]\\Ea'),///

            array('[a]', 'a'),
            array('a[a]', 'aa'),
            array('[a]a', 'aa'),
            array('a[a]a', 'aaa'),
            array('b[a]c', 'bac'),
            array('[aa]', 'a'),
            array('a[aa]', 'aa'),
            array('[aa]a', 'aa'),
            array('a[aa]a', 'aaa'),
            array('[^a]', '[^a]'),
            array('a[^a]', 'a[^a]'),
            array('[^a]a', '[^a]a'),
            array('a[^a]a', 'a[^a]a'),
            array('b[^a]c', 'b[^a]c'),
            array('[^aa]', '[^aa]'),
            array('a[^aa]', 'a[^aa]'),
            array('[^aa]a', '[^aa]a'),
            array('a[^aa]a', 'a[^aa]a'),

            array('[\\]', '[\\]'),
            array('[^]', '[^]'),
            array('[$]', '\\$'),
            array('[.]', '\\.'),
            array('[[]', '\\['),
            array('[]]', '\\]'),
            array('[|]', '\\|'),
            array('[(]', '\\('),
            array('[)]', '\\)'),
            array('[?]', '\\?'),
            array('[+]', '\\+'),
            array('[*]', '\\*'),
            array('[{]', '\\{'),
            array('[}]', '\\}'),

            array('[\\z]', 'z'),
            array('[\\Z]', 'Z'),
            array('[\\A]', 'A'),
            array('[\\B]', 'B'),

            array('[\\a]', '[\\a]'),
            array('[\\b]', '[\\b]'),
            array('[\\e]', '[\\e]'),
            array('[\\f]', '[\\f]'),
            array('[\\r]', '[\\r]'),
            array('[\\t]', '[\\t]'),

            array('[a-a]', 'a'),
            array('[c-e]', '[c-e]'),
            array('[c-ef]', '[c-ef]'),
            array('[fc-ef]', '[fc-ef]'),
            array('[fc-e]', '[fc-e]'),
            array('[aabc-e]', '[aabc-e]'),
            array('[aabc-eaa]', '[aabc-eaa]'),
            array('[bc-eaa]', '[bc-eaa]'),

            array('[[:alnum:]]', '[[:alnum:]]'),
            array('[[:alpha:]]', '[[:alpha:]]'),
            array('[[:ascii:]]', '[[:ascii:]]'),
            array('[[:blank:]]', '[[:blank:]]'),
            array('[[:cntrl:]]', '[[:cntrl:]]'),
            array('[[:digit:]]', '[[:digit:]]'),
            array('[[:graph:]]', '[[:graph:]]'),
            array('[[:lower:]]', '[[:lower:]]'),
            array('[[:print:]]', '[[:print:]]'),
            array('[[:punct:]]', '[[:punct:]]'),
            array('[[:space:]]', '[[:space:]]'),
            array('[[:upper:]]', '[[:upper:]]'),
            array('[[:word:]]', '[[:word:]]'),
            array('[[:xdigit:]]', '[[:xdigit:]]'),

            array('[a]|', 'a|'),
            array('a|[a]', 'a|a'),
            array('a[a]|', 'aa|'),
            array('a|[a]|', 'a|a|'),
            array('[a]|a', 'a|a'),
            array('[a]a|', 'aa|'),
            array('[a]|a|', 'a|a|'),
            array('a|[a]a', 'a|aa'),
            array('a[a]|a', 'aa|a'),
            array('a[a]a|', 'aaa|'),
            array('a|[a]|a|', 'a|a|a|'),
            array('b|[a]c', 'b|ac'),
            array('b[a]|c', 'ba|c'),
            array('b[a]c|', 'bac|'),
            array('b|[a]|c|', 'b|a|c|'),
            array('[aa]|', 'a|'),
            array('a|[aa]', 'a|a'),
            array('a[aa]|', 'aa|'),
            array('a|[aa]|', 'a|a|'),
            array('[aa]|a', 'a|a'),
            array('[aa]a|', 'aa|'),
            array('[aa]|a|', 'a|a|'),
            array('a|[aa]a', 'a|aa'),
            array('a[aa]|a', 'aa|a'),
            array('a[aa]a|', 'aaa|'),
            array('a|[aa]|a', 'a|a|a'),
            array('[^a]|', '[^a]|'),
            array('a|[^a]', 'a|[^a]'),
            array('a[^a]|', 'a[^a]|'),
            array('a|[^a]|', 'a|[^a]|'),
            array('[^a]|a', '[^a]|a'),
            array('[^a]a|', '[^a]a|'),
            array('[^a]|a|', '[^a]|a|'),
            array('a|[^a]a', 'a|[^a]a'),
            array('a[^a]|a', 'a[^a]|a'),
            array('a[^a]a|', 'a[^a]a|'),
            array('a|[^a]|a|', 'a|[^a]|a|'),
            array('b|[^a]c', 'b|[^a]c'),
            array('b[^a]|c', 'b[^a]|c'),
            array('b[^a]c|', 'b[^a]c|'),
            array('b|[^a]|c|', 'b|[^a]|c|'),
            array('[^aa]|', '[^aa]|'),
            array('a|[^aa]', 'a|[^aa]'),
            array('a[^aa]|', 'a[^aa]|'),
            array('a|[^aa]|', 'a|[^aa]|'),
            array('[^aa]|a', '[^aa]|a'),
            array('[^aa]a|', '[^aa]a|'),
            array('[^aa]|a|', '[^aa]|a|'),
            array('a|[^aa]a', 'a|[^aa]a'),
            array('a[^aa]|a', 'a[^aa]|a'),
            array('a[^aa]a|', 'a[^aa]a|'),
            array('a|[^aa]|a', 'a|[^aa]|a'),


            array('(?:[a])', '(?:a)'),
            array('(?:a[a])', '(?:aa)'),
            array('(?:[a]a)', '(?:aa)'),
            array('(?:a[a]a)', '(?:aaa)'),
            array('(?:b[a]c)', '(?:bac)'),
            array('(?:[aa])', '(?:a)'),
            array('(?:a[aa])', '(?:aa)'),
            array('(?:[aa]a)', '(?:aa)'),
            array('(?:a[aa]a)', '(?:aaa)'),
            array('(?:[^a])', '(?:[^a])'),
            array('(?:a[^a])', '(?:a[^a])'),
            array('(?:[^a]a)', '(?:[^a]a)'),
            array('(?:a[^a]a)', '(?:a[^a]a)'),
            array('(?:b[^a]c)', '(?:b[^a]c)'),
            array('(?:[^aa])', '(?:[^aa])'),
            array('(?:a[^aa])', '(?:a[^aa])'),
            array('(?:[^aa]a)', '(?:[^aa]a)'),
            array('(?:a[^aa]a)', '(?:a[^aa]a)'),

            array('(?:[a]|)', '(?:a|)'),
            array('(?:a|[a])', '(?:a|a)'),
            array('(?:a[a]|)', '(?:aa|)'),
            array('(?:a|[a]|)', '(?:a|a|)'),
            array('(?:[a]|a)', '(?:a|a)'),
            array('(?:[a]a|)', '(?:aa|)'),
            array('(?:[a]|a|)', '(?:a|a|)'),
            array('(?:a|[a]a)', '(?:a|aa)'),
            array('(?:a[a]|a)', '(?:aa|a)'),
            array('(?:a[a]a|)', '(?:aaa|)'),
            array('(?:a|[a]|a|)', '(?:a|a|a|)'),
            array('(?:b|[a]c)', '(?:b|ac)'),
            array('(?:b[a]|c)', '(?:ba|c)'),
            array('(?:b[a]c|)', '(?:bac|)'),
            array('(?:b|[a]|c|)', '(?:b|a|c|)'),
            array('(?:[aa]|)', '(?:a|)'),
            array('(?:a|[aa])', '(?:a|a)'),
            array('(?:a[aa]|)', '(?:aa|)'),
            array('(?:a|[aa]|)', '(?:a|a|)'),
            array('(?:[aa]|a)', '(?:a|a)'),
            array('(?:[aa]a|)', '(?:aa|)'),
            array('(?:[aa]|a|)', '(?:a|a|)'),
            array('(?:a|[aa]a)', '(?:a|aa)'),
            array('(?:a[aa]|a)', '(?:aa|a)'),
            array('(?:a[aa]a|)', '(?:aaa|)'),
            array('(?:a|[aa]|a)', '(?:a|a|a)'),
            array('(?:[^a]|)', '(?:[^a]|)'),
            array('(?:a|[^a])', '(?:a|[^a])'),
            array('(?:a[^a]|)', '(?:a[^a]|)'),
            array('(?:a|[^a]|)', '(?:a|[^a]|)'),
            array('(?:[^a]|a)', '(?:[^a]|a)'),
            array('(?:[^a]a|)', '(?:[^a]a|)'),
            array('(?:[^a]|a|)', '(?:[^a]|a|)'),
            array('(?:a|[^a]a)', '(?:a|[^a]a)'),
            array('(?:a[^a]|a)', '(?:a[^a]|a)'),
            array('(?:a[^a]a|)', '(?:a[^a]a|)'),
            array('(?:a|[^a]|a|)', '(?:a|[^a]|a|)'),
            array('(?:b|[^a]c)', '(?:b|[^a]c)'),
            array('(?:b[^a]|c)', '(?:b[^a]|c)'),
            array('(?:b[^a]c|)', '(?:b[^a]c|)'),
            array('(?:b|[^a]|c|)', '(?:b|[^a]|c|)'),
            array('(?:[^aa]|)', '(?:[^aa]|)'),
            array('(?:a|[^aa])', '(?:a|[^aa])'),
            array('(?:a[^aa]|)', '(?:a[^aa]|)'),
            array('(?:a|[^aa]|)', '(?:a|[^aa]|)'),
            array('(?:[^aa]|a)', '(?:[^aa]|a)'),
            array('(?:[^aa]a|)', '(?:[^aa]a|)'),
            array('(?:[^aa]|a|)', '(?:[^aa]|a|)'),
            array('(?:a|[^aa]a)', '(?:a|[^aa]a)'),
            array('(?:a[^aa]|a)', '(?:a[^aa]|a)'),
            array('(?:a[^aa]a|)', '(?:a[^aa]a|)'),
            array('(?:a|[^aa]|a)', '(?:a|[^aa]|a)'),


            array('(?:(?:[a]))', '(?:(?:a))'),
            array('(?:(?:a)[a])', '(?:(?:a)a)'),
            array('(?:a(?:[a]))', '(?:a(?:a))'),
            array('(?:(?:a)(?:[a]))', '(?:(?:a)(?:a))'),
            array('(?:(?:[a])a)', '(?:(?:a)a)'),
            array('(?:[a](?:a))', '(?:a(?:a))'),
            array('(?:(?:[a])(?:a))', '(?:(?:a)(?:a))'),
            array('(?:(?:a)[a]a)', '(?:(?:a)aa)'),
            array('(?:a(?:[a])a)', '(?:a(?:a)a)'),
            array('(?:a[a](?:a))', '(?:aa(?:a))'),
            array('(?:(?:a)(?:[a])(?:a))', '(?:(?:a)(?:a)(?:a))'),
            array('(?:(?:b)[a]c)', '(?:(?:b)ac)'),
            array('(?:b(?:[a])c)', '(?:b(?:a)c)'),
            array('(?:b[a](?:c))', '(?:ba(?:c))'),
            array('(?:(?:b)(?:[a])(?:c))', '(?:(?:b)(?:a)(?:c))'),
            array('(?:(?:[aa]))', '(?:(?:a))'),
            array('(?:(?:a)[aa])', '(?:(?:a)a)'),
            array('(?:a(?:[aa]))', '(?:a(?:a))'),
            array('(?:(?:a)(?:[aa]))', '(?:(?:a)(?:a))'),
            array('(?:(?:[aa])a)', '(?:(?:a)a)'),
            array('(?:[aa](?:a))', '(?:a(?:a))'),
            array('(?:(?:[aa])(?:a))', '(?:(?:a)(?:a))'),
            array('(?:(?:a)[aa]a)', '(?:(?:a)aa)'),
            array('(?:a(?:[aa])a)', '(?:a(?:a)a)'),
            array('(?:a[aa](?:a))', '(?:aa(?:a))'),
            array('(?:(?:a)(?:[aa])(?:a))', '(?:(?:a)(?:a)(?:a))'),
            array('(?:(?:[^a]))', '(?:(?:[^a]))'),
            array('(?:(?:a)[^a])', '(?:(?:a)[^a])'),
            array('(?:a(?:[^a]))', '(?:a(?:[^a]))'),
            array('(?:(?:a)(?:[^a]))', '(?:(?:a)(?:[^a]))'),
            array('(?:(?:[^a])a)', '(?:(?:[^a])a)'),
            array('(?:[^a](?:a))', '(?:[^a](?:a))'),
            array('(?:(?:[^a])(?:a))', '(?:(?:[^a])(?:a))'),
            array('(?:(?:a)[^a]a)', '(?:(?:a)[^a]a)'),
            array('(?:a(?:[^a])a)', '(?:a(?:[^a])a)'),
            array('(?:a[^a](?:a))', '(?:a[^a](?:a))'),
            array('(?:(?:a)(?:[^a])(?:a))', '(?:(?:a)(?:[^a])(?:a))'),
            array('(?:(?:b)[^a]c)', '(?:(?:b)[^a]c)'),
            array('(?:b(?:[^a])c)', '(?:b(?:[^a])c)'),
            array('(?:b[^a](?:c))', '(?:b[^a](?:c))'),
            array('(?:(?:[^aa]))', '(?:(?:[^aa]))'),
            array('(?:(?:a)[^aa])', '(?:(?:a)[^aa])'),
            array('(?:a(?:[^aa]))', '(?:a(?:[^aa]))'),
            array('(?:(?:a)(?:[^aa]))', '(?:(?:a)(?:[^aa]))'),
            array('(?:(?:[^aa])a)', '(?:(?:[^aa])a)'),
            array('(?:[^aa](?:a))', '(?:[^aa](?:a))'),
            array('(?:(?:[^aa])(?:a))', '(?:(?:[^aa])(?:a))'),
            array('(?:(?:a)[^aa]a)', '(?:(?:a)[^aa]a)'),
            array('(?:a(?:[^aa])a)', '(?:a(?:[^aa])a)'),
            array('(?:a[^aa](?:a))', '(?:a[^aa](?:a))'),
            array('(?:(?:a)(?:[^aa])(?:a))', '(?:(?:a)(?:[^aa])(?:a))'),

            array('(?:(?:[a])|)', '(?:(?:a)|)'),
            array('(?:(?:a)|[a])', '(?:(?:a)|a)'),
            array('(?:a|(?:[a]))', '(?:a|(?:a))'),
            array('(?:(?:a)|(?:[a]))', '(?:(?:a)|(?:a))'),
            array('(?:(?:a[a])|)', '(?:(?:aa)|)'),
            array('(?:(?:a)|[a]|)', '(?:(?:a)|a|)'),
            array('(?:a|(?:[a])|)', '(?:a|(?:a)|)'),
            array('(?:(?:a)|(?:[a])|)', '(?:(?:a)|(?:a)|)'),
            array('(?:(?:[a])|a)', '(?:(?:a)|a)'),
            array('(?:[a]|(?:a))', '(?:a|(?:a))'),
            array('(?:(?:[a])|(?:a))', '(?:(?:a)|(?:a))'),
            array('(?:(?:[a])a|)', '(?:(?:a)a|)'),
            array('(?:[a](?:a)|)', '(?:a(?:a)|)'),
            array('(?:(?:[a])(?:a)|)', '(?:(?:a)(?:a)|)'),
            array('(?:(?:[a])|a|)', '(?:(?:a)|a|)'),
            array('(?:[a]|(?:a)|)', '(?:a|(?:a)|)'),
            array('(?:(?:[a])|(?:a)|)', '(?:(?:a)|(?:a)|)'),
            array('(?:(?:a)|[a]a)', '(?:(?:a)|aa)'),
            array('(?:a|(?:[a])a)', '(?:a|(?:a)a)'),
            array('(?:a|[a](?:a))', '(?:a|a(?:a))'),
            array('(?:(?:a)|(?:[a])(?:a))', '(?:(?:a)|(?:a)(?:a))'),
            array('(?:(?:a)[a]|a)', '(?:(?:a)a|a)'),
            array('(?:a(?:[a])|a)', '(?:a(?:a)|a)'),
            array('(?:a[a]|(?:a))', '(?:aa|(?:a))'),
            array('(?:(?:a)(?:[a])|(?:a))', '(?:(?:a)(?:a)|(?:a))'),
            array('(?:(?:a)[a]a|)', '(?:(?:a)aa|)'),
            array('(?:a(?:[a])a|)', '(?:a(?:a)a|)'),
            array('(?:a[a](?:a)|)', '(?:aa(?:a)|)'),
            array('(?:(?:a)(?:[a])(?:a)|)', '(?:(?:a)(?:a)(?:a)|)'),
            array('(?:(?:a)|[a]|a|)', '(?:(?:a)|a|a|)'),
            array('(?:a|(?:[a])|a|)', '(?:a|(?:a)|a|)'),
            array('(?:a|[a]|(?:a)|)', '(?:a|a|(?:a)|)'),
            array('(?:(?:a)|(?:[a])|(?:a)|)', '(?:(?:a)|(?:a)|(?:a)|)'),
            array('(?:(?:b)|[a]c)', '(?:(?:b)|ac)'),
            array('(?:b|(?:[a])c)', '(?:b|(?:a)c)'),
            array('(?:b|[a](?:c))', '(?:b|a(?:c))'),
            array('(?:(?:b)|(?:[a])(?:c))', '(?:(?:b)|(?:a)(?:c))'),
            array('(?:(?:b)[a]|c)', '(?:(?:b)a|c)'),
            array('(?:b(?:[a])|c)', '(?:b(?:a)|c)'),
            array('(?:b[a]|(?:c))', '(?:ba|(?:c))'),
            array('(?:(?:b)(?:[a])|(?:c))', '(?:(?:b)(?:a)|(?:c))'),
            array('(?:(?:b)[a]c|)', '(?:(?:b)ac|)'),
            array('(?:b(?:[a])c|)', '(?:b(?:a)c|)'),
            array('(?:b[a](?:c)|)', '(?:ba(?:c)|)'),
            array('(?:(?:b)(?:[a])(?:c)|)', '(?:(?:b)(?:a)(?:c)|)'),
            array('(?:(?:b)|[a]|c|)', '(?:(?:b)|a|c|)'),
            array('(?:b|(?:[a])|c|)', '(?:b|(?:a)|c|)'),
            array('(?:b|[a]|(?:c)|)', '(?:b|a|(?:c)|)'),
            array('(?:(?:b)|(?:[a])|(?:c)|)', '(?:(?:b)|(?:a)|(?:c)|)'),
            array('(?:(?:[aa])|)', '(?:(?:a)|)'),
            array('(?:(?:a)|[aa])', '(?:(?:a)|a)'),
            array('(?:a|(?:[aa]))', '(?:a|(?:a))'),
            array('(?:(?:a)|(?:[aa]))', '(?:(?:a)|(?:a))'),
            array('(?:(?:a)[aa]|)', '(?:(?:a)a|)'),
            array('(?:a(?:[aa])|)', '(?:a(?:a)|)'),
            array('(?:(?:a)(?:[aa])|)', '(?:(?:a)(?:a)|)'),
            array('(?:(?:a)|[aa]|)', '(?:(?:a)|a|)'),
            array('(?:a|(?:[aa])|)', '(?:a|(?:a)|)'),
            array('(?:(?:a)|(?:[aa])|)', '(?:(?:a)|(?:a)|)'),
            array('(?:(?:[aa])|a)', '(?:(?:a)|a)'),
            array('(?:[aa]|(?:a))', '(?:a|(?:a))'),
            array('(?:(?:[aa])|(?:a))', '(?:(?:a)|(?:a))'),
            array('(?:(?:[aa])a|)', '(?:(?:a)a|)'),
            array('(?:[aa](?:a)|)', '(?:a(?:a)|)'),
            array('(?:(?:[aa])(?:a)|)', '(?:(?:a)(?:a)|)'),
            array('(?:(?:[aa])|a|)', '(?:(?:a)|a|)'),
            array('(?:[aa]|(?:a)|)', '(?:a|(?:a)|)'),
            array('(?:(?:[aa])|(?:a)|)', '(?:(?:a)|(?:a)|)'),
            array('(?:(?:a)|[aa]a)', '(?:(?:a)|aa)'),
            array('(?:a|(?:[aa])a)', '(?:a|(?:a)a)'),
            array('(?:a|[aa](?:a))', '(?:a|a(?:a))'),
            array('(?:(?:a)|(?:[aa])(?:a))', '(?:(?:a)|(?:a)(?:a))'),
            array('(?:(?:a)[aa]|a)', '(?:(?:a)a|a)'),
            array('(?:a(?:[aa])|a)', '(?:a(?:a)|a)'),
            array('(?:a[aa]|(?:a))', '(?:aa|(?:a))'),
            array('(?:(?:a)(?:[aa])|(?:a))', '(?:(?:a)(?:a)|(?:a))'),
            array('(?:(?:a)[aa]a|)', '(?:(?:a)aa|)'),
            array('(?:a(?:[aa])a|)', '(?:a(?:a)a|)'),
            array('(?:a[aa](?:a)|)', '(?:aa(?:a)|)'),
            array('(?:(?:a)(?:[aa])(?:a)|)', '(?:(?:a)(?:a)(?:a)|)'),
            array('(?:(?:a)|[aa]|a)', '(?:(?:a)|a|a)'),
            array('(?:a|(?:[aa])|a)', '(?:a|(?:a)|a)'),
            array('(?:a|[aa]|(?:a))', '(?:a|a|(?:a))'),
            array('(?:(?:a)|(?:[aa])|(?:a))', '(?:(?:a)|(?:a)|(?:a))'),

            array('(?:[^a]|)', '(?:[^a]|)'),
            array('(?:a|[^a])', '(?:a|[^a])'),
            array('(?:a[^a]|)', '(?:a[^a]|)'),
            array('(?:a|[^a]|)', '(?:a|[^a]|)'),
            array('(?:[^a]|a)', '(?:[^a]|a)'),
            array('(?:[^a]a|)', '(?:[^a]a|)'),
            array('(?:[^a]|a|)', '(?:[^a]|a|)'),
            array('(?:a|[^a]a)', '(?:a|[^a]a)'),
            array('(?:a[^a]|a)', '(?:a[^a]|a)'),
            array('(?:a[^a]a|)', '(?:a[^a]a|)'),
            array('(?:a|[^a]|a|)', '(?:a|[^a]|a|)'),
            array('(?:b|[^a]c)', '(?:b|[^a]c)'),
            array('(?:b[^a]|c)', '(?:b[^a]|c)'),
            array('(?:b[^a]c|)', '(?:b[^a]c|)'),
            array('(?:b|[^a]|c|)', '(?:b|[^a]|c|)'),
            array('(?:[^aa]|)', '(?:[^aa]|)'),
            array('(?:a|[^aa])', '(?:a|[^aa])'),
            array('(?:a[^aa]|)', '(?:a[^aa]|)'),
            array('(?:a|[^aa]|)', '(?:a|[^aa]|)'),
            array('(?:[^aa]|a)', '(?:[^aa]|a)'),
            array('(?:[^aa]a|)', '(?:[^aa]a|)'),
            array('(?:[^aa]|a|)', '(?:[^aa]|a|)'),
            array('(?:a|[^aa]a)', '(?:a|[^aa]a)'),
            array('(?:a[^aa]|a)', '(?:a[^aa]|a)'),
            array('(?:a[^aa]a|)', '(?:a[^aa]a|)'),
            array('(?:a|[^aa]|a)', '(?:a|[^aa]|a)'),
        );
    }

    protected function get_test_grouping_node_trivial() {
        return array(
            array('', ''),
            array('a', 'a'),
            array('(?:)', ''),
            array('a(?:)', 'a'),
            array('(?:)a', 'a'),
            array('a(?:)a', 'aa'),
            array('ab(?:)ab', 'abab'),
            array('a|(?:)', 'a|'),
            array('(?:)(?:aa)', '(?:)aa'),
            array('a(?:){3}', 'a'),
            array('(?:(?:a))', '(?:a)'),
            array('(?:(?:))', ''),
            array('a(?:(?:))', 'a'),
            array('(?:(?:))a', 'a'),
            array('a(?:(?:))a', 'aa'),
            array('ab(?:(?:))ab', 'abab'),
            array('a|(?:(?:))', 'a|'),
            array('(?:(?:))(?:aa)', '(?:aa)'),
            array('a(?:(?:)){3}', 'a'),

            array('(?:(?:a))', '(?:a)'),
            array('(?:(?:(?:a)))', '(?:(?:a))'),
            array('(?:a){3}', 'a{3}'),
            array('(?:a){3}|b', 'a{3}|b'),
            array('(?:ab){3}|b', '(?:ab){3}|b'),

            array('(?:a{0,}{1,})?', '(?:a{0,}{1,})?'),

            array('a(?:a|b)', 'a(?:a|b)'),
            array('a(?:a|b)a', 'a(?:a|b)a'),
            array('(?:a|b)a', '(?:a|b)a'),

            array('(?:ab)', 'ab'),
            array('(?:ab)|c', 'ab|c'),
        );
    }

    protected function get_test_subpattern_node_trivial() {
        return array(
            array('', ''),
            array('a', 'a'),
            array('()', ''),
            array('(())', ''),
            array('((()))', ''),
            array('a()', 'a'),
            array('()a', 'a'),
            array('a()a', 'aa'),
            array('ab()ab', 'abab'),
            array('a|()', 'a|'),
            array('()(?:aa)', '(?:aa)'),
            array('a(){3}', 'a'),
            array('((a))', '(a)'),
            array('()\1', '()\1'),
            array('a()\1', 'a()\1'),
            array('()a\1', '()a\1'),
            array('a()a\1', 'a()a\1'),
            array('ab()ab\1', 'ab()ab\1'),
            array('a|()\1', 'a|()\1'),
            array('()(?:aa)\1', '()(?:aa)\1'),
            array('a(){3}\1', 'a(){3}\1'),
            array('((a))\1', '(a)\1'),
            array('\1()', '\1()'),
            array('\1a()', '\1a()'),
            array('\1()a', '\1()a'),
            array('\1a()a', '\1a()a'),
            array('\1ab()ab', '\1ab()ab'),
            array('\1a|()', '\1a|()'),
            array('\1()(?:aa)', '\1()(?:aa)'),
            array('\1a(){3}', '\1a(){3}'),
            array('\1((a))', '\1(a)'),
            array('()\2', '\2'),
            array('a()\2', 'a\2'),
            array('()a\2', 'a\2'),
            array('a()a\2', 'aa\2'),
            array('ab()ab\2', 'abab\2'),
            array('a|()\2', 'a|\2'), //?????
            array('()(?:aa)\2', '(?:aa)\2'),
            array('a(){3}\2', 'a\2'),
            array('((a))\2', '(a)\1'),
            array('\2()', '\2'),
            array('\2a()', '\2a'),
            array('\2()a', '\2a'),
            array('\2a()a', '\2aa'),
            array('\2ab()ab', '\2abab'),
            array('\2a|()', '\2a|'),
            array('\2()(?:aa)', '\2(?:aa)'),
            array('\2a(){3}', '\2a'),
            array('\2((a))', '\1(a)'),
            array('\2()(ab)', '\1(ab)'),
            array('\2a()(ab)', '\1a(ab)'),
            array('\2()a(ab)', '\1a(ab)'),
            array('\2a()a(ab)', '\1aa(ab)'),
            array('\2ab()ab(ab)', '\1abab(ab)'),
            array('\2a|()|(ab)', '\1a|(ab)'),
            array('\2()(?:aa)(ab)', '\1(?:aa)(ab)'),
            array('\2a(){3}(ab)', '\1a(ab)'),
            array('()\2(ab)', '\1(ab)'),
            array('a()\2(ab)', 'a\1(ab)'),
            array('()\2a(ab)', '\1a(ab)'),
            array('a()\2a(ab)', 'a\1a(ab)'),
            array('ab()\2ab(ab)', 'ab\1ab(ab)'),
            array('a|()|(ab)\2', 'a|(ab)\1'),
            array('()\2(?:aa)(ab)', '\1(?:aa)(ab)'),
            array('a(){3}\2(ab)', 'a\1(ab)'),

            array('\2()(ab)(ab)\3', '\1(ab)(ab)\2'),
            array('\2a()(ab)(ab)\3', '\1a(ab)(ab)\2'),
            array('\2()a(ab)(ab)\3', '\1a(ab)(ab)\2'),
            array('\2a()a(ab)(ab)\3', '\1aa(ab)(ab)\2'),
            array('\2ab()ab(ab)(ab)\3', '\1abab(ab)(ab)\2'),
            array('\2a|()|(ab)(ab)\3', '\1a|(ab)(ab)\2'),
            array('\2()(?:aa)(ab)(ab)\3', '\1(?:aa)(ab)(ab)\2'),
            array('\2a(){3}(ab)(ab)\3', '\1a(ab)(ab)\2'),
            array('()\2(ab)(ab)\3', '\1(ab)(ab)\2'),
            array('a()\2(ab)(ab)\3', 'a\1(ab)(ab)\2'),
            array('()\2a(ab)(ab)\3', '\1a(ab)(ab)\2'),
            array('a()\2a(ab)(ab)\3', 'a\1a(ab)(ab)\2'),
            array('ab()\2ab(ab)(ab)\3', 'ab\1ab(ab)(ab)\2'),
            array('a|()|(ab)\2(ab)\3', 'a|(ab)\1(ab)\2'),
            array('()\2(?:aa)(ab)(ab)\3', '\1(?:aa)(ab)(ab)\2'),
            array('a(){3}\2(ab)(ab)\3', 'a\1(ab)(ab)\2'),

            array('\2()(ab(ab))\3', '\1(ab(ab))\2'),
            array('\2a()(ab(ab))\3', '\1a(ab(ab))\2'),
            array('\2()a(ab(ab))\3', '\1a(ab(ab))\2'),
            array('\2a()a(ab(ab))\3', '\1aa(ab(ab))\2'),
            array('\2ab()ab(ab(ab))\3', '\1abab(ab(ab))\2'),
            array('\2a|()|(ab(ab))\3', '\1a|(ab(ab))\2'),
            array('\2()(?:aa)(ab(ab))\3', '\1(?:aa)(ab(ab))\2'),
            array('\2a(){3}(ab(ab))\3', '\1a(ab(ab))\2'),
            array('()\2(ab(ab))\3', '\1(ab(ab))\2'),
            array('a()\2(ab(ab))\3', 'a\1(ab(ab))\2'),
            array('()\2a(ab(ab))\3', '\1a(ab(ab))\2'),
            array('a()\2a(ab(ab))\3', 'a\1a(ab(ab))\2'),
            array('ab()\2ab(ab(ab))\3', 'ab\1ab(ab(ab))\2'),
            array('a|()|(ab(ab))\2\3', 'a|(ab(ab))\1\2'),
            array('()\2(?:aa)(ab(ab))\3', '\1(?:aa)(ab(ab))\2'),
            array('a(){3}\2(ab(ab))\3', 'a\1(ab(ab))\2'),

            array('\1()(ab)(ab)\3', '\1()ab(ab)\2'),
            array('\1a()(ab)(ab)\3', '\1a()ab(ab)\2'),
            array('\1()a(ab)(ab)\3', '\1()aab(ab)\2'),
            array('\1a()a(ab)(ab)\3', '\1a()aab(ab)\2'),
            array('\1ab()ab(ab)(ab)\3', '\1ab()abab(ab)\2'),
            array('\1a|()|(ab)(ab)\3', '\1a|()|ab(ab)\2'),
            array('\1()(?:aa)(ab)(ab)\3', '\1()(?:aa)ab(ab)\2'),
            array('\1a(){3}(ab)(ab)\3', '\1a(){3}ab(ab)\2'),
            array('()\1(ab)(ab)\3', '()\1ab(ab)\2'),
            array('a()\1(ab)(ab)\3', 'a()\1ab(ab)\2'),
            array('()\1a(ab)(ab)\3', '()\1aab(ab)\2'),
            array('a()\1a(ab)(ab)\3', 'a()\1aab(ab)\2'),
            array('ab()\1ab(ab)(ab)\3', 'ab()\1abab(ab)\2'),
            array('a|()|(ab)\1(ab)\3', 'a|()|ab\1(ab)\2'),
            array('()\1(?:aa)(ab)(ab)\3', '()\1(?:aa)ab(ab)\2'),
            array('a(){3}\1(ab)(ab)\3', 'a(){3}\1ab(ab)\2'),

            array('\1()(ab(ab))\3', '\1()ab(ab)\2'),
            array('\1a()(ab(ab))\3', '\1a()ab(ab)\2'),
            array('\1()a(ab(ab))\3', '\1()aab(ab)\2'),
            array('\1a()a(ab(ab))\3', '\1a()aab(ab)\2'),
            array('\1ab()ab(ab(ab))\3', '\1ab()abab(ab)\2'),
            array('\1a|()|(ab(ab))\3', '\1a|()|ab(ab)\2'),
            array('\1()(?:aa)(ab(ab))\3', '\1()(?:aa)ab(ab)\2'),
            array('\1a(){3}(ab(ab))\3', '\1a(){3}ab(ab)\2'),
            array('()\1(ab(ab))\3', '()\1ab(ab)\2'),
            array('a()\1(ab(ab))\3', 'a()\1ab(ab)\2'),
            array('()\1a(ab(ab))\3', '()\1aab(ab)\2'),
            array('a()\1a(ab(ab))\3', 'a()\1aab(ab)\2'),
            array('ab()\1ab(ab(ab))\3', 'ab()\1abab(ab)\2'),
            array('a|()|(ab(ab))\1\3', 'a|()|ab(ab)\1\2'),
            array('()\1(?:aa)(ab(ab))\3', '()\1(?:aa)ab(ab)\2'),
            array('a(){3}\1(ab(ab))\3', 'a(){3}\1ab(ab)\2'),

            array('\2()(ab)()\3', '\1(ab)()\2'),
            array('\2a()(ab)()\3', '\1a(ab)()\2'),
            array('\2()a(ab)()\3', '\1a(ab)()\2'),
            array('\2a()a(ab)()\3', '\1aa(ab)()\2'),
            array('\2ab()ab(ab)()\3', '\1abab(ab)()\2'),
            array('\2a|()|(ab)()\3', '\1a|(ab)()\2'),
            array('\2()(?:aa)(ab)()\3', '\1(?:aa)(ab)()\2'),
            array('\2a(){3}(ab)()\3', '\1a(ab)()\2'),
            array('()\2(ab)()\3', '\1(ab)()\2'),
            array('a()\2(ab)()\3', 'a\1(ab)()\2'),
            array('()\2a(ab)()\3', '\1a(ab)()\2'),
            array('a()\2a(ab)()\3', 'a\1a(ab)()\2'),
            array('ab()\2ab(ab)()\3', 'ab\1ab(ab)()\2'),
            array('a|()|(ab)\2()\3', 'a|(ab)\1()\2'),
            array('()\2(?:aa)(ab)()\3', '\1(?:aa)(ab)()\2'),
            array('a(){3}\2(ab)()\3', 'a\1(ab)()\2'),

            array('\2()(ab())\3', '\1(ab())\2'),
            array('\2a()(ab())\3', '\1a(ab())\2'),
            array('\2()a(ab())\3', '\1a(ab())\2'),
            array('\2a()a(ab())\3', '\1aa(ab())\2'),
            array('\2ab()ab(ab())\3', '\1abab(ab())\2'),
            array('\2a|()|(ab())\3', '\1a|(ab())\2'),
            array('\2()(?:aa)(ab())\3', '\1(?:aa)(ab())\2'),
            array('\2a(){3}(ab())\3', '\1a(ab())\2'),
            array('()\2(ab())\3', '\1(ab())\2'),
            array('a()\2(ab())\3', 'a\1(ab())\2'),
            array('()\2a(ab())\3', '\1a(ab())\2'),
            array('a()\2a(ab())\3', 'a\1a(ab())\2'),
            array('ab()\2ab(ab())\3', 'ab\1ab(ab())\2'),
            array('a|()|(ab())\2\3', 'a|(ab())\1\2'),
            array('()\2(?:aa)(ab())\3', '\1(?:aa)(ab())\2'),
            array('a(){3}\2(ab())\3', 'a\1(ab())\2'),

            array('\1()(ab)()\3', '\1()ab()\2'),
            array('\1a()(ab)()\3', '\1a()ab()\2'),
            array('\1()a(ab)()\3', '\1()aab()\2'),
            array('\1a()a(ab)()\3', '\1a()aab()\2'),
            array('\1ab()ab(ab)()\3', '\1ab()abab()\2'),
            array('\1a|()|(ab)()\3', '\1a|()|ab()\2'),
            array('\1()(?:aa)(ab)()\3', '\1()(?:aa)ab()\2'),
            array('\1a(){3}(ab)()\3', '\1a(){3}ab()\2'),
            array('()\1(ab)()\3', '()\1ab()\2'),
            array('a()\1(ab)()\3', 'a()\1ab()\2'),
            array('()\1a(ab)()\3', '()\1aab()\2'),
            array('a()\1a(ab)()\3', 'a()\1aab()\2'),
            array('ab()\1ab(ab)()\3', 'ab()\1abab()\2'),
            array('a|()|(ab)\1()\3', 'a|()|ab\1()\2'),
            array('()\1(?:aa)(ab)()\3', '()\1(?:aa)ab()\2'),
            array('a(){3}\1(ab)()\3', 'a(){3}\1ab()\2'),

            array('\1()(ab())\3', '\1()ab()\2'),
            array('\1a()(ab())\3', '\1a()ab()\2'),
            array('\1()a(ab())\3', '\1()aab()\2'),
            array('\1a()a(ab())\3', '\1a()aab()\2'),
            array('\1ab()ab(ab())\3', '\1ab()abab()\2'),
            array('\1a|()|(ab())\3', '\1a|()|ab()\2'),
            array('\1()(?:aa)(ab())\3', '\1()(?:aa)ab()\2'),
            array('\1a(){3}(ab())\3', '\1a(){3}ab()\2'),
            array('()\1(ab())\3', '()\1ab()\2'),
            array('a()\1(ab())\3', 'a()\1ab()\2'),
            array('()\1a(ab())\3', '()\1aab()\2'),
            array('a()\1a(ab())\3', 'a()\1aab()\2'),
            array('ab()\1ab(ab())\3', 'ab()\1abab()\2'),
            array('a|()|(ab())\1\3', 'a|()|ab()\1\2'),
            array('()\1(?:aa)(ab())\3', '()\1(?:aa)ab()\2'),
            array('a(){3}\1(ab())\3', 'a(){3}\1ab()\2'),


            array('\2()(ab)()\2', '\1(ab)()\1'),
            array('\1(ab)()\1', '\1(ab)\1'),
            array('\2a()(ab)()\2', '\1a(ab)()\1'),
            array('\1a(ab)()\1', '\1a(ab)\1'),
            array('\2()a(ab)()\2', '\1a(ab)()\1'),
            array('\2a()a(ab)()\2', '\1aa(ab)()\1'),
            array('\2ab()ab(ab)()\2', '\1abab(ab)()\1'),
            array('\2a|()|(ab)()\2', '\1a|(ab)()\1'),
            array('\2()(?:aa)(ab)()\2', '\1(?:aa)(ab)()\1'),
            array('\2a(){3}(ab)()\2', '\1a(ab)()\1'),
            array('()\2(ab)()\2', '\1(ab)()\1'),
            array('a()\2(ab)()\2', 'a\1(ab)()\1'),
            array('()\2a(ab)()\2', '\1a(ab)()\1'),
            array('a()\2a(ab)()\2', 'a\1a(ab)()\1'),
            array('ab()\2ab(ab)()\2', 'ab\1ab(ab)()\1'),
            array('a|()|(ab)\2()\2', 'a|(ab)\1()\1'),
            array('()\2(?:aa)(ab)()\2', '\1(?:aa)(ab)()\1'),
            array('a(){3}\2(ab)()\2', 'a\1(ab)()\1'),

            array('\2()(ab())\2', '\1(ab())\1'),
            array('\2a()(ab())\2', '\1a(ab())\1'),
            array('\2()a(ab())\2', '\1a(ab())\1'),
            array('\2a()a(ab())\2', '\1aa(ab())\1'),
            array('\2ab()ab(ab())\2', '\1abab(ab())\1'),
            array('\2a|()|(ab())\2', '\1a|(ab())\1'),
            array('\2()(?:aa)(ab())\2', '\1(?:aa)(ab())\1'),
            array('\2a(){3}(ab())\2', '\1a(ab())\1'),
            array('()\2(ab())\2', '\1(ab())\1'),
            array('a()\2(ab())\2', 'a\1(ab())\1'),
            array('()\2a(ab())\2', '\1a(ab())\1'),
            array('a()\2a(ab())\2', 'a\1a(ab())\1'),
            array('ab()\2ab(ab())\2', 'ab\1ab(ab())\1'),
            array('a|()|(ab())\2\2', 'a|(ab())\1\1'),
            array('()\2(?:aa)(ab())\2', '\1(?:aa)(ab())\1'),
            array('a(){3}\2(ab())\2', 'a\1(ab())\1'),

            array('\1()(ab)()\2', '\1()(ab)\2'),
            array('\1a()(ab)\2', '\1a()(ab)\2'),
            array('\1()a(ab)()\2', '\1()a(ab)\2'),
            array('\1a()a(ab)()\2', '\1a()a(ab)\2'),
            array('\1ab()ab(ab)()\2', '\1ab()ab(ab)\2'),
            array('\1a|()|(ab)()\2', '\1a|()|(ab)\2'),
            array('\1()(?:aa)(ab)()\2', '\1()(?:aa)(ab)\2'),
            array('\1a(){3}(ab)()\2', '\1a(){3}(ab)\2'),
            array('()\1(ab)()\2', '()\1(ab)\2'),
            array('a()\1(ab)()\2', 'a()\1(ab)\2'),
            array('()\1a(ab)()\2', '()\1a(ab)\2'),
            array('a()\1a(ab)()\2', 'a()\1a(ab)\2'),
            array('ab()\1ab(ab)()\2', 'ab()\1ab(ab)\2'),
            array('a|()|(ab)\1()\2', 'a|()|(ab)\1\2'),
            array('()\1(?:aa)(ab)\2', '()\1(?:aa)(ab)\2'),
            array('a(){3}\1(ab)()\2', 'a(){3}\1(ab)\2'),

            array('\1()(ab())\2', '\1()(ab)\2'),
            array('\1a()(ab())\2', '\1a()(ab)\2'),
            array('\1()a(ab())\2', '\1()a(ab)\2'),
            array('\1a()a(ab())\2', '\1a()a(ab)\2'),
            array('\1ab()ab(ab())\2', '\1ab()ab(ab)\2'),
            array('\1a|()|(ab())\2', '\1a|()|(ab)\2'),
            array('\1()(?:aa)(ab())\2', '\1()(?:aa)(ab)\2'),
            array('\1a(){3}(ab())\2', '\1a(){3}(ab)\2'),
            array('()\1(ab())\2', '()\1(ab)\2'),
            array('a()\1(ab())\2', 'a()\1(ab)\2'),
            array('()\1a(ab())\2', '()\1a(ab)\2'),
            array('a()\1a(ab())\2', 'a()\1a(ab)\2'),
            array('ab()\1ab(ab())\2', 'ab()\1ab(ab)\2'),
            array('a|()|(ab())\1\2', 'a|()|(ab)\1\2'),
            array('()\1(?:aa)(ab())\2', '()\1(?:aa)(ab)\2'),
            array('a(){3}\1(ab())\2', 'a(){3}\1(ab)\2'),


            array('()\g1', '()\g1'),
            array('a()\g1', 'a()\g1'),
            array('()a\g1', '()a\g1'),
            array('a()a\g1', 'a()a\g1'),
            array('ab()ab\g1', 'ab()ab\g1'),
            array('a|()\g1', 'a|()\g1'),
            array('()(?:aa)\g1', '()(?:aa)\g1'),
            array('a(){3}\g1', 'a(){3}\g1'),
            array('((a))\g1', '(a)\g1'),
            array('\g1()', '\g1()'),
            array('\g1a()', '\g1a()'),
            array('\g1()a', '\g1()a'),
            array('\g1a()a', '\g1a()a'),
            array('\g1ab()ab', '\g1ab()ab'),
            array('\g1a|()', '\g1a|()'),
            array('\g1()(?:aa)', '\g1()(?:aa)'),
            array('\g1a(){3}', '\g1a(){3}'),
            array('\g1((a))', '\g1(a)'),


            array('\g1()(ab)(ab)\3', '\g1()ab(ab)\2'),
            array('\g1a()(ab)(ab)\3', '\g1a()ab(ab)\2'),
            array('\g1()a(ab)(ab)\3', '\g1()aab(ab)\2'),
            array('\g1a()a(ab)(ab)\3', '\g1a()aab(ab)\2'),
            array('\g1ab()ab(ab)(ab)\3', '\g1ab()abab(ab)\2'),
            array('\g1a|()|(ab)(ab)\3', '\g1a|()|ab(ab)\2'),
            array('\g1()(?:aa)(ab)(ab)\3', '\g1()(?:aa)ab(ab)\2'),
            array('\g1a(){3}(ab)(ab)\3', '\g1a(){3}ab(ab)\2'),
            array('()\g1(ab)(ab)\3', '()\g1ab(ab)\2'),
            array('a()\g1(ab)(ab)\3', 'a()\g1ab(ab)\2'),
            array('()\g1a(ab)(ab)\3', '()\g1aab(ab)\2'),
            array('a()\g1a(ab)(ab)\3', 'a()\g1aab(ab)\2'),
            array('ab()\g1ab(ab)(ab)\3', 'ab()\g1abab(ab)\2'),
            array('a|()|(ab)\g1(ab)\3', 'a|()|ab\g1(ab)\2'),
            array('()\g1(?:aa)(ab)(ab)\3', '()\g1(?:aa)ab(ab)\2'),
            array('a(){3}\g1(ab)(ab)\3', 'a(){3}\g1ab(ab)\2'),

            array('\g1()(ab(ab))\3', '\g1()ab(ab)\2'),
            array('\g1a()(ab(ab))\3', '\g1a()ab(ab)\2'),
            array('\g1()a(ab(ab))\3', '\g1()aab(ab)\2'),
            array('\g1a()a(ab(ab))\3', '\g1a()aab(ab)\2'),
            array('\g1ab()ab(ab(ab))\3', '\g1ab()abab(ab)\2'),
            array('\g1a|()|(ab(ab))\3', '\g1a|()|ab(ab)\2'),
            array('\g1()(?:aa)(ab(ab))\3', '\g1()(?:aa)ab(ab)\2'),
            array('\g1a(){3}(ab(ab))\3', '\g1a(){3}ab(ab)\2'),
            array('()\g1(ab(ab))\3', '()\g1ab(ab)\2'),
            array('a()\g1(ab(ab))\3', 'a()\g1ab(ab)\2'),
            array('()\g1a(ab(ab))\3', '()\g1aab(ab)\2'),
            array('a()\g1a(ab(ab))\3', 'a()\g1aab(ab)\2'),
            array('ab()\g1ab(ab(ab))\3', 'ab()\g1abab(ab)\2'),
            array('a|()|(ab(ab))\g1\3', 'a|()|ab(ab)\g1\2'),
            array('()\g1(?:aa)(ab(ab))\3', '()\g1(?:aa)ab(ab)\2'),
            array('a(){3}\g1(ab(ab))\3', 'a(){3}\g1ab(ab)\2'),

            array('\g1()(ab)()\3', '\g1()ab()\2'),
            array('\g1a()(ab)()\3', '\g1a()ab()\2'),
            array('\g1()a(ab)()\3', '\g1()aab()\2'),
            array('\g1a()a(ab)()\3', '\g1a()aab()\2'),
            array('\g1ab()ab(ab)()\3', '\g1ab()abab()\2'),
            array('\g1a|()|(ab)()\3', '\g1a|()|ab()\2'),
            array('\g1()(?:aa)(ab)()\3', '\g1()(?:aa)ab()\2'),
            array('\g1a(){3}(ab)()\3', '\g1a(){3}ab()\2'),
            array('()\g1(ab)()\3', '()\g1ab()\2'),
            array('a()\g1(ab)()\3', 'a()\g1ab()\2'),
            array('()\g1a(ab)()\3', '()\g1aab()\2'),
            array('a()\g1a(ab)()\3', 'a()\g1aab()\2'),
            array('ab()\g1ab(ab)()\3', 'ab()\g1abab()\2'),
            array('a|()|(ab)\g1()\3', 'a|()|ab\g1()\2'),
            array('()\g1(?:aa)(ab)()\3', '()\g1(?:aa)ab()\2'),
            array('a(){3}\g1(ab)()\3', 'a(){3}\g1ab()\2'),

            array('\g1()(ab())\3', '\g1()ab()\2'),
            array('\g1a()(ab())\3', '\g1a()ab()\2'),
            array('\g1()a(ab())\3', '\g1()aab()\2'),
            array('\g1a()a(ab())\3', '\g1a()aab()\2'),
            array('\g1ab()ab(ab())\3', '\g1ab()abab()\2'),
            array('\g1a|()|(ab())\3', '\g1a|()|ab()\2'),
            array('\g1()(?:aa)(ab())\3', '\g1()(?:aa)ab()\2'),
            array('\g1a(){3}(ab())\3', '\g1a(){3}ab()\2'),
            array('()\g1(ab())\3', '()\g1ab()\2'),
            array('a()\g1(ab())\3', 'a()\g1ab()\2'),
            array('()\g1a(ab())\3', '()\g1aab()\2'),
            array('a()\g1a(ab())\3', 'a()\g1aab()\2'),
            array('ab()\g1ab(ab())\3', 'ab()\g1abab()\2'),
            array('a|()|(ab())\g1\3', 'a|()|ab()\g1\2'),
            array('()\g1(?:aa)(ab())\3', '()\g1(?:aa)ab()\2'),
            array('a(){3}\g1(ab())\3', 'a(){3}\g1ab()\2'),

            array('\g1()(ab)()\2', '\g1()(ab)\2'),
            array('\g1a()(ab)\2', '\g1a()(ab)\2'),
            array('\g1()a(ab)()\2', '\g1()a(ab)\2'),
            array('\g1a()a(ab)()\2', '\g1a()a(ab)\2'),
            array('\g1ab()ab(ab)()\2', '\g1ab()ab(ab)\2'),
            array('\g1a|()|(ab)()\2', '\g1a|()|(ab)\2'),
            array('\g1()(?:aa)(ab)()\2', '\g1()(?:aa)(ab)\2'),
            array('\g1a(){3}(ab)()\2', '\g1a(){3}(ab)\2'),
            array('()\g1(ab)()\2', '()\g1(ab)\2'),
            array('a()\g1(ab)()\2', 'a()\g1(ab)\2'),
            array('()\g1a(ab)()\2', '()\g1a(ab)\2'),
            array('a()\g1a(ab)()\2', 'a()\g1a(ab)\2'),
            array('ab()\g1ab(ab)()\2', 'ab()\g1ab(ab)\2'),
            array('a|()|(ab)\g1()\2', 'a|()|(ab)\g1\2'),
            array('()\g1(?:aa)(ab)\2', '()\g1(?:aa)(ab)\2'),
            array('a(){3}\g1(ab)()\2', 'a(){3}\g1(ab)\2'),

            array('\g1()(ab())\2', '\g1()(ab)\2'),
            array('\g1a()(ab())\2', '\g1a()(ab)\2'),
            array('\g1()a(ab())\2', '\g1()a(ab)\2'),
            array('\g1a()a(ab())\2', '\g1a()a(ab)\2'),
            array('\g1ab()ab(ab())\2', '\g1ab()ab(ab)\2'),
            array('\g1a|()|(ab())\2', '\g1a|()|(ab)\2'),
            array('\g1()(?:aa)(ab())\2', '\g1()(?:aa)(ab)\2'),
            array('\g1a(){3}(ab())\2', '\g1a(){3}(ab)\2'),
            array('()\g1(ab())\2', '()\g1(ab)\2'),
            array('a()\g1(ab())\2', 'a()\g1(ab)\2'),
            array('()\g1a(ab())\2', '()\g1a(ab)\2'),
            array('a()\g1a(ab())\2', 'a()\g1a(ab)\2'),
            array('ab()\g1ab(ab())\2', 'ab()\g1ab(ab)\2'),
            array('a|()|(ab())\g1\2', 'a|()|(ab)\g1\2'),
            array('()\g1(?:aa)(ab())\2', '()\g1(?:aa)(ab)\2'),
            array('a(){3}\g1(ab())\2', 'a(){3}\g1(ab)\2'),


            array('()\g{1}', '()\g{1}'),
            array('a()\g{1}', 'a()\g{1}'),
            array('()a\g{1}', '()a\g{1}'),
            array('a()a\g{1}', 'a()a\g{1}'),
            array('ab()ab\g{1}', 'ab()ab\g{1}'),
            array('a|()\g{1}', 'a|()\g{1}'),
            array('()(?:aa)\g{1}', '()(?:aa)\g{1}'),
            array('a(){3}\g{1}', 'a(){3}\g{1}'),
            array('((a))\g{1}', '(a)\g{1}'),
            array('\g{1}()', '\g{1}()'),
            array('\g{1}a()', '\g{1}a()'),
            array('\g{1}()a', '\g{1}()a'),
            array('\g{1}a()a', '\g{1}a()a'),
            array('\g{1}ab()ab', '\g{1}ab()ab'),
            array('\g{1}a|()', '\g{1}a|()'),
            array('\g{1}()(?:aa)', '\g{1}()(?:aa)'),
            array('\g{1}a(){3}', '\g{1}a(){3}'),
            array('\g{1}((a))', '\g{1}(a)'),


            array('\g{1}()(ab)(ab)\3', '\g{1}()ab(ab)\2'),
            array('\g{1}a()(ab)(ab)\3', '\g{1}a()ab(ab)\2'),
            array('\g{1}()a(ab)(ab)\3', '\g{1}()aab(ab)\2'),
            array('\g{1}a()a(ab)(ab)\3', '\g{1}a()aab(ab)\2'),
            array('\g{1}ab()ab(ab)(ab)\3', '\g{1}ab()abab(ab)\2'),
            array('\g{1}a|()|(ab)(ab)\3', '\g{1}a|()|ab(ab)\2'),
            array('\g{1}()(?:aa)(ab)(ab)\3', '\g{1}()(?:aa)ab(ab)\2'),
            array('\g{1}a(){3}(ab)(ab)\3', '\g{1}a(){3}ab(ab)\2'),
            array('()\g{1}(ab)(ab)\3', '()\g{1}ab(ab)\2'),
            array('a()\g{1}(ab)(ab)\3', 'a()\g{1}ab(ab)\2'),
            array('()\g{1}a(ab)(ab)\3', '()\g{1}aab(ab)\2'),
            array('a()\g{1}a(ab)(ab)\3', 'a()\g{1}aab(ab)\2'),
            array('ab()\g{1}ab(ab)(ab)\3', 'ab()\g{1}abab(ab)\2'),
            array('a|()|(ab)\g{1}(ab)\3', 'a|()|ab\g{1}(ab)\2'),
            array('()\g{1}(?:aa)(ab)(ab)\3', '()\g{1}(?:aa)ab(ab)\2'),
            array('a(){3}\g{1}(ab)(ab)\3', 'a(){3}\g{1}ab(ab)\2'),

            array('\g{1}()(ab(ab))\3', '\g{1}()ab(ab)\2'),
            array('\g{1}a()(ab(ab))\3', '\g{1}a()ab(ab)\2'),
            array('\g{1}()a(ab(ab))\3', '\g{1}()aab(ab)\2'),
            array('\g{1}a()a(ab(ab))\3', '\g{1}a()aab(ab)\2'),
            array('\g{1}ab()ab(ab(ab))\3', '\g{1}ab()abab(ab)\2'),
            array('\g{1}a|()|(ab(ab))\3', '\g{1}a|()|ab(ab)\2'),
            array('\g{1}()(?:aa)(ab(ab))\3', '\g{1}()(?:aa)ab(ab)\2'),
            array('\g{1}a(){3}(ab(ab))\3', '\g{1}a(){3}ab(ab)\2'),
            array('()\g{1}(ab(ab))\3', '()\g{1}ab(ab)\2'),
            array('a()\g{1}(ab(ab))\3', 'a()\g{1}ab(ab)\2'),
            array('()\g{1}a(ab(ab))\3', '()\g{1}aab(ab)\2'),
            array('a()\g{1}a(ab(ab))\3', 'a()\g{1}aab(ab)\2'),
            array('ab()\g{1}ab(ab(ab))\3', 'ab()\g{1}abab(ab)\2'),
            array('a|()|(ab(ab))\g{1}\3', 'a|()|ab(ab)\g{1}\2'),
            array('()\g{1}(?:aa)(ab(ab))\3', '()\g{1}(?:aa)ab(ab)\2'),
            array('a(){3}\g{1}(ab(ab))\3', 'a(){3}\g{1}ab(ab)\2'),

            array('\g{1}()(ab)()\3', '\g{1}()ab()\2'),
            array('\g{1}a()(ab)()\3', '\g{1}a()ab()\2'),
            array('\g{1}()a(ab)()\3', '\g{1}()aab()\2'),
            array('\g{1}a()a(ab)()\3', '\g{1}a()aab()\2'),
            array('\g{1}ab()ab(ab)()\3', '\g{1}ab()abab()\2'),
            array('\g{1}a|()|(ab)()\3', '\g{1}a|()|ab()\2'),
            array('\g{1}()(?:aa)(ab)()\3', '\g{1}()(?:aa)ab()\2'),
            array('\g{1}a(){3}(ab)()\3', '\g{1}a(){3}ab()\2'),
            array('()\g{1}(ab)()\3', '()\g{1}ab()\2'),
            array('a()\g{1}(ab)()\3', 'a()\g{1}ab()\2'),
            array('()\g{1}a(ab)()\3', '()\g{1}aab()\2'),
            array('a()\g{1}a(ab)()\3', 'a()\g{1}aab()\2'),
            array('ab()\g{1}ab(ab)()\3', 'ab()\g{1}abab()\2'),
            array('a|()|(ab)\g{1}()\3', 'a|()|ab\g{1}()\2'),
            array('()\g{1}(?:aa)(ab)()\3', '()\g{1}(?:aa)ab()\2'),
            array('a(){3}\g{1}(ab)()\3', 'a(){3}\g{1}ab()\2'),

            array('\g{1}()(ab())\3', '\g{1}()ab()\2'),
            array('\g{1}a()(ab())\3', '\g{1}a()ab()\2'),
            array('\g{1}()a(ab())\3', '\g{1}()aab()\2'),
            array('\g{1}a()a(ab())\3', '\g{1}a()aab()\2'),
            array('\g{1}ab()ab(ab())\3', '\g{1}ab()abab()\2'),
            array('\g{1}a|()|(ab())\3', '\g{1}a|()|ab()\2'),
            array('\g{1}()(?:aa)(ab())\3', '\g{1}()(?:aa)ab()\2'),
            array('\g{1}a(){3}(ab())\3', '\g{1}a(){3}ab()\2'),
            array('()\g{1}(ab())\3', '()\g{1}ab()\2'),
            array('a()\g{1}(ab())\3', 'a()\g{1}ab()\2'),
            array('()\g{1}a(ab())\3', '()\g{1}aab()\2'),
            array('a()\g{1}a(ab())\3', 'a()\g{1}aab()\2'),
            array('ab()\g{1}ab(ab())\3', 'ab()\g{1}abab()\2'),
            array('a|()|(ab())\g{1}\3', 'a|()|ab()\g{1}\2'),
            array('()\g{1}(?:aa)(ab())\3', '()\g{1}(?:aa)ab()\2'),
            array('a(){3}\g{1}(ab())\3', 'a(){3}\g{1}ab()\2'),

            array('\g{1}()(ab)()\2', '\g{1}()(ab)\2'),
            array('\g{1}a()(ab)\2', '\g{1}a()(ab)\2'),
            array('\g{1}()a(ab)()\2', '\g{1}()a(ab)\2'),
            array('\g{1}a()a(ab)()\2', '\g{1}a()a(ab)\2'),
            array('\g{1}ab()ab(ab)()\2', '\g{1}ab()ab(ab)\2'),
            array('\g{1}a|()|(ab)()\2', '\g{1}a|()|(ab)\2'),
            array('\g{1}()(?:aa)(ab)()\2', '\g{1}()(?:aa)(ab)\2'),
            array('\g{1}a(){3}(ab)()\2', '\g{1}a(){3}(ab)\2'),
            array('()\g{1}(ab)()\2', '()\g{1}(ab)\2'),
            array('a()\g{1}(ab)()\2', 'a()\g{1}(ab)\2'),
            array('()\g{1}a(ab)()\2', '()\g{1}a(ab)\2'),
            array('a()\g{1}a(ab)()\2', 'a()\g{1}a(ab)\2'),
            array('ab()\g{1}ab(ab)()\2', 'ab()\g{1}ab(ab)\2'),
            array('a|()|(ab)\g{1}()\2', 'a|()|(ab)\g{1}\2'),
            array('()\g{1}(?:aa)(ab)\2', '()\g{1}(?:aa)(ab)\2'),
            array('a(){3}\g{1}(ab)()\2', 'a(){3}\g{1}(ab)\2'),

            array('\g{1}()(ab())\2', '\g{1}()(ab)\2'),
            array('\g{1}a()(ab())\2', '\g{1}a()(ab)\2'),
            array('\g{1}()a(ab())\2', '\g{1}()a(ab)\2'),
            array('\g{1}a()a(ab())\2', '\g{1}a()a(ab)\2'),
            array('\g{1}ab()ab(ab())\2', '\g{1}ab()ab(ab)\2'),
            array('\g{1}a|()|(ab())\2', '\g{1}a|()|(ab)\2'),
            array('\g{1}()(?:aa)(ab())\2', '\g{1}()(?:aa)(ab)\2'),
            array('\g{1}a(){3}(ab())\2', '\g{1}a(){3}(ab)\2'),
            array('()\g{1}(ab())\2', '()\g{1}(ab)\2'),
            array('a()\g{1}(ab())\2', 'a()\g{1}(ab)\2'),
            array('()\g{1}a(ab())\2', '()\g{1}a(ab)\2'),
            array('a()\g{1}a(ab())\2', 'a()\g{1}a(ab)\2'),
            array('ab()\g{1}ab(ab())\2', 'ab()\g{1}ab(ab)\2'),
            array('a|()|(ab())\g{1}\2', 'a|()|(ab)\g{1}\2'),
            array('()\g{1}(?:aa)(ab())\2', '()\g{1}(?:aa)(ab)\2'),
            array('a(){3}\g{1}(ab())\2', 'a(){3}\g{1}(ab)\2'),


            array('(a)(b)\g{-1}', 'a(b)\g{-1}'),
            array('(a)(b)\g{-2}', '(a)b\g{-1}'),


            array('()(?(1)a|b)', '()(?(1)a|b)'),
            array('(?(1)a|b)()', '(?(1)a|b)()'),
            array('()(?(2)a|b)', '(?(2)a|b)'),
            array('(?(2)a|b)()', '(?(2)a|b)'),
            array('()()(?(2)a|b)', '()(?(1)a|b)'),
            array('(?(2)a|b)()()', '(?(1)a|b)()'),
            array('()(?(1)a|b)()', '()(?(1)a|b)'),
            array('()(?(2)a|b)()', '(?(1)a|b)()'),

            array('a()(?(1)a|b)', 'a()(?(1)a|b)'),
            array('a(?(1)a|b)()', 'a(?(1)a|b)()'),
            array('a()(?(2)a|b)', 'a(?(2)a|b)'),
            array('a(?(2)a|b)()', 'a(?(2)a|b)'),
            array('a()()(?(2)a|b)', 'a()(?(1)a|b)'),
            array('a(?(2)a|b)()()', 'a(?(1)a|b)()'),
            array('a()(?(1)a|b)()', 'a()(?(1)a|b)'),
            array('a()(?(2)a|b)()', 'a(?(1)a|b)()'),

            array('()(?(1)a|b)a', '()(?(1)a|b)a'),
            array('(?(1)a|b)()a', '(?(1)a|b)()a'),
            array('()(?(2)a|b)a', '(?(2)a|b)a'),
            array('(?(2)a|b)()a', '(?(2)a|b)a'),
            array('()()(?(2)a|b)a', '()(?(1)a|b)a'),
            array('(?(2)a|b)()()a', '(?(1)a|b)()a'),
            array('()(?(1)a|b)()a', '()(?(1)a|b)a'),
            array('()(?(2)a|b)()a', '(?(1)a|b)()a'),

            array('a()(?(1)a|b)a', 'a()(?(1)a|b)a'),
            array('a(?(1)a|b)()a', 'a(?(1)a|b)()a'),
            array('a()(?(2)a|b)a', 'a(?(2)a|b)a'),
            array('a(?(2)a|b)()a', 'a(?(2)a|b)a'),
            array('a()()(?(2)a|b)a', 'a()(?(1)a|b)a'),
            array('a(?(2)a|b)()()a', 'a(?(1)a|b)()a'),
            array('a()(?(1)a|b)()a', 'a()(?(1)a|b)a'),
            array('a()(?(2)a|b)()a', 'a(?(1)a|b)()a'),

            array('()a(?(1)a|b)', '()a(?(1)a|b)'),
            array('(?(1)a|b)a()', '(?(1)a|b)a()'),
            array('()a(?(2)a|b)', 'a(?(2)a|b)'),
            array('(?(2)a|b)a()', '(?(2)a|b)a'),
            array('()a()a(?(2)a|b)', 'a()a(?(1)a|b)'),
            array('(?(2)a|b)a()a()', '(?(1)a|b)aa()'),
            array('()(?(1)a|b)a()', '()(?(1)a|b)a'),
            array('()(?(2)a|b)a()', '(?(1)a|b)a()'),

            array('()av()\2', 'av()\1'),
            array('(()cd|)av()\1', '(cd|)av()\1'),

            array('(ab)', 'ab'),

            array('([ab])?', '[ab]?'),
        );
    }

    protected function get_test_alt_without_question_quant_trivial() {
        return array(
            array('a|', '(?:a)?'),
            array('a|b|', '(?:a|b)?'),

            array('(?:a|)', '(?:a)?'),

            array('(?:a|b|)?', '(?:a|b|)?'),
            array('(?:a|b|)+', '(?:(?:a|b)?)+'),
            array('(?:a|b|)*', '(?:a|b|)*'),
            array('(?:a|b|)?|c', '(?:a|b|)?|c'),
            array('(?:a|b|)+|c', '(?:(?:a|b)?)+|c'),
            array('(?:a|b|)*|c', '(?:a|b|)*|c'),
            array('(?:(?:a|b|)|c)?', '(?:(?:a|b|)|c)?'),
            array('(?:(?:a|b|)|c)+', '(?:(?:a|b)?|c)+'),
            array('(?:(?:a|b|)|c)*', '(?:(?:a|b|)|c)*'),

            /*array('(?=a|)', '(?=(?:a)?)'),
            array('(?!a|)', '(?!(?:a)?)'),
            array('(?<=a|)', '(?<=(?:a)?)'),
            array('(?<!a|)', '(?<!(?:a)?)'),*/
        );
    }

    protected function get_test_alt_with_question_quant_trivial() {
        return array(
            array('a|b', 'a|b'),
            array('(?:a|b)?', '(?:a|b|)'),
            array('(?:a|b){0,1}', '(?:a|b|)'),

            array('(?:a*|b|)?', '(?:a*|b|)?'),
            array('(?:a*|b*|)?', '(?:a*|b*|)?'),
            array('(?:a|b*|)?', '(?:a|b*|)?'),
            array('(?:a*|)?', '(?:a*|)?'),

            array('(?:a||b)?', '(?:a||b)?'),
            array('(?:a||b){0,1}', '(?:a||b){0,1}'),
        );
    }

    protected function get_test_quant_node_trivial() {
        return array(
            array('a{0,}', 'a*'),
            array('a{1,}', 'a+'),
            array('a{0,1}', 'a?'),
            array('a*', 'a*'),
            array('a+', 'a+'),
            array('a?', 'a?'),
            array('a{0,}b', 'a*b'),
            array('a{1,}b', 'a+b'),
            array('a{0,1}b', 'a?b'),
            array('a*b', 'a*b'),
            array('a+b', 'a+b'),
            array('a?b', 'a?b'),
            array('ab{0,}', 'ab*'),
            array('ab{1,}', 'ab+'),
            array('ab{0,1}', 'ab?'),
            array('ab*ab', 'ab*ab'),
            array('ab+ab', 'ab+ab'),
            array('ab?ab', 'ab?ab'),
            array('ab{0,}bc', 'ab*bc'),
            array('ab{1,}bc', 'ab+bc'),
            array('ab{0,1}bc', 'ab?bc'),
            array('ab*bc', 'ab*bc'),
            array('ab+bc', 'ab+bc'),
            array('ab?bc', 'ab?bc'),
            array('(a{0,})', '(a*)'),
            array('(a{1,})', '(a+)'),
            array('(a{0,1})', '(a?)'),
            array('(a*)', '(a*)'),
            array('(a+)', '(a+)'),
            array('(a?)', '(a?)'),
            array('(a{0,}b)', '(a*b)'),
            array('(a{1,}b)', '(a+b)'),
            array('(a{0,1}b)', '(a?b)'),
            array('(a*b)', '(a*b)'),
            array('(a+b)', '(a+b)'),
            array('(a?b)', '(a?b)'),
            array('(ab{0,})', '(ab*)'),
            array('(ab{1,})', '(ab+)'),
            array('(ab{0,1})', '(ab?)'),
            array('(ab*ab)', '(ab*ab)'),
            array('(ab+ab)', '(ab+ab)'),
            array('(ab?ab)', '(ab?ab)'),
            array('(ab{0,}bc)', '(ab*bc)'),
            array('(ab{1,}bc)', '(ab+bc)'),
            array('(ab{0,1}bc)', '(ab?bc)'),
            array('(ab*bc)', '(ab*bc)'),
            array('(ab+bc)', '(ab+bc)'),
            array('(ab?bc)', '(ab?bc)'),

            array('a{0,1}{1,}{0,}', 'a{0,1}{1,}*'),
            array('a{0,1}{1,}{1,}', '(?:a{0,1}{1,})+'),
            array('a{0,1}{1,}{0,1}', '(?:a{0,1}{1,})?'),
            array('a{,1}', 'a{,1}'),
            array('a{0,1}+', 'a{0,1}+'),
            array('a{0,1}?', 'a{0,1}?'),


            array('a{0,}|b', 'a*|b'),
            array('a{1,}|b', 'a+|b'),
            array('a{0,1}|b', 'a?|b'),
            array('a*|b', 'a*|b'),
            array('a+|b', 'a+|b'),
            array('a?|b', 'a?|b'),
            array('a{0,}b|b', 'a*b|b'),
            array('a{1,}b|b', 'a+b|b'),
            array('a{0,1}b|b', 'a?b|b'),
            array('a*b|b', 'a*b|b'),
            array('a+b|b', 'a+b|b'),
            array('a?b|b', 'a?b|b'),
            array('ab{0,}|b', 'ab*|b'),
            array('ab{1,}|b', 'ab+|b'),
            array('ab{0,1}|b', 'ab?|b'),
            array('ab*ab|b', 'ab*ab|b'),
            array('ab+ab|b', 'ab+ab|b'),
            array('ab?ab|b', 'ab?ab|b'),
            array('ab{0,}bc|b', 'ab*bc|b'),
            array('ab{1,}bc|b', 'ab+bc|b'),
            array('ab{0,1}bc|b', 'ab?bc|b'),
            array('ab*bc|b', 'ab*bc|b'),
            array('ab+bc|b', 'ab+bc|b'),
            array('ab?bc|b', 'ab?bc|b'),
            array('(a{0,})|b', '(a*)|b'),
            array('(a{1,})|b', '(a+)|b'),
            array('(a{0,1})|b', '(a?)|b'),
            array('(a*)|b', '(a*)|b'),
            array('(a+)|b', '(a+)|b'),
            array('(a?)|b', '(a?)|b'),
            array('(a{0,}b)|b', '(a*b)|b'),
            array('(a{1,}b)|b', '(a+b)|b'),
            array('(a{0,1}b)|b', '(a?b)|b'),
            array('(a*b)|b', '(a*b)|b'),
            array('(a+b)|b', '(a+b)|b'),
            array('(a?b)|b', '(a?b)|b'),
            array('(ab{0,})|b', '(ab*)|b'),
            array('(ab{1,})|b', '(ab+)|b'),
            array('(ab{0,1})|b', '(ab?)|b'),
            array('(ab*ab)|b', '(ab*ab)|b'),
            array('(ab+ab)|b', '(ab+ab)|b'),
            array('(ab?ab)|b', '(ab?ab)|b'),
            array('(ab{0,}bc)|b', '(ab*bc)|b'),
            array('(ab{1,}bc)|b', '(ab+bc)|b'),
            array('(ab{0,1}bc)|b', '(ab?bc)|b'),
            array('(ab*bc)|b', '(ab*bc)|b'),
            array('(ab+bc)|b', '(ab+bc)|b'),
            array('(ab?bc)|b', '(ab?bc)|b'),

            array('a{0,1}{1,}{0,}|b', 'a{0,1}{1,}*|b'),
            array('a{0,1}{1,}{1,}|b', '(?:a{0,1}{1,})+|b'),
            array('a{0,1}{1,}{0,1}|b', '(?:a{0,1}{1,})?|b'),
            array('a{,1}|b', 'a{,1}|b'),
            array('a{0,1}+|b', 'a{0,1}+|b'),
            array('a{0,1}?|b', 'a{0,1}?|b'),


            array('(?:a{0,})', '(?:a*)'),
            array('(?:a{1,})', '(?:a+)'),
            array('(?:a{0,1})', '(?:a?)'),
            array('(?:a*)', '(?:a*)'),
            array('(?:a+)', '(?:a+)'),
            array('(?:a?)', '(?:a?)'),
            array('(?:a{0,}b)', '(?:a*b)'),
            array('(?:a{1,}b)', '(?:a+b)'),
            array('(?:a{0,1}b)', '(?:a?b)'),
            array('(?:a*b)', '(?:a*b)'),
            array('(?:a+b)', '(?:a+b)'),
            array('(?:a?b)', '(?:a?b)'),
            array('(?:ab{0,})', '(?:ab*)'),
            array('(?:ab{1,})', '(?:ab+)'),
            array('(?:ab{0,1})', '(?:ab?)'),
            array('(?:ab*ab)', '(?:ab*ab)'),
            array('(?:ab+ab)', '(?:ab+ab)'),
            array('(?:ab?ab)', '(?:ab?ab)'),
            array('(?:ab{0,}bc)', '(?:ab*bc)'),
            array('(?:ab{1,}bc)', '(?:ab+bc)'),
            array('(?:ab{0,1}bc)', '(?:ab?bc)'),
            array('(?:ab*bc)', '(?:ab*bc)'),
            array('(?:ab+bc)', '(?:ab+bc)'),
            array('(?:ab?bc)', '(?:ab?bc)'),
            array('(?:(a{0,}))', '(?:(a*))'),
            array('(?:(a{1,}))', '(?:(a+))'),
            array('(?:(a{0,1}))', '(?:(a?))'),
            array('(?:(a*))', '(?:(a*))'),
            array('(?:(a+))', '(?:(a+))'),
            array('(?:(a?))', '(?:(a?))'),
            array('(?:(a{0,}b))', '(?:(a*b))'),
            array('(?:(a{1,}b))', '(?:(a+b))'),
            array('(?:(a{0,1}b))', '(?:(a?b))'),
            array('(?:(a*b))', '(?:(a*b))'),
            array('(?:(a+b))', '(?:(a+b))'),
            array('(?:(a?b))', '(?:(a?b))'),
            array('(?:(ab{0,}))', '(?:(ab*))'),
            array('(?:(ab{1,}))', '(?:(ab+))'),
            array('(?:(ab{0,1}))', '(?:(ab?))'),
            array('(?:(ab*ab))', '(?:(ab*ab))'),
            array('(?:(ab+ab))', '(?:(ab+ab))'),
            array('(?:(ab?ab))', '(?:(ab?ab))'),
            array('(?:(ab{0,}bc))', '(?:(ab*bc))'),
            array('(?:(ab{1,}bc))', '(?:(ab+bc))'),
            array('(?:(ab{0,1}bc))', '(?:(ab?bc))'),
            array('(?:(ab*bc))', '(?:(ab*bc))'),
            array('(?:(ab+bc))', '(?:(ab+bc))'),
            array('(?:(ab?bc))', '(?:(ab?bc))'),

            array('(?:a{0,1}{1,}{0,})', '(?:a{0,1}{1,}*)'),
            array('(?:a{0,1}{1,}{1,})', '(?:(?:a{0,1}{1,})+)'),
            array('(?:a{0,1}{1,}{0,1})', '(?:(?:a{0,1}{1,})?)'),
            array('(?:a{,1})', '(?:a{,1})'),
            array('(?:a{0,1}+)', '(?:a{0,1}+)'),
            array('(?:a{0,1}?)', '(?:a{0,1}?)'),


            array('(?:a{0,}|b)', '(?:a*|b)'),
            array('(?:a{1,}|b)', '(?:a+|b)'),
            array('(?:a{0,1}|b)', '(?:a?|b)'),
            array('(?:a*|b)', '(?:a*|b)'),
            array('(?:a+|b)', '(?:a+|b)'),
            array('(?:a?|b)', '(?:a?|b)'),
            array('(?:a{0,}b|b)', '(?:a*b|b)'),
            array('(?:a{1,}b|b)', '(?:a+b|b)'),
            array('(?:a{0,1}b|b)', '(?:a?b|b)'),
            array('(?:a*b|b)', '(?:a*b|b)'),
            array('(?:a+b|b)', '(?:a+b|b)'),
            array('(?:a?b|b)', '(?:a?b|b)'),
            array('(?:ab{0,}|b)', '(?:ab*|b)'),
            array('(?:ab{1,}|b)', '(?:ab+|b)'),
            array('(?:ab{0,1}|b)', '(?:ab?|b)'),
            array('(?:ab*ab|b)', '(?:ab*ab|b)'),
            array('(?:ab+ab|b)', '(?:ab+ab|b)'),
            array('(?:ab?ab|b)', '(?:ab?ab|b)'),
            array('(?:ab{0,}bc|b)', '(?:ab*bc|b)'),
            array('(?:ab{1,}bc|b)', '(?:ab+bc|b)'),
            array('(?:ab{0,1}bc|b)', '(?:ab?bc|b)'),
            array('(?:ab*bc|b)', '(?:ab*bc|b)'),
            array('(?:ab+bc|b)', '(?:ab+bc|b)'),
            array('(?:ab?bc|b)', '(?:ab?bc|b)'),
            array('(?:(a{0,})|b)', '(?:(a*)|b)'),
            array('(?:(a{1,})|b)', '(?:(a+)|b)'),
            array('(?:(a{0,1})|b)', '(?:(a?)|b)'),
            array('(?:(a*)|b)', '(?:(a*)|b)'),
            array('(?:(a+)|b)', '(?:(a+)|b)'),
            array('(?:(a?)|b)', '(?:(a?)|b)'),
            array('(?:(a{0,}b)|b)', '(?:(a*b)|b)'),
            array('(?:(a{1,}b)|b)', '(?:(a+b)|b)'),
            array('(?:(a{0,1}b)|b)', '(?:(a?b)|b)'),
            array('(?:(a*b)|b)', '(?:(a*b)|b)'),
            array('(?:(a+b)|b)', '(?:(a+b)|b)'),
            array('(?:(a?b)|b)', '(?:(a?b)|b)'),
            array('(?:(ab{0,})|b)', '(?:(ab*)|b)'),
            array('(?:(ab{1,})|b)', '(?:(ab+)|b)'),
            array('(?:(ab{0,1})|b)', '(?:(ab?)|b)'),
            array('(?:(ab*ab)|b)', '(?:(ab*ab)|b)'),
            array('(?:(ab+ab)|b)', '(?:(ab+ab)|b)'),
            array('(?:(ab?ab)|b)', '(?:(ab?ab)|b)'),
            array('(?:(ab{0,}bc)|b)', '(?:(ab*bc)|b)'),
            array('(?:(ab{1,}bc)|b)', '(?:(ab+bc)|b)'),
            array('(?:(ab{0,1}bc)|b)', '(?:(ab?bc)|b)'),
            array('(?:(ab*bc)|b)', '(?:(ab*bc)|b)'),
            array('(?:(ab+bc)|b)', '(?:(ab+bc)|b)'),
            array('(?:(ab?bc)|b)', '(?:(ab?bc)|b)'),

            array('(?:a{0,1}{1,}{0,}|b)', '(?:a{0,1}{1,}*|b)'),
            array('(?:a{0,1}{1,}{1,}|b)', '(?:(?:a{0,1}{1,})+|b)'),
            array('(?:a{0,1}{1,}{0,1}|b)', '(?:(?:a{0,1}{1,})?|b)'),
            array('(?:a{,1}|b)', '(?:a{,1}|b)'),
            array('(?:a{0,1}+|b)', '(?:a{0,1}+|b)'),
            array('(?:a{0,1}?|b)', '(?:a{0,1}?|b)'),
        );
    }

    protected function get_test_question_quant_for_alternative_node_trivial() {
        return array(
            array('a?', 'a?'),
            array('(?:a|)?', '(?:a|)'),
            array('(?:a|)+', '(?:a|)+'),
            array('(?:a|)*', '(?:a|)*'),
            array('(?:a|){2,3}', '(?:a|){2,3}'),

            array('(?:a|)?|c', '(?:a|)|c'),
        );
    }

    protected function get_test_nullable_alt_without_question_quant_trivial() {
        return array(
            array('a|', 'a'),
            array('a*|', 'a*'),
            array('(?:a*|)', '(?:a*)'),
            array('(?:a*|)c', '(?:a*)c'),
            array('(?:a*|)|c', '(?:a*)|c'),
            array('a*|b+|', 'a*|b+'),
            array('a*|b*|', 'a*|b*'),
            array('a*||b*|', 'a*|b*'),
            array('a*|||b*', 'a*|b*'),
            array('a*|||b*|', 'a*|b*'),
            array('(?:a*|b+|)', '(?:a*|b+)'),
            array('(?:a*|b+|)|', '(?:a*|b+|)'),
            array('(?:a*|b*|)|c', '(?:a*|b*)|c'),
            array('(?:a*|b+|)|c', '(?:a*|b+)|c'),

            array('a*|b|', 'a*|b'),
            array('a*|b*|', 'a*|b*'),
            array('a|b*|', 'a|b*'),
            array('a*|', 'a*'),
        );
    }

    protected function get_test_quant_node_1_to_1_trivial() {
        return array(
            array('a', 'a'),
            array('a{1,1}', 'a'),
            array('a{1,1}|b', 'a|b'),
            array('(?:a{1,1})', '(?:a)'),
            array('(?:a){1,1}', '(?:a)'),
            array('(a{1,1})', '(a)'),
            array('(a){1,1}', '(a)'),

            array('a{1}', 'a'),
        );
    }

    protected function aaa() {
        return array(
            array('(ab|a)', '(ab?)'),
            array('(?:ab|a)', 'ab?'),
            array('ab|a', 'ab?'),
            array('ba|a', 'b?a'),
            array('ba|a?', 'ba|a?'),
            array('ba|a+', 'ba|+'),
            array('ba|a*', 'ba|a*'),
            array('ba?|a', 'ba?|a'),
            array('ba+|a', 'b?a+'),
            array('ba*|a', 'b?a*'),
            array('b?a|a', 'b?a'),
            array('b+a|a', 'b+a|a'),
            array('b*a|a', 'b*a'),
            array('(?:ba|a)?', '(b?a)?'),
            array('(?:ba|a)+', '(b?a)+'),
            array('(?:ba|a)*', '(b?a)*'),
            array('ab|a', 'ab?'),
            array('ab|a?', '(?:ab|a|)'),
            array('ab|a+', 'ab|a+'),
            array('ab|a*', 'ab|a*'),
            array('ab?|a', 'ab?'),
            array('ab+|a', 'ab*'),
            array('ab*|a', 'ab*'),
            array('a?b|a', 'a?b?'),
            array('a+b|a', 'a+b?'),
            // Conversion alternatives
            array('a*b|a', 'a+b?'),
            array('(?:ab|a)?', '(?:a|ab|)'),
            array('(?:ab|a)+', '(?ab)+|a+'),
            array('(?:ab|a)*', '(?:ab)*|a*'),
            array('(?:a|)?', 'a?'),
            array('(?:a|)+', 'a*'),
            array('(?:a|)*', 'a*'),
            array('(?:a|)', 'a?'),
            array('(?:a|b)+', 'a+|b+'),
            array('(?:a|b)*', 'a*|b*'),
            array('a|aaa|aaaa', 'a|a{3,4}'),
            array('a|aa?', 'aa?'),
            array('a|aaa?', 'a{1,3}'),
            array('a|aaaa?', 'a|a{3,4}'),
            array('a|(?:ab)', '(?:ab?)'),
            array('a|(?:aab)', 'a(?:ab)?'),
            // Alternative with emptiness
            array('a?|', 'a?'),
            array('a*|', 'a*'),
            array('a+|', 'a*'),
            array('a(a?|)', 'a(a?)'),
            array('a(a+|)', 'a(a*)'),
            array('a(a*|)', 'a(a*)'),
            array('a(?:a?|)', 'a{0,2}'),
            array('a(?:a+|)', 'a*'),
            array('a(?:a*|)', 'a*'),
            array('a{0,}|', 'a*'),
            array('a{1,}|', 'a*'),
            array('a{0,1}|', 'a?'),
            array('a{0,3}|', 'a{0,3}'),
        );
    }

    protected function get_test_single_alternative_node_trivial() {
        return array(
            // Cast to character classes
            array('a|b', '[ab]'),
            array('a|c|b|d', '[acbd]'),
            array('a|b|c|e|f|g', '[abcefg]'),
            array('a|b|[c-d]', '[abc-d]'),
            array('a|b|c|[e-g]', '[abce-g]'),
//            array('a|b|c|[x-z]?', '[a-cx-z]?'),
//            array('a|b|c|[x-z]+', '[a-c]|[x-z]+'),
//            array('a|b|c|[x-z]*', '[a-c]|[x-z]*'),
            array('\s|a', '[\sa]'),
            array('\S|a', '[\Sa]'),
            array('\w|a', '[\wa]'),
            array('\W|a', '[\Wa]'),
            array('\d|a', '[\da]'),
            array('\D|a', '[\Da]'),
//            array('a?|b', '[ab]?'),
            array('a+|b', 'a+|b'),
            array('a*|b', 'a*|b'),
//            array('a|b?', '[ab]?'),
            array('a|b+', 'a|b+'),
            array('a|b*', 'a|b*'),
            array('[aa]|b', '[aab]'),
            array('a|[bb]', '[abb]'),
            array('[aa]|[bb]', '[aabb]'),
            array('[^aa]|b', '[^aa]|b'),
            array('a|[^bb]', 'a|[^bb]'),
            array('[^aa]|[bb]', '[^aa]|[bb]'),
            array('[aa]|[^bb]', '[aa]|[^bb]'),
            array('[^aa]|[^bb]', '[^aa]|[^bb]'),
            array('(?:a|b)?', '(?:[ab])?'),

            array('a|-|b', '[a\-b]'),
            array('a|.|b', '[ab]|.'),
            array('a|-|]|{|}|b', '[a\-\]\{\}b]'),
            array('a|\|b', 'a|\|b'),
            array('a|^|b', '[ab]|^'),
            array('a|$|b', '[ab]|$'),
            array('a|[|b', 'a|[|b'),
            array('a|||b', '[ab]||'),
            array('a|(|b', 'a|(|b'),
            array('a|)|b', 'a|)|b'),
            //array('a|?|b', 'a|?|b'),
            //array('a|+|b', 'a|+|b'),
            //array('a|*|b', 'a|*|b'),

            array('[ab]|c|ab', '[abc]|ab'),
            array('ab|c|[ab]', '[cab]|ab'),
            array('[ab]|c|a', '[abca]'),

            array('[ab]|dc|e', '[abe]|dc'),
            array('a|dc|e', '[ae]|dc'),
            array('a|dc|a', '[aa]|dc'),
            array('a|[a-c]|\^|^|[01]', '[aa-c\^01]|^'),
            array('[ab](?:a|b)', '[ab](?:[ab])'),
            array('(a|b)+|c', '([ab])+|c'),

            array('a|b|', '[ab]|'),

            array('(?:a|b|)', '(?:[ab]|)'),
        );
    }

    protected function get_test_space_charset_trivial() {
        return array(
            array(' ', '\s'),
            array('a ', 'a\s'),
            array(' a', '\sa'),
            array('a a', 'a\sa'),
            array('a| ', 'a|\s'),
            array('(?: )', '(?:\s)'),
            array('a| |b', 'a|\s|b'),
            array(' {3}', '\s{3}'),
            array('[ ]', '[\s]'),
            array('[^ ]', '[^\s]'),
            array('[a ]', '[a\s]'),
            array('[ a]', '[\sa]'),
            array('[a b]', '[a\sb]'),
            array('[^a ]', '[^a\s]'),
            array('[^ a]', '[^\sa]'),
            array('[^a b]', '[^a\sb]'),

            array('[ \s]', '[ \s]'),
            array('[\s ]', '[\s ]'),
            array('[\s \s]', '[\s \s]'),
            array('[\s\s ]', '[\s\s ]'),
            array('[ \s\s]', '[ \s\s]'),

            array('[ [:space:]]', '[ [:space:]]'),
            array('[[:space:] ]', '[[:space:] ]'),
            array('[[:space:] [:space:]]', '[[:space:] [:space:]]'),
            array('[[:space:][:space:] ]', '[[:space:][:space:] ]'),
            array('[ [:space:][:space:]]', '[ [:space:][:space:]]'),

            array('[\s [:space:]]', '[\s [:space:]]'),
            array('[\s[:space:] ]', '[\s[:space:] ]'),
            array('[ \s[:space:]]', '[ \s[:space:]]'),
            array('[[:space:] \s]', '[[:space:] \s]'),
            array('[[:space:]\s ]', '[[:space:]\s ]'),
            array('[ [:space:]\s]', '[ [:space:]\s]'),

            array('[^ \s]', '[^ \s]'),
            array('[^\s ]', '[^\s ]'),
            array('[^\s \s]', '[^\s \s]'),
            array('[^\s\s ]', '[^\s\s ]'),
            array('[^ \s\s]', '[^ \s\s]'),

            array('[^ [:space:]]', '[^ [:space:]]'),
            array('[^[:space:] ]', '[^[:space:] ]'),
            array('[^[:space:] [:space:]]', '[^[:space:] [:space:]]'),
            array('[^[:space:][:space:] ]', '[^[:space:][:space:] ]'),
            array('[^ [:space:][:space:]]', '[^ [:space:][:space:]]'),

            array('[^\s [:space:]]', '[^\s [:space:]]'),
            array('[^\s[:space:] ]', '[^\s[:space:] ]'),
            array('[^ \s[:space:]]', '[^ \s[:space:]]'),
            array('[^[:space:] \s]', '[^[:space:] \s]'),
            array('[^[:space:]\s ]', '[^[:space:]\s ]'),
            array('[^ [:space:]\s]', '[^ [:space:]\s]'),


            array(' |b', '\s|b'),
            array('a |b', 'a\s|b'),
            array(' a|b', '\sa|b'),
            array('a a|b', 'a\sa|b'),
            array('a| |b', 'a|\s|b'),
            array('(?: )|b', '(?:\s)|b'),
            array('a| |b|b', 'a|\s|b|b'),
            array(' {3}|b', '\s{3}|b'),
            array('[ ]|b', '[\s]|b'),
            array('[^ ]|b', '[^\s]|b'),
            array('[a ]|b', '[a\s]|b'),
            array('[ a]|b', '[\sa]|b'),
            array('[a b]|b', '[a\sb]|b'),
            array('[^a ]|b', '[^a\s]|b'),
            array('[^ a]|b', '[^\sa]|b'),
            array('[^a b]|b', '[^a\sb]|b'),

            array('[ \s]|b', '[ \s]|b'),
            array('[\s ]|b', '[\s ]|b'),
            array('[\s \s]|b', '[\s \s]|b'),
            array('[\s\s ]|b', '[\s\s ]|b'),
            array('[ \s\s]|b', '[ \s\s]|b'),

            array('[ [:space:]]|b', '[ [:space:]]|b'),
            array('[[:space:] ]|b', '[[:space:] ]|b'),
            array('[[:space:] [:space:]]|b', '[[:space:] [:space:]]|b'),
            array('[[:space:][:space:] ]|b', '[[:space:][:space:] ]|b'),
            array('[ [:space:][:space:]]|b', '[ [:space:][:space:]]|b'),

            array('[\s [:space:]]|b', '[\s [:space:]]|b'),
            array('[\s[:space:] ]|b', '[\s[:space:] ]|b'),
            array('[ \s[:space:]]|b', '[ \s[:space:]]|b'),
            array('[[:space:] \s]|b', '[[:space:] \s]|b'),
            array('[[:space:]\s ]|b', '[[:space:]\s ]|b'),
            array('[ [:space:]\s]|b', '[ [:space:]\s]|b'),

            array('[^ \s]|b', '[^ \s]|b'),
            array('[^\s ]|b', '[^\s ]|b'),
            array('[^\s \s]|b', '[^\s \s]|b'),
            array('[^\s\s ]|b', '[^\s\s ]|b'),
            array('[^ \s\s]|b', '[^ \s\s]|b'),

            array('[^ [:space:]]|b', '[^ [:space:]]|b'),
            array('[^[:space:] ]|b', '[^[:space:] ]|b'),
            array('[^[:space:] [:space:]]|b', '[^[:space:] [:space:]]|b'),
            array('[^[:space:][:space:] ]|b', '[^[:space:][:space:] ]|b'),
            array('[^ [:space:][:space:]]|b', '[^ [:space:][:space:]]|b'),

            array('[^\s [:space:]]|b', '[^\s [:space:]]|b'),
            array('[^\s[:space:] ]|b', '[^\s[:space:] ]|b'),
            array('[^ \s[:space:]]|b', '[^ \s[:space:]]|b'),
            array('[^[:space:] \s]|b', '[^[:space:] \s]|b'),
            array('[^[:space:]\s ]|b', '[^[:space:]\s ]|b'),
            array('[^ [:space:]\s]|b', '[^ [:space:]\s]|b'),


            array('(?: )', '(?:\s)'),
            array('(?:a )', '(?:a\s)'),
            array('(?: a)', '(?:\sa)'),
            array('(?:a a)', '(?:a\sa)'),
            array('(?:a| )', '(?:a|\s)'),
            array('(?:(?: ))', '(?:(?:\s))'),
            array('(?:a| |b)', '(?:a|\s|b)'),
            array('(?: {3})', '(?:\s{3})'),
            array('(?:[ ])', '(?:[\s])'),
            array('(?:[^ ])', '(?:[^\s])'),
            array('(?:[a ])', '(?:[a\s])'),
            array('(?:[ a])', '(?:[\sa])'),
            array('(?:[a b])', '(?:[a\sb])'),
            array('(?:[^a ])', '(?:[^a\s])'),
            array('(?:[^ a])', '(?:[^\sa])'),
            array('(?:[^a b])', '(?:[^a\sb])'),

            array('(?:[ \s])', '(?:[ \s])'),
            array('(?:[\s ])', '(?:[\s ])'),
            array('(?:[\s \s])', '(?:[\s \s])'),
            array('(?:[\s\s ])', '(?:[\s\s ])'),
            array('(?:[ \s\s])', '(?:[ \s\s])'),

            array('(?:[ [:space:]])', '(?:[ [:space:]])'),
            array('(?:[[:space:] ])', '(?:[[:space:] ])'),
            array('(?:[[:space:] [:space:]])', '(?:[[:space:] [:space:]])'),
            array('(?:[[:space:][:space:] ])', '(?:[[:space:][:space:] ])'),
            array('(?:[ [:space:][:space:]])', '(?:[ [:space:][:space:]])'),

            array('(?:[\s [:space:]])', '(?:[\s [:space:]])'),
            array('(?:[\s[:space:] ])', '(?:[\s[:space:] ])'),
            array('(?:[ \s[:space:]])', '(?:[ \s[:space:]])'),
            array('(?:[[:space:] \s])', '(?:[[:space:] \s])'),
            array('(?:[[:space:]\s ])', '(?:[[:space:]\s ])'),
            array('(?:[ [:space:]\s])', '(?:[ [:space:]\s])'),

            array('(?:[^ \s])', '(?:[^ \s])'),
            array('(?:[^\s ])', '(?:[^\s ])'),
            array('(?:[^\s \s])', '(?:[^\s \s])'),
            array('(?:[^\s\s ])', '(?:[^\s\s ])'),
            array('(?:[^ \s\s])', '(?:[^ \s\s])'),

            array('(?:[^ [:space:]])', '(?:[^ [:space:]])'),
            array('(?:[^[:space:] ])', '(?:[^[:space:] ])'),
            array('(?:[^[:space:] [:space:]])', '(?:[^[:space:] [:space:]])'),
            array('(?:[^[:space:][:space:] ])', '(?:[^[:space:][:space:] ])'),
            array('(?:[^ [:space:][:space:]])', '(?:[^ [:space:][:space:]])'),

            array('(?:[^\s [:space:]])', '(?:[^\s [:space:]])'),
            array('(?:[^\s[:space:] ])', '(?:[^\s[:space:] ])'),
            array('(?:[^ \s[:space:]])', '(?:[^ \s[:space:]])'),
            array('(?:[^[:space:] \s])', '(?:[^[:space:] \s])'),
            array('(?:[^[:space:]\s ])', '(?:[^[:space:]\s ])'),
            array('(?:[^ [:space:]\s])', '(?:[^ [:space:]\s])'),


            array('(?: |b)', '(?:\s|b)'),
            array('(?:a |b)', '(?:a\s|b)'),
            array('(?: a|b)', '(?:\sa|b)'),
            array('(?:a a|b)', '(?:a\sa|b)'),
            array('(?:a| |b)', '(?:a|\s|b)'),
            array('(?:(?: )|b)', '(?:(?:\s)|b)'),
            array('(?:a| |b|b)', '(?:a|\s|b|b)'),
            array('(?: {3}|b)', '(?:\s{3}|b)'),
            array('(?:[ ]|b)', '(?:[\s]|b)'),
            array('(?:[^ ]|b)', '(?:[^\s]|b)'),
            array('(?:[a ]|b)', '(?:[a\s]|b)'),
            array('(?:[ a]|b)', '(?:[\sa]|b)'),
            array('(?:[a b]|b)', '(?:[a\sb]|b)'),
            array('(?:[^a ]|b)', '(?:[^a\s]|b)'),
            array('(?:[^ a]|b)', '(?:[^\sa]|b)'),
            array('(?:[^a b]|b)', '(?:[^a\sb]|b)'),

            array('(?:[ \s]|b)', '(?:[ \s]|b)'),
            array('(?:[\s ]|b)', '(?:[\s ]|b)'),
            array('(?:[\s \s]|b)', '(?:[\s \s]|b)'),
            array('(?:[\s\s ]|b)', '(?:[\s\s ]|b)'),
            array('(?:[ \s\s]|b)', '(?:[ \s\s]|b)'),

            array('(?:[ [:space:]]|b)', '(?:[ [:space:]]|b)'),
            array('(?:[[:space:] ]|b)', '(?:[[:space:] ]|b)'),
            array('(?:[[:space:] [:space:]]|b)', '(?:[[:space:] [:space:]]|b)'),
            array('(?:[[:space:][:space:] ]|b)', '(?:[[:space:][:space:] ]|b)'),
            array('(?:[ [:space:][:space:]]|b)', '(?:[ [:space:][:space:]]|b)'),

            array('(?:[\s [:space:]]|b)', '(?:[\s [:space:]]|b)'),
            array('(?:[\s[:space:] ]|b)', '(?:[\s[:space:] ]|b)'),
            array('(?:[ \s[:space:]]|b)', '(?:[ \s[:space:]]|b)'),
            array('(?:[[:space:] \s]|b)', '(?:[[:space:] \s]|b)'),
            array('(?:[[:space:]\s ]|b)', '(?:[[:space:]\s ]|b)'),
            array('(?:[ [:space:]\s]|b)', '(?:[ [:space:]\s]|b)'),

            array('(?:[^ \s]|b)', '(?:[^ \s]|b)'),
            array('(?:[^\s ]|b)', '(?:[^\s ]|b)'),
            array('(?:[^\s \s]|b)', '(?:[^\s \s]|b)'),
            array('(?:[^\s\s ]|b)', '(?:[^\s\s ]|b)'),
            array('(?:[^ \s\s]|b)', '(?:[^ \s\s]|b)'),

            array('(?:[^ [:space:]]|b)', '(?:[^ [:space:]]|b)'),
            array('(?:[^[:space:] ]|b)', '(?:[^[:space:] ]|b)'),
            array('(?:[^[:space:] [:space:]]|b)', '(?:[^[:space:] [:space:]]|b)'),
            array('(?:[^[:space:][:space:] ]|b)', '(?:[^[:space:][:space:] ]|b)'),
            array('(?:[^ [:space:][:space:]]|b)', '(?:[^ [:space:][:space:]]|b)'),

            array('(?:[^\s [:space:]]|b)', '(?:[^\s [:space:]]|b)'),
            array('(?:[^\s[:space:] ]|b)', '(?:[^\s[:space:] ]|b)'),
            array('(?:[^ \s[:space:]]|b)', '(?:[^ \s[:space:]]|b)'),
            array('(?:[^[:space:] \s]|b)', '(?:[^[:space:] \s]|b)'),
            array('(?:[^[:space:]\s ]|b)', '(?:[^[:space:]\s ]|b)'),
            array('(?:[^ [:space:]\s]|b)', '(?:[^ [:space:]\s]|b)'),
        );
    }

    protected function get_test_subpattern_without_backref_trivial() {
        return array(
            array('(ab)', '(?:ab)'),
            array('(ab)a', '(?:ab)a'),
            array('(ab)\1a', '(ab)\1a'),
            array('(a(b))\1a', '(a(?:b))\1a'),
            array('(a(b))\1\2a', '(a(b))\1\2a'),
            array('(a(b)(c))\1\3a', '(a(?:b)(c))\1\2a'),

            array('(ab)(?(1)a|b)a', '(ab)(?(1)a|b)a'),
            array('(a(b))(?(1)a|b)a', '(a(?:b))(?(1)a|b)a'),
            array('(a(b))(?(1)a|b)(?(2)a|b)a', '(a(b))(?(1)a|b)(?(2)a|b)a'),
            array('(a(b)(c))(?(1)a|b)(?(3)a|b)a', '(a(?:b)(c))(?(1)a|b)(?(2)a|b)a'),

            array('([ab])?', '(?:[ab])?'),
        );
    }

    protected function get_test_space_charset_without_quant_trivial() {
        return array(
            array('a ', 'a +'),
            array('a\s', 'a\s+'),
            array('a[ ]', 'a[ ]+'),
            array('a[\s]', 'a[\s]+'),
            array('a[\sa]', 'a[\sa]'),
            array('a[[:space:]]', 'a[[:space:]]+'),
            array('a a', 'a +a'),
            array('a\sa', 'a\s+a'),
            array('a[ ]a', 'a[ ]+a'),
            array('a[\s]a', 'a[\s]+a'),
            array('a[\sa]a', 'a[\sa]a'),
            array('a[[:space:]]a', 'a[[:space:]]+a'),
            array(' a', ' +a'),
            array('\sa', '\s+a'),
            array('[ ]a', '[ ]+a'),
            array('[\s]a', '[\s]+a'),
            array('[\sa]a', '[\sa]a'),
            array('[[:space:]]a', '[[:space:]]+a'),

            array(' ', ' +'),
            array('\s', '\s+'),
            array('[ ]', '[ ]+'),
            array('[\s]', '[\s]+'),
            array('[[:space:]]', '[[:space:]]+'),
            array('( )', '( +)'),
            array('(\s)', '(\s+)'),
            array('([ ])', '([ ]+)'),
            array('([\s])', '([\s]+)'),
            array('([[:space:]])', '([[:space:]]+)'),
            array('(?: )', '(?: +)'),
            array('(?:\s)', '(?:\s+)'),
            array('(?:[ ])', '(?:[ ]+)'),
            array('(?:[\s])', '(?:[\s]+)'),
            array('(?:[[:space:]])', '(?:[[:space:]]+)'),
            array('((( )))', '((( +)))'),
            array('(((\s)))', '(((\s+)))'),
            array('((([ ])))', '((([ ]+)))'),
            array('((([\s])))', '((([\s]+)))'),
            array('((([[:space:]])))', '((([[:space:]]+)))'),
            array('(?:(?:(?: )))', '(?:(?:(?: +)))'),
            array('(?:(?:(?:\s)))', '(?:(?:(?:\s+)))'),
            array('(?:(?:(?:[ ])))', '(?:(?:(?:[ ]+)))'),
            array('(?:(?:(?:[\s])))', '(?:(?:(?:[\s]+)))'),
            array('(?:(?:(?:[[:space:]])))', '(?:(?:(?:[[:space:]]+)))'),

            array(' +', ' +'),
            array('\s+', '\s+'),
            array('[ ]+', '[ ]+'),
            array('[\s]+', '[\s]+'),
            array('[[:space:]]+', '[[:space:]]+'),
            array('( +)', '( +)'),
            array('(\s+)', '(\s+)'),
            array('([ ]+)', '([ ]+)'),
            array('([\s]+)', '([\s]+)'),
            array('([[:space:]]+)', '([[:space:]]+)'),
            array('(?: +)', '(?: +)'),
            array('(?:\s+)', '(?:\s+)'),
            array('(?:[ ]+)', '(?:[ ]+)'),
            array('(?:[\s]+)', '(?:[\s]+)'),
            array('(?:[[:space:]]+)', '(?:[[:space:]]+)'),
            array('((( +)))', '((( +)))'),
            array('(((\s+)))', '(((\s+)))'),
            array('((([ ]+)))', '((([ ]+)))'),
            array('((([\s]+)))', '((([\s]+)))'),
            array('((([[:space:]]+)))', '((([[:space:]]+)))'),
            array('(?:(?:(?: +)))', '(?:(?:(?: +)))'),
            array('(?:(?:(?:\s+)))', '(?:(?:(?:\s+)))'),
            array('(?:(?:(?:[ ]+)))', '(?:(?:(?:[ ]+)))'),
            array('(?:(?:(?:[\s]+)))', '(?:(?:(?:[\s]+)))'),
            array('(?:(?:(?:[[:space:]]+)))', '(?:(?:(?:[[:space:]]+)))'),
            array('((( )+))', '((( )+))'),
            array('(((\s)+))', '(((\s)+))'),
            array('((([ ])+))', '((([ ])+))'),
            array('((([\s])+))', '((([\s])+))'),
            array('((([[:space:]])+))', '((([[:space:]])+))'),
            array('(?:(?:(?: )+))', '(?:(?:(?: )+))'),
            array('(?:(?:(?:\s)+))', '(?:(?:(?:\s)+))'),
            array('(?:(?:(?:[ ])+))', '(?:(?:(?:[ ])+))'),
            array('(?:(?:(?:[\s])+))', '(?:(?:(?:[\s])+))'),
            array('(?:(?:(?:[[:space:]])+))', '(?:(?:(?:[[:space:]])+))'),
            array('((( ))+)', '((( ))+)'),
            array('(((\s))+)', '(((\s))+)'),
            array('((([ ]))+)', '((([ ]))+)'),
            array('((([\s]))+)', '((([\s]))+)'),
            array('((([[:space:]]))+)', '((([[:space:]]))+)'),
            array('(?:(?:(?: ))+)', '(?:(?:(?: ))+)'),
            array('(?:(?:(?:\s))+)', '(?:(?:(?:\s))+)'),
            array('(?:(?:(?:[ ]))+)', '(?:(?:(?:[ ]))+)'),
            array('(?:(?:(?:[\s]))+)', '(?:(?:(?:[\s]))+)'),
            array('(?:(?:(?:[[:space:]]))+)', '(?:(?:(?:[[:space:]]))+)'),
            array('((( )))+', '((( )))+'),
            array('(((\s)))+', '(((\s)))+'),
            array('((([ ])))+', '((([ ])))+'),
            array('((([\s])))+', '((([\s])))+'),
            array('((([[:space:]])))+', '((([[:space:]])))+'),
            array('(?:(?:(?: )))+', '(?:(?:(?: )))+'),
            array('(?:(?:(?:\s)))+', '(?:(?:(?:\s)))+'),
            array('(?:(?:(?:[ ])))+', '(?:(?:(?:[ ])))+'),
            array('(?:(?:(?:[\s])))+', '(?:(?:(?:[\s])))+'),
            array('(?:(?:(?:[[:space:]])))+', '(?:(?:(?:[[:space:]])))+'),

            array(' *', ' *'),
            array('\s*', '\s*'),
            array('[ ]*', '[ ]*'),
            array('[\s]*', '[\s]*'),
            array('[[:space:]]*', '[[:space:]]*'),
            array('( *)', '( *)'),
            array('(\s*)', '(\s*)'),
            array('([ ]*)', '([ ]*)'),
            array('([\s]*)', '([\s]*)'),
            array('([[:space:]]*)', '([[:space:]]*)'),
            array('(?: *)', '(?: *)'),
            array('(?:\s*)', '(?:\s*)'),
            array('(?:[ ]*)', '(?:[ ]*)'),
            array('(?:[\s]*)', '(?:[\s]*)'),
            array('(?:[[:space:]]*)', '(?:[[:space:]]*)'),
            array('((( *)))', '((( *)))'),
            array('(((\s*)))', '(((\s*)))'),
            array('((([ ]*)))', '((([ ]*)))'),
            array('((([\s]*)))', '((([\s]*)))'),
            array('((([[:space:]]*)))', '((([[:space:]]*)))'),
            array('(?:(?:(?: *)))', '(?:(?:(?: *)))'),
            array('(?:(?:(?:\s*)))', '(?:(?:(?:\s*)))'),
            array('(?:(?:(?:[ ]*)))', '(?:(?:(?:[ ]*)))'),
            array('(?:(?:(?:[\s]*)))', '(?:(?:(?:[\s]*)))'),
            array('(?:(?:(?:[[:space:]]*)))', '(?:(?:(?:[[:space:]]*)))'),
            array('((( )*))', '((( )*))'),
            array('(((\s)*))', '(((\s)*))'),
            array('((([ ])*))', '((([ ])*))'),
            array('((([\s])*))', '((([\s])*))'),
            array('((([[:space:]])*))', '((([[:space:]])*))'),
            array('(?:(?:(?: )*))', '(?:(?:(?: )*))'),
            array('(?:(?:(?:\s)*))', '(?:(?:(?:\s)*))'),
            array('(?:(?:(?:[ ])*))', '(?:(?:(?:[ ])*))'),
            array('(?:(?:(?:[\s])*))', '(?:(?:(?:[\s])*))'),
            array('(?:(?:(?:[[:space:]])*))', '(?:(?:(?:[[:space:]])*))'),
            array('((( ))*)', '((( ))*)'),
            array('(((\s))*)', '(((\s))*)'),
            array('((([ ]))*)', '((([ ]))*)'),
            array('((([\s]))*)', '((([\s]))*)'),
            array('((([[:space:]]))*)', '((([[:space:]]))*)'),
            array('(?:(?:(?: ))*)', '(?:(?:(?: ))*)'),
            array('(?:(?:(?:\s))*)', '(?:(?:(?:\s))*)'),
            array('(?:(?:(?:[ ]))*)', '(?:(?:(?:[ ]))*)'),
            array('(?:(?:(?:[\s]))*)', '(?:(?:(?:[\s]))*)'),
            array('(?:(?:(?:[[:space:]]))*)', '(?:(?:(?:[[:space:]]))*)'),
            array('((( )))*', '((( )))*'),
            array('(((\s)))*', '(((\s)))*'),
            array('((([ ])))*', '((([ ])))*'),
            array('((([\s])))*', '((([\s])))*'),
            array('((([[:space:]])))*', '((([[:space:]])))*'),
            array('(?:(?:(?: )))*', '(?:(?:(?: )))*'),
            array('(?:(?:(?:\s)))*', '(?:(?:(?:\s)))*'),
            array('(?:(?:(?:[ ])))*', '(?:(?:(?:[ ])))*'),
            array('(?:(?:(?:[\s])))*', '(?:(?:(?:[\s])))*'),
            array('(?:(?:(?:[[:space:]])))*', '(?:(?:(?:[[:space:]])))*'),

            array(' ?', ' ?'),
            array('\s?', '\s?'),
            array('[ ]?', '[ ]?'),
            array('[\s]?', '[\s]?'),
            array('[[:space:]]?', '[[:space:]]?'),
            array('( ?)', '( ?)'),
            array('(\s?)', '(\s?)'),
            array('([ ]?)', '([ ]?)'),
            array('([\s]?)', '([\s]?)'),
            array('([[:space:]]?)', '([[:space:]]?)'),
            array('(?: ?)', '(?: ?)'),
            array('(?:\s?)', '(?:\s?)'),
            array('(?:[ ]?)', '(?:[ ]?)'),
            array('(?:[\s]?)', '(?:[\s]?)'),
            array('(?:[[:space:]]?)', '(?:[[:space:]]?)'),
            array('((( ?)))', '((( ?)))'),
            array('(((\s?)))', '(((\s?)))'),
            array('((([ ]?)))', '((([ ]?)))'),
            array('((([\s]?)))', '((([\s]?)))'),
            array('((([[:space:]]?)))', '((([[:space:]]?)))'),
            array('(?:(?:(?: ?)))', '(?:(?:(?: ?)))'),
            array('(?:(?:(?:\s?)))', '(?:(?:(?:\s?)))'),
            array('(?:(?:(?:[ ]?)))', '(?:(?:(?:[ ]?)))'),
            array('(?:(?:(?:[\s]?)))', '(?:(?:(?:[\s]?)))'),
            array('(?:(?:(?:[[:space:]]?)))', '(?:(?:(?:[[:space:]]?)))'),
            array('((( )?))', '((( )?))'),
            array('(((\s)?))', '(((\s)?))'),
            array('((([ ])?))', '((([ ])?))'),
            array('((([\s])?))', '((([\s])?))'),
            array('((([[:space:]])?))', '((([[:space:]])?))'),
            array('(?:(?:(?: )?))', '(?:(?:(?: )?))'),
            array('(?:(?:(?:\s)?))', '(?:(?:(?:\s)?))'),
            array('(?:(?:(?:[ ])?))', '(?:(?:(?:[ ])?))'),
            array('(?:(?:(?:[\s])?))', '(?:(?:(?:[\s])?))'),
            array('(?:(?:(?:[[:space:]])?))', '(?:(?:(?:[[:space:]])?))'),
            array('((( ))?)', '((( ))?)'),
            array('(((\s))?)', '(((\s))?)'),
            array('((([ ]))?)', '((([ ]))?)'),
            array('((([\s]))?)', '((([\s]))?)'),
            array('((([[:space:]]))?)', '((([[:space:]]))?)'),
            array('(?:(?:(?: ))?)', '(?:(?:(?: ))?)'),
            array('(?:(?:(?:\s))?)', '(?:(?:(?:\s))?)'),
            array('(?:(?:(?:[ ]))?)', '(?:(?:(?:[ ]))?)'),
            array('(?:(?:(?:[\s]))?)', '(?:(?:(?:[\s]))?)'),
            array('(?:(?:(?:[[:space:]]))?)', '(?:(?:(?:[[:space:]]))?)'),
            array('((( )))?', '((( )))?'),
            array('(((\s)))?', '(((\s)))?'),
            array('((([ ])))?', '((([ ])))?'),
            array('((([\s])))?', '((([\s])))?'),
            array('((([[:space:]])))?', '((([[:space:]])))?'),
            array('(?:(?:(?: )))?', '(?:(?:(?: )))?'),
            array('(?:(?:(?:\s)))?', '(?:(?:(?:\s)))?'),
            array('(?:(?:(?:[ ])))?', '(?:(?:(?:[ ])))?'),
            array('(?:(?:(?:[\s])))?', '(?:(?:(?:[\s])))?'),
            array('(?:(?:(?:[[:space:]])))?', '(?:(?:(?:[[:space:]])))?'),

            array(' {2,5}', ' {2,5}'),
            array('\s{2,5}', '\s{2,5}'),
            array('[ ]{2,5}', '[ ]{2,5}'),
            array('[\s]{2,5}', '[\s]{2,5}'),
            array('[[:space:]]{2,5}', '[[:space:]]{2,5}'),
            array('( {2,5})', '( {2,5})'),
            array('(\s{2,5})', '(\s{2,5})'),
            array('([ ]{2,5})', '([ ]{2,5})'),
            array('([\s]{2,5})', '([\s]{2,5})'),
            array('([[:space:]]{2,5})', '([[:space:]]{2,5})'),
            array('(?: {2,5})', '(?: {2,5})'),
            array('(?:\s{2,5})', '(?:\s{2,5})'),
            array('(?:[ ]{2,5})', '(?:[ ]{2,5})'),
            array('(?:[\s]{2,5})', '(?:[\s]{2,5})'),
            array('(?:[[:space:]]{2,5})', '(?:[[:space:]]{2,5})'),
            array('((( {2,5})))', '((( {2,5})))'),
            array('(((\s{2,5})))', '(((\s{2,5})))'),
            array('((([ ]{2,5})))', '((([ ]{2,5})))'),
            array('((([\s]{2,5})))', '((([\s]{2,5})))'),
            array('((([[:space:]]{2,5})))', '((([[:space:]]{2,5})))'),
            array('(?:(?:(?: {2,5})))', '(?:(?:(?: {2,5})))'),
            array('(?:(?:(?:\s{2,5})))', '(?:(?:(?:\s{2,5})))'),
            array('(?:(?:(?:[ ]{2,5})))', '(?:(?:(?:[ ]{2,5})))'),
            array('(?:(?:(?:[\s]{2,5})))', '(?:(?:(?:[\s]{2,5})))'),
            array('(?:(?:(?:[[:space:]]{2,5})))', '(?:(?:(?:[[:space:]]{2,5})))'),
            array('((( ){2,5}))', '((( ){2,5}))'),
            array('(((\s){2,5}))', '(((\s){2,5}))'),
            array('((([ ]){2,5}))', '((([ ]){2,5}))'),
            array('((([\s]){2,5}))', '((([\s]){2,5}))'),
            array('((([[:space:]]){2,5}))', '((([[:space:]]){2,5}))'),
            array('(?:(?:(?: ){2,5}))', '(?:(?:(?: ){2,5}))'),
            array('(?:(?:(?:\s){2,5}))', '(?:(?:(?:\s){2,5}))'),
            array('(?:(?:(?:[ ]){2,5}))', '(?:(?:(?:[ ]){2,5}))'),
            array('(?:(?:(?:[\s]){2,5}))', '(?:(?:(?:[\s]){2,5}))'),
            array('(?:(?:(?:[[:space:]]){2,5}))', '(?:(?:(?:[[:space:]]){2,5}))'),
            array('((( )){2,5})', '((( )){2,5})'),
            array('(((\s)){2,5})', '(((\s)){2,5})'),
            array('((([ ])){2,5})', '((([ ])){2,5})'),
            array('((([\s])){2,5})', '((([\s])){2,5})'),
            array('((([[:space:]])){2,5})', '((([[:space:]])){2,5})'),
            array('(?:(?:(?: )){2,5})', '(?:(?:(?: )){2,5})'),
            array('(?:(?:(?:\s)){2,5})', '(?:(?:(?:\s)){2,5})'),
            array('(?:(?:(?:[ ])){2,5})', '(?:(?:(?:[ ])){2,5})'),
            array('(?:(?:(?:[\s])){2,5})', '(?:(?:(?:[\s])){2,5})'),
            array('(?:(?:(?:[[:space:]])){2,5})', '(?:(?:(?:[[:space:]])){2,5})'),
            array('((( ))){2,5}', '((( ))){2,5}'),
            array('(((\s))){2,5}', '(((\s))){2,5}'),
            array('((([ ]))){2,5}', '((([ ]))){2,5}'),
            array('((([\s]))){2,5}', '((([\s]))){2,5}'),
            array('((([[:space:]]))){2,5}', '((([[:space:]]))){2,5}'),
            array('(?:(?:(?: ))){2,5}', '(?:(?:(?: ))){2,5}'),
            array('(?:(?:(?:\s))){2,5}', '(?:(?:(?:\s))){2,5}'),
            array('(?:(?:(?:[ ]))){2,5}', '(?:(?:(?:[ ]))){2,5}'),
            array('(?:(?:(?:[\s]))){2,5}', '(?:(?:(?:[\s]))){2,5}'),
            array('(?:(?:(?:[[:space:]]))){2,5}', '(?:(?:(?:[[:space:]]))){2,5}'),


            array('a |b', 'a +|b'),
            array('a\s|b', 'a\s+|b'),
            array('a[ ]|b', 'a[ ]+|b'),
            array('a[\s]|b', 'a[\s]+|b'),
            array('a[\sa]|b', 'a[\sa]|b'),
            array('a[[:space:]]|b', 'a[[:space:]]+|b'),
            array('a a|b', 'a +a|b'),
            array('a\sa|b', 'a\s+a|b'),
            array('a[ ]a|b', 'a[ ]+a|b'),
            array('a[\s]a|b', 'a[\s]+a|b'),
            array('a[\sa]a|b', 'a[\sa]a|b'),
            array('a[[:space:]]a|b', 'a[[:space:]]+a|b'),
            array(' a|b', ' +a|b'),
            array('\sa|b', '\s+a|b'),
            array('[ ]a|b', '[ ]+a|b'),
            array('[\s]a|b', '[\s]+a|b'),
            array('[\sa]a|b', '[\sa]a|b'),
            array('[[:space:]]a|b', '[[:space:]]+a|b'),

            array(' |b', ' +|b'),
            array('\s|b', '\s+|b'),
            array('[ ]|b', '[ ]+|b'),
            array('[\s]|b', '[\s]+|b'),
            array('[[:space:]]|b', '[[:space:]]+|b'),
            array('( )|b', '( +)|b'),
            array('(\s)|b', '(\s+)|b'),
            array('([ ])|b', '([ ]+)|b'),
            array('([\s])|b', '([\s]+)|b'),
            array('([[:space:]])|b', '([[:space:]]+)|b'),
            array('(?: )|b', '(?: +)|b'),
            array('(?:\s)|b', '(?:\s+)|b'),
            array('(?:[ ])|b', '(?:[ ]+)|b'),
            array('(?:[\s])|b', '(?:[\s]+)|b'),
            array('(?:[[:space:]])|b', '(?:[[:space:]]+)|b'),
            array('((( )))|b', '((( +)))|b'),
            array('(((\s)))|b', '(((\s+)))|b'),
            array('((([ ])))|b', '((([ ]+)))|b'),
            array('((([\s])))|b', '((([\s]+)))|b'),
            array('((([[:space:]])))|b', '((([[:space:]]+)))|b'),
            array('(?:(?:(?: )))|b', '(?:(?:(?: +)))|b'),
            array('(?:(?:(?:\s)))|b', '(?:(?:(?:\s+)))|b'),
            array('(?:(?:(?:[ ])))|b', '(?:(?:(?:[ ]+)))|b'),
            array('(?:(?:(?:[\s])))|b', '(?:(?:(?:[\s]+)))|b'),
            array('(?:(?:(?:[[:space:]])))|b', '(?:(?:(?:[[:space:]]+)))|b'),


            array('(?:a |b)', '(?:a +|b)'),
            array('(?:a\s|b)', '(?:a\s+|b)'),
            array('(?:a[ ]|b)', '(?:a[ ]+|b)'),
            array('(?:a[\s]|b)', '(?:a[\s]+|b)'),
            array('(?:a[\sa]|b)', '(?:a[\sa]|b)'),
            array('(?:a[[:space:]]|b)', '(?:a[[:space:]]+|b)'),
            array('(?:a a|b)', '(?:a +a|b)'),
            array('(?:a\sa|b)', '(?:a\s+a|b)'),
            array('(?:a[ ]a|b)', '(?:a[ ]+a|b)'),
            array('(?:a[\s]a|b)', '(?:a[\s]+a|b)'),
            array('(?:a[\sa]a|b)', '(?:a[\sa]a|b)'),
            array('(?:a[[:space:]]a|b)', '(?:a[[:space:]]+a|b)'),
            array('(?: a|b)', '(?: +a|b)'),
            array('(?:\sa|b)', '(?:\s+a|b)'),
            array('(?:[ ]a|b)', '(?:[ ]+a|b)'),
            array('(?:[\s]a|b)', '(?:[\s]+a|b)'),
            array('(?:[\sa]a|b)', '(?:[\sa]a|b)'),
            array('(?:[[:space:]]a|b)', '(?:[[:space:]]+a|b)'),

            array('(?: |b)', '(?: +|b)'),
            array('(?:\s|b)', '(?:\s+|b)'),
            array('(?:[ ]|b)', '(?:[ ]+|b)'),
            array('(?:[\s]|b)', '(?:[\s]+|b)'),
            array('(?:[[:space:]]|b)', '(?:[[:space:]]+|b)'),
            array('(?:( )|b)', '(?:( +)|b)'),
            array('(?:(\s)|b)', '(?:(\s+)|b)'),
            array('(?:([ ])|b)', '(?:([ ]+)|b)'),
            array('(?:([\s])|b)', '(?:([\s]+)|b)'),
            array('(?:([[:space:]])|b)', '(?:([[:space:]]+)|b)'),
            array('(?:(?: )|b)', '(?:(?: +)|b)'),
            array('(?:(?:\s)|b)', '(?:(?:\s+)|b)'),
            array('(?:(?:[ ])|b)', '(?:(?:[ ]+)|b)'),
            array('(?:(?:[\s])|b)', '(?:(?:[\s]+)|b)'),
            array('(?:(?:[[:space:]])|b)', '(?:(?:[[:space:]]+)|b)'),
            array('(?:((( )))|b)', '(?:((( +)))|b)'),
            array('(?:(((\s)))|b)', '(?:(((\s+)))|b)'),
            array('(?:((([ ])))|b)', '(?:((([ ]+)))|b)'),
            array('(?:((([\s])))|b)', '(?:((([\s]+)))|b)'),
            array('(?:((([[:space:]])))|b)', '(?:((([[:space:]]+)))|b)'),
            array('(?:(?:(?:(?: )))|b)', '(?:(?:(?:(?: +)))|b)'),
            array('(?:(?:(?:(?:\s)))|b)', '(?:(?:(?:(?:\s+)))|b)'),
            array('(?:(?:(?:(?:[ ])))|b)', '(?:(?:(?:(?:[ ]+)))|b)'),
            array('(?:(?:(?:(?:[\s])))|b)', '(?:(?:(?:(?:[\s]+)))|b)'),
            array('(?:(?:(?:(?:[[:space:]])))|b)', '(?:(?:(?:(?:[[:space:]]+)))|b)'),


            array('(?:a )', '(?:a +)'),
            array('(?:a\s)', '(?:a\s+)'),
            array('(?:a[ ])', '(?:a[ ]+)'),
            array('(?:a[\s])', '(?:a[\s]+)'),
            array('(?:a[\sa])', '(?:a[\sa])'),
            array('(?:a[[:space:]])', '(?:a[[:space:]]+)'),
            array('(?:a a)', '(?:a +a)'),
            array('(?:a\sa)', '(?:a\s+a)'),
            array('(?:a[ ]a)', '(?:a[ ]+a)'),
            array('(?:a[\s]a)', '(?:a[\s]+a)'),
            array('(?:a[\sa]a)', '(?:a[\sa]a)'),
            array('(?:a[[:space:]]a)', '(?:a[[:space:]]+a)'),
            array('(?: a)', '(?: +a)'),
            array('(?:\sa)', '(?:\s+a)'),
            array('(?:[ ]a)', '(?:[ ]+a)'),
            array('(?:[\s]a)', '(?:[\s]+a)'),
            array('(?:[\sa]a)', '(?:[\sa]a)'),
            array('(?:[[:space:]]a)', '(?:[[:space:]]+a)'),

            array('(?: )', '(?: +)'),
            array('(?:\s)', '(?:\s+)'),
            array('(?:[ ])', '(?:[ ]+)'),
            array('(?:[\s])', '(?:[\s]+)'),
            array('(?:[[:space:]])', '(?:[[:space:]]+)'),
            array('(?:( ))', '(?:( +))'),
            array('(?:(\s))', '(?:(\s+))'),
            array('(?:([ ]))', '(?:([ ]+))'),
            array('(?:([\s]))', '(?:([\s]+))'),
            array('(?:([[:space:]]))', '(?:([[:space:]]+))'),
            array('(?:(?: ))', '(?:(?: +))'),
            array('(?:(?:\s))', '(?:(?:\s+))'),
            array('(?:(?:[ ]))', '(?:(?:[ ]+))'),
            array('(?:(?:[\s]))', '(?:(?:[\s]+))'),
            array('(?:(?:[[:space:]]))', '(?:(?:[[:space:]]+))'),
            array('(?:((( ))))', '(?:((( +))))'),
            array('(?:(((\s))))', '(?:(((\s+))))'),
            array('(?:((([ ]))))', '(?:((([ ]+))))'),
            array('(?:((([\s]))))', '(?:((([\s]+))))'),
            array('(?:((([[:space:]]))))', '(?:((([[:space:]]+))))'),
            array('(?:(?:(?:(?: ))))', '(?:(?:(?:(?: +))))'),
            array('(?:(?:(?:(?:\s))))', '(?:(?:(?:(?:\s+))))'),
            array('(?:(?:(?:(?:[ ]))))', '(?:(?:(?:(?:[ ]+))))'),
            array('(?:(?:(?:(?:[\s]))))', '(?:(?:(?:(?:[\s]+))))'),
            array('(?:(?:(?:(?:[[:space:]]))))', '(?:(?:(?:(?:[[:space:]]+))))'),


            array('[  ]', '[  ]+'),
            array('[\s\s]', '[\s\s]+'),
            array('[[:space:][:space:]]', '[[:space:][:space:]]+'),
            array('[ \s]', '[ \s]+'),
            array('[ [:space:]]', '[ [:space:]]+'),
            array('[\s ]', '[\s ]+'),
            array('[[:space:] ]', '[[:space:] ]+'),
            array('[\s[:space:]]', '[\s[:space:]]+'),
            array('[[:space:]\s]', '[[:space:]\s]+'),

            array('[   ]', '[   ]+'),
            array('[\s\s\s]', '[\s\s\s]+'),
            array('[[:space:][:space:][:space:]]', '[[:space:][:space:][:space:]]+'),
            array('[\s  ]', '[\s  ]+'),
            array('[ \s ]', '[ \s ]+'),
            array('[  \s]', '[  \s]+'),
            array('[\s\s ]', '[\s\s ]+'),
            array('[ \s\s]', '[ \s\s]+'),
            array('[\s \s]', '[\s \s]+'),
            array('[[:space:]  ]', '[[:space:]  ]+'),
            array('[ [:space:] ]', '[ [:space:] ]+'),
            array('[  [:space:]]', '[  [:space:]]+'),
            array('[[:space:][:space:] ]', '[[:space:][:space:] ]+'),
            array('[ [:space:][:space:]]', '[ [:space:][:space:]]+'),
            array('[[:space:] [:space:]]', '[[:space:] [:space:]]+'),
            array('[\s[:space:][:space:]]', '[\s[:space:][:space:]]+'),
            array('[[:space:]\s[:space:]]', '[[:space:]\s[:space:]]+'),
            array('[[:space:][:space:]\s]', '[[:space:][:space:]\s]+'),
            array('[\s\s[:space:]]', '[\s\s[:space:]]+'),
            array('[[:space:]\s\s]', '[[:space:]\s\s]+'),
            array('[\s[:space:]\s]', '[\s[:space:]\s]+'),
        );
    }

    protected function get_test_space_charset_with_finit_quant_trivial() {
        return array(
            array('a ', 'a '),

            array('a ?', 'a *'),
            array('a\s?', 'a\s*'),
            array('a[ ]?', 'a[ ]*'),
            array('a[\s]?', 'a[\s]*'),
            array('a[[:space:]]?', 'a[[:space:]]*'),
            array('a ?a', 'a *a'),
            array('a\s?a', 'a\s*a'),
            array('a[ ]?a', 'a[ ]*a'),
            array('a[\s]?a', 'a[\s]*a'),
            array('a[[:space:]]?a', 'a[[:space:]]*a'),
            array(' ?a', ' *a'),
            array('\s?a', '\s*a'),
            array('[ ]?a', '[ ]*a'),
            array('[\s]?a', '[\s]*a'),
            array('[[:space:]]?a', '[[:space:]]*a'),

            array('a {0,1}', 'a *'),
            array('a\s{0,1}', 'a\s*'),
            array('a[ ]{0,1}', 'a[ ]*'),
            array('a[\s]{0,1}', 'a[\s]*'),
            array('a[[:space:]]{0,1}', 'a[[:space:]]*'),
            array('a {0,1}a', 'a *a'),
            array('a\s{0,1}a', 'a\s*a'),
            array('a[ ]{0,1}a', 'a[ ]*a'),
            array('a[\s]{0,1}a', 'a[\s]*a'),
            array('a[[:space:]]{0,1}a', 'a[[:space:]]*a'),
            array(' {0,1}a', ' *a'),
            array('\s{0,1}a', '\s*a'),
            array('[ ]{0,1}a', '[ ]*a'),
            array('[\s]{0,1}a', '[\s]*a'),
            array('[[:space:]]{0,1}a', '[[:space:]]*a'),


            array('a ?|b', 'a *|b'),
            array('a\s?|b', 'a\s*|b'),
            array('a[ ]?|b', 'a[ ]*|b'),
            array('a[\s]?|b', 'a[\s]*|b'),
            array('a[[:space:]]?|b', 'a[[:space:]]*|b'),
            array('a ?a|b', 'a *a|b'),
            array('a\s?a|b', 'a\s*a|b'),
            array('a[ ]?a|b', 'a[ ]*a|b'),
            array('a[\s]?a|b', 'a[\s]*a|b'),
            array('a[[:space:]]?a|b', 'a[[:space:]]*a|b'),
            array(' ?a|b', ' *a|b'),
            array('\s?a|b', '\s*a|b'),
            array('[ ]?a|b', '[ ]*a|b'),
            array('[\s]?a|b', '[\s]*a|b'),
            array('[[:space:]]?a|b', '[[:space:]]*a|b'),

            array('a {0,1}|b', 'a *|b'),
            array('a\s{0,1}|b', 'a\s*|b'),
            array('a[ ]{0,1}|b', 'a[ ]*|b'),
            array('a[\s]{0,1}|b', 'a[\s]*|b'),
            array('a[[:space:]]{0,1}|b', 'a[[:space:]]*|b'),
            array('a {0,1}a|b', 'a *a|b'),
            array('a\s{0,1}a|b', 'a\s*a|b'),
            array('a[ ]{0,1}a|b', 'a[ ]*a|b'),
            array('a[\s]{0,1}a|b', 'a[\s]*a|b'),
            array('a[[:space:]]{0,1}a|b', 'a[[:space:]]*a|b'),
            array(' {0,1}a|b', ' *a|b'),
            array('\s{0,1}a|b', '\s*a|b'),
            array('[ ]{0,1}a|b', '[ ]*a|b'),
            array('[\s]{0,1}a|b', '[\s]*a|b'),
            array('[[:space:]]{0,1}a|b', '[[:space:]]*a|b'),


            array('(?:a ?)', '(?:a *)'),
            array('(?:a\s?)', '(?:a\s*)'),
            array('(?:a[ ]?)', '(?:a[ ]*)'),
            array('(?:a[\s]?)', '(?:a[\s]*)'),
            array('(?:a[[:space:]]?)', '(?:a[[:space:]]*)'),
            array('(?:a ?a)', '(?:a *a)'),
            array('(?:a\s?a)', '(?:a\s*a)'),
            array('(?:a[ ]?a)', '(?:a[ ]*a)'),
            array('(?:a[\s]?a)', '(?:a[\s]*a)'),
            array('(?:a[[:space:]]?a)', '(?:a[[:space:]]*a)'),
            array('(?: ?a)', '(?: *a)'),
            array('(?:\s?a)', '(?:\s*a)'),
            array('(?:[ ]?a)', '(?:[ ]*a)'),
            array('(?:[\s]?a)', '(?:[\s]*a)'),
            array('(?:[[:space:]]?a)', '(?:[[:space:]]*a)'),

            array('(?:a {0,1})', '(?:a *)'),
            array('(?:a\s{0,1})', '(?:a\s*)'),
            array('(?:a[ ]{0,1})', '(?:a[ ]*)'),
            array('(?:a[\s]{0,1})', '(?:a[\s]*)'),
            array('(?:a[[:space:]]{0,1})', '(?:a[[:space:]]*)'),
            array('(?:a {0,1}a)', '(?:a *a)'),
            array('(?:a\s{0,1}a)', '(?:a\s*a)'),
            array('(?:a[ ]{0,1}a)', '(?:a[ ]*a)'),
            array('(?:a[\s]{0,1}a)', '(?:a[\s]*a)'),
            array('(?:a[[:space:]]{0,1}a)', '(?:a[[:space:]]*a)'),
            array('(?: {0,1}a)', '(?: *a)'),
            array('(?:\s{0,1}a)', '(?:\s*a)'),
            array('(?:[ ]{0,1}a)', '(?:[ ]*a)'),
            array('(?:[\s]{0,1}a)', '(?:[\s]*a)'),
            array('(?:[[:space:]]{0,1}a)', '(?:[[:space:]]*a)'),


            array('(?:a ?|b)', '(?:a *|b)'),
            array('(?:a\s?|b)', '(?:a\s*|b)'),
            array('(?:a[ ]?|b)', '(?:a[ ]*|b)'),
            array('(?:a[\s]?|b)', '(?:a[\s]*|b)'),
            array('(?:a[[:space:]]?|b)', '(?:a[[:space:]]*|b)'),
            array('(?:a ?a|b)', '(?:a *a|b)'),
            array('(?:a\s?a|b)', '(?:a\s*a|b)'),
            array('(?:a[ ]?a|b)', '(?:a[ ]*a|b)'),
            array('(?:a[\s]?a|b)', '(?:a[\s]*a|b)'),
            array('(?:a[[:space:]]?a|b)', '(?:a[[:space:]]*a|b)'),
            array('(?: ?a|b)', '(?: *a|b)'),
            array('(?:\s?a|b)', '(?:\s*a|b)'),
            array('(?:[ ]?a|b)', '(?:[ ]*a|b)'),
            array('(?:[\s]?a|b)', '(?:[\s]*a|b)'),
            array('(?:[[:space:]]?a|b)', '(?:[[:space:]]*a|b)'),

            array('(?:a {0,1}|b)', '(?:a *|b)'),
            array('(?:a\s{0,1}|b)', '(?:a\s*|b)'),
            array('(?:a[ ]{0,1}|b)', '(?:a[ ]*|b)'),
            array('(?:a[\s]{0,1}|b)', '(?:a[\s]*|b)'),
            array('(?:a[[:space:]]{0,1}|b)', '(?:a[[:space:]]*|b)'),
            array('(?:a {0,1}a|b)', '(?:a *a|b)'),
            array('(?:a\s{0,1}a|b)', '(?:a\s*a|b)'),
            array('(?:a[ ]{0,1}a|b)', '(?:a[ ]*a|b)'),
            array('(?:a[\s]{0,1}a|b)', '(?:a[\s]*a|b)'),
            array('(?:a[[:space:]]{0,1}a|b)', '(?:a[[:space:]]*a|b)'),
            array('(?: {0,1}a|b)', '(?: *a|b)'),
            array('(?:\s{0,1}a|b)', '(?:\s*a|b)'),
            array('(?:[ ]{0,1}a|b)', '(?:[ ]*a|b)'),
            array('(?:[\s]{0,1}a|b)', '(?:[\s]*a|b)'),
            array('(?:[[:space:]]{0,1}a|b)', '(?:[[:space:]]*a|b)'),


            array(' *', ' *'),
            array('\s*', '\s*'),
            array('[ ]*', '[ ]*'),
            array('[\s]*', '[\s]*'),
            array('[[:space:]]*', '[[:space:]]*'),
            array('( *)', '( *)'),
            array('(\s*)', '(\s*)'),
            array('([ ]*)', '([ ]*)'),
            array('([\s]*)', '([\s]*)'),
            array('([[:space:]]*)', '([[:space:]]*)'),
            array('(?: *)', '(?: *)'),
            array('(?:\s*)', '(?:\s*)'),
            array('(?:[ ]*)', '(?:[ ]*)'),
            array('(?:[\s]*)', '(?:[\s]*)'),
            array('(?:[[:space:]]*)', '(?:[[:space:]]*)'),
            array('((( *)))', '((( *)))'),
            array('(((\s*)))', '(((\s*)))'),
            array('((([ ]*)))', '((([ ]*)))'),
            array('((([\s]*)))', '((([\s]*)))'),
            array('((([[:space:]]*)))', '((([[:space:]]*)))'),
            array('(?:(?:(?: *)))', '(?:(?:(?: *)))'),
            array('(?:(?:(?:\s*)))', '(?:(?:(?:\s*)))'),
            array('(?:(?:(?:[ ]*)))', '(?:(?:(?:[ ]*)))'),
            array('(?:(?:(?:[\s]*)))', '(?:(?:(?:[\s]*)))'),
            array('(?:(?:(?:[[:space:]]*)))', '(?:(?:(?:[[:space:]]*)))'),
            array('((( )*))', '((( )*))'),
            array('(((\s)*))', '(((\s)*))'),
            array('((([ ])*))', '((([ ])*))'),
            array('((([\s])*))', '((([\s])*))'),
            array('((([[:space:]])*))', '((([[:space:]])*))'),
            array('(?:(?:(?: )*))', '(?:(?:(?: )*))'),
            array('(?:(?:(?:\s)*))', '(?:(?:(?:\s)*))'),
            array('(?:(?:(?:[ ])*))', '(?:(?:(?:[ ])*))'),
            array('(?:(?:(?:[\s])*))', '(?:(?:(?:[\s])*))'),
            array('(?:(?:(?:[[:space:]])*))', '(?:(?:(?:[[:space:]])*))'),
            array('((( ))*)', '((( ))*)'),
            array('(((\s))*)', '(((\s))*)'),
            array('((([ ]))*)', '((([ ]))*)'),
            array('((([\s]))*)', '((([\s]))*)'),
            array('((([[:space:]]))*)', '((([[:space:]]))*)'),
            array('(?:(?:(?: ))*)', '(?:(?:(?: ))*)'),
            array('(?:(?:(?:\s))*)', '(?:(?:(?:\s))*)'),
            array('(?:(?:(?:[ ]))*)', '(?:(?:(?:[ ]))*)'),
            array('(?:(?:(?:[\s]))*)', '(?:(?:(?:[\s]))*)'),
            array('(?:(?:(?:[[:space:]]))*)', '(?:(?:(?:[[:space:]]))*)'),
            array('((( )))*', '((( )))*'),
            array('(((\s)))*', '(((\s)))*'),
            array('((([ ])))*', '((([ ])))*'),
            array('((([\s])))*', '((([\s])))*'),
            array('((([[:space:]])))*', '((([[:space:]])))*'),
            array('(?:(?:(?: )))*', '(?:(?:(?: )))*'),
            array('(?:(?:(?:\s)))*', '(?:(?:(?:\s)))*'),
            array('(?:(?:(?:[ ])))*', '(?:(?:(?:[ ])))*'),
            array('(?:(?:(?:[\s])))*', '(?:(?:(?:[\s])))*'),
            array('(?:(?:(?:[[:space:]])))*', '(?:(?:(?:[[:space:]])))*'),

            array(' +', ' +'),
            array('\s+', '\s+'),
            array('[ ]+', '[ ]+'),
            array('[\s]+', '[\s]+'),
            array('[[:space:]]+', '[[:space:]]+'),
            array('( +)', '( +)'),
            array('(\s+)', '(\s+)'),
            array('([ ]+)', '([ ]+)'),
            array('([\s]+)', '([\s]+)'),
            array('([[:space:]]+)', '([[:space:]]+)'),
            array('(?: +)', '(?: +)'),
            array('(?:\s+)', '(?:\s+)'),
            array('(?:[ ]+)', '(?:[ ]+)'),
            array('(?:[\s]+)', '(?:[\s]+)'),
            array('(?:[[:space:]]+)', '(?:[[:space:]]+)'),
            array('((( +)))', '((( +)))'),
            array('(((\s+)))', '(((\s+)))'),
            array('((([ ]+)))', '((([ ]+)))'),
            array('((([\s]+)))', '((([\s]+)))'),
            array('((([[:space:]]+)))', '((([[:space:]]+)))'),
            array('(?:(?:(?: +)))', '(?:(?:(?: +)))'),
            array('(?:(?:(?:\s+)))', '(?:(?:(?:\s+)))'),
            array('(?:(?:(?:[ ]+)))', '(?:(?:(?:[ ]+)))'),
            array('(?:(?:(?:[\s]+)))', '(?:(?:(?:[\s]+)))'),
            array('(?:(?:(?:[[:space:]]+)))', '(?:(?:(?:[[:space:]]+)))'),
            array('((( )+))', '((( )+))'),
            array('(((\s)+))', '(((\s)+))'),
            array('((([ ])+))', '((([ ])+))'),
            array('((([\s])+))', '((([\s])+))'),
            array('((([[:space:]])+))', '((([[:space:]])+))'),
            array('(?:(?:(?: )+))', '(?:(?:(?: )+))'),
            array('(?:(?:(?:\s)+))', '(?:(?:(?:\s)+))'),
            array('(?:(?:(?:[ ])+))', '(?:(?:(?:[ ])+))'),
            array('(?:(?:(?:[\s])+))', '(?:(?:(?:[\s])+))'),
            array('(?:(?:(?:[[:space:]])+))', '(?:(?:(?:[[:space:]])+))'),
            array('((( ))+)', '((( ))+)'),
            array('(((\s))+)', '(((\s))+)'),
            array('((([ ]))+)', '((([ ]))+)'),
            array('((([\s]))+)', '((([\s]))+)'),
            array('((([[:space:]]))+)', '((([[:space:]]))+)'),
            array('(?:(?:(?: ))+)', '(?:(?:(?: ))+)'),
            array('(?:(?:(?:\s))+)', '(?:(?:(?:\s))+)'),
            array('(?:(?:(?:[ ]))+)', '(?:(?:(?:[ ]))+)'),
            array('(?:(?:(?:[\s]))+)', '(?:(?:(?:[\s]))+)'),
            array('(?:(?:(?:[[:space:]]))+)', '(?:(?:(?:[[:space:]]))+)'),
            array('((( )))+', '((( )))+'),
            array('(((\s)))+', '(((\s)))+'),
            array('((([ ])))+', '((([ ])))+'),
            array('((([\s])))+', '((([\s])))+'),
            array('((([[:space:]])))+', '((([[:space:]])))+'),
            array('(?:(?:(?: )))+', '(?:(?:(?: )))+'),
            array('(?:(?:(?:\s)))+', '(?:(?:(?:\s)))+'),
            array('(?:(?:(?:[ ])))+', '(?:(?:(?:[ ])))+'),
            array('(?:(?:(?:[\s])))+', '(?:(?:(?:[\s])))+'),
            array('(?:(?:(?:[[:space:]])))+', '(?:(?:(?:[[:space:]])))+'),

            array(' ?', ' *'),
            array('\s?', '\s*'),
            array('[ ]?', '[ ]*'),
            array('[\s]?', '[\s]*'),
            array('[[:space:]]?', '[[:space:]]*'),
            array('( ?)', '( *)'),
            array('(\s?)', '(\s*)'),
            array('([ ]?)', '([ ]*)'),
            array('([\s]?)', '([\s]*)'),
            array('([[:space:]]?)', '([[:space:]]*)'),
            array('(?: ?)', '(?: *)'),
            array('(?:\s?)', '(?:\s*)'),
            array('(?:[ ]?)', '(?:[ ]*)'),
            array('(?:[\s]?)', '(?:[\s]*)'),
            array('(?:[[:space:]]?)', '(?:[[:space:]]*)'),
            array('((( ?)))', '((( *)))'),
            array('(((\s?)))', '(((\s*)))'),
            array('((([ ]?)))', '((([ ]*)))'),
            array('((([\s]?)))', '((([\s]*)))'),
            array('((([[:space:]]?)))', '((([[:space:]]*)))'),
            array('(?:(?:(?: ?)))', '(?:(?:(?: *)))'),
            array('(?:(?:(?:\s?)))', '(?:(?:(?:\s*)))'),
            array('(?:(?:(?:[ ]?)))', '(?:(?:(?:[ ]*)))'),
            array('(?:(?:(?:[\s]?)))', '(?:(?:(?:[\s]*)))'),
            array('(?:(?:(?:[[:space:]]?)))', '(?:(?:(?:[[:space:]]*)))'),
            array('((( )?))', '((( )*))'),
            array('(((\s)?))', '(((\s)*))'),
            array('((([ ])?))', '((([ ])*))'),
            array('((([\s])?))', '((([\s])*))'),
            array('((([[:space:]])?))', '((([[:space:]])*))'),
            array('(?:(?:(?: )?))', '(?:(?:(?: )*))'),
            array('(?:(?:(?:\s)?))', '(?:(?:(?:\s)*))'),
            array('(?:(?:(?:[ ])?))', '(?:(?:(?:[ ])*))'),
            array('(?:(?:(?:[\s])?))', '(?:(?:(?:[\s])*))'),
            array('(?:(?:(?:[[:space:]])?))', '(?:(?:(?:[[:space:]])*))'),
            array('((( ))?)', '((( ))*)'),
            array('(((\s))?)', '(((\s))*)'),
            array('((([ ]))?)', '((([ ]))*)'),
            array('((([\s]))?)', '((([\s]))*)'),
            array('((([[:space:]]))?)', '((([[:space:]]))*)'),
            array('(?:(?:(?: ))?)', '(?:(?:(?: ))*)'),
            array('(?:(?:(?:\s))?)', '(?:(?:(?:\s))*)'),
            array('(?:(?:(?:[ ]))?)', '(?:(?:(?:[ ]))*)'),
            array('(?:(?:(?:[\s]))?)', '(?:(?:(?:[\s]))*)'),
            array('(?:(?:(?:[[:space:]]))?)', '(?:(?:(?:[[:space:]]))*)'),
            array('((( )))?', '((( )))*'),
            array('(((\s)))?', '(((\s)))*'),
            array('((([ ]?)))?', '((([ ]*)))?'),
            array('((([\s])))?', '((([\s])))*'),
            array('((([[:space:]])))?', '((([[:space:]])))*'),
            array('(?:(?:(?: )))?', '(?:(?:(?: )))*'),
            array('(?:(?:(?:\s)))?', '(?:(?:(?:\s)))*'),
            array('(?:(?:(?:[ ])))?', '(?:(?:(?:[ ])))*'),
            array('(?:(?:(?:[\s])))?', '(?:(?:(?:[\s])))*'),
            array('(?:(?:(?:[[:space:]])))?', '(?:(?:(?:[[:space:]])))*'),

            array(' {2,5}', ' {2,5}'),
            array('\s{2,5}', '\s{2,5}'),
            array('[ ]{2,5}', '[ ]{2,5}'),
            array('[\s]{2,5}', '[\s]{2,5}'),
            array('[[:space:]]{2,5}', '[[:space:]]{2,5}'),
            array('( {2,5})', '( {2,5})'),
            array('(\s{2,5})', '(\s{2,5})'),
            array('([ ]{2,5})', '([ ]{2,5})'),
            array('([\s]{2,5})', '([\s]{2,5})'),
            array('([[:space:]]{2,5})', '([[:space:]]{2,5})'),
            array('(?: {2,5})', '(?: {2,5})'),
            array('(?:\s{2,5})', '(?:\s{2,5})'),
            array('(?:[ ]{2,5})', '(?:[ ]{2,5})'),
            array('(?:[\s]{2,5})', '(?:[\s]{2,5})'),
            array('(?:[[:space:]]{2,5})', '(?:[[:space:]]{2,5})'),
            array('((( {2,5})))', '((( {2,5})))'),
            array('(((\s{2,5})))', '(((\s{2,5})))'),
            array('((([ ]{2,5})))', '((([ ]{2,5})))'),
            array('((([\s]{2,5})))', '((([\s]{2,5})))'),
            array('((([[:space:]]{2,5})))', '((([[:space:]]{2,5})))'),
            array('(?:(?:(?: {2,5})))', '(?:(?:(?: {2,5})))'),
            array('(?:(?:(?:\s{2,5})))', '(?:(?:(?:\s{2,5})))'),
            array('(?:(?:(?:[ ]{2,5})))', '(?:(?:(?:[ ]{2,5})))'),
            array('(?:(?:(?:[\s]{2,5})))', '(?:(?:(?:[\s]{2,5})))'),
            array('(?:(?:(?:[[:space:]]{2,5})))', '(?:(?:(?:[[:space:]]{2,5})))'),
            array('((( ){2,5}))', '((( ){2,5}))'),
            array('(((\s){2,5}))', '(((\s){2,5}))'),
            array('((([ ]){2,5}))', '((([ ]){2,5}))'),
            array('((([\s]){2,5}))', '((([\s]){2,5}))'),
            array('((([[:space:]]){2,5}))', '((([[:space:]]){2,5}))'),
            array('(?:(?:(?: ){2,5}))', '(?:(?:(?: ){2,5}))'),
            array('(?:(?:(?:\s){2,5}))', '(?:(?:(?:\s){2,5}))'),
            array('(?:(?:(?:[ ]){2,5}))', '(?:(?:(?:[ ]){2,5}))'),
            array('(?:(?:(?:[\s]){2,5}))', '(?:(?:(?:[\s]){2,5}))'),
            array('(?:(?:(?:[[:space:]]){2,5}))', '(?:(?:(?:[[:space:]]){2,5}))'),
            array('((( )){2,5})', '((( )){2,5})'),
            array('(((\s)){2,5})', '(((\s)){2,5})'),
            array('((([ ])){2,5})', '((([ ])){2,5})'),
            array('((([\s])){2,5})', '((([\s])){2,5})'),
            array('((([[:space:]])){2,5})', '((([[:space:]])){2,5})'),
            array('(?:(?:(?: )){2,5})', '(?:(?:(?: )){2,5})'),
            array('(?:(?:(?:\s)){2,5})', '(?:(?:(?:\s)){2,5})'),
            array('(?:(?:(?:[ ])){2,5})', '(?:(?:(?:[ ])){2,5})'),
            array('(?:(?:(?:[\s])){2,5})', '(?:(?:(?:[\s])){2,5})'),
            array('(?:(?:(?:[[:space:]])){2,5})', '(?:(?:(?:[[:space:]])){2,5})'),
            array('((( ))){2,5}', '((( ))){2,5}'),
            array('(((\s))){2,5}', '(((\s))){2,5}'),
            array('((([ ]))){2,5}', '((([ ]))){2,5}'),
            array('((([\s]))){2,5}', '((([\s]))){2,5}'),
            array('((([[:space:]]))){2,5}', '((([[:space:]]))){2,5}'),
            array('(?:(?:(?: ))){2,5}', '(?:(?:(?: ))){2,5}'),
            array('(?:(?:(?:\s))){2,5}', '(?:(?:(?:\s))){2,5}'),
            array('(?:(?:(?:[ ]))){2,5}', '(?:(?:(?:[ ]))){2,5}'),
            array('(?:(?:(?:[\s]))){2,5}', '(?:(?:(?:[\s]))){2,5}'),
            array('(?:(?:(?:[[:space:]]))){2,5}', '(?:(?:(?:[[:space:]]))){2,5}'),

            array('[  ]?', '[  ]*'),
            array('[\s\s]?', '[\s\s]*'),
            array('[[:space:][:space:]]?', '[[:space:][:space:]]*'),
            array('[ \s]?', '[ \s]*'),
            array('[ [:space:]]?', '[ [:space:]]*'),
            array('[\s ]?', '[\s ]*'),
            array('[[:space:] ]?', '[[:space:] ]*'),
            array('[\s[:space:]]?', '[\s[:space:]]*'),
            array('[[:space:]\s]?', '[[:space:]\s]*'),

            array('[   ]?', '[   ]*'),
            array('[\s\s\s]?', '[\s\s\s]*'),
            array('[[:space:][:space:][:space:]]?', '[[:space:][:space:][:space:]]*'),
            array('[\s  ]?', '[\s  ]*'),
            array('[ \s ]?', '[ \s ]*'),
            array('[  \s]?', '[  \s]*'),
            array('[\s\s ]?', '[\s\s ]*'),
            array('[ \s\s]?', '[ \s\s]*'),
            array('[\s \s]?', '[\s \s]*'),
            array('[[:space:]  ]?', '[[:space:]  ]*'),
            array('[ [:space:] ]?', '[ [:space:] ]*'),
            array('[  [:space:]]?', '[  [:space:]]*'),
            array('[[:space:][:space:] ]?', '[[:space:][:space:] ]*'),
            array('[ [:space:][:space:]]?', '[ [:space:][:space:]]*'),
            array('[[:space:] [:space:]]?', '[[:space:] [:space:]]*'),
            array('[\s[:space:][:space:]]?', '[\s[:space:][:space:]]*'),
            array('[[:space:]\s[:space:]]?', '[[:space:]\s[:space:]]*'),
            array('[[:space:][:space:]\s]?', '[[:space:][:space:]\s]*'),
            array('[\s\s[:space:]]?', '[\s\s[:space:]]*'),
            array('[[:space:]\s\s]?', '[[:space:]\s\s]*'),
            array('[\s[:space:]\s]?', '[\s[:space:]\s]*'),
        );
    }

    protected function get_test_consecutive_quant_nodes_trivial() {
        return array(
            array('a?', 'a?'),

            array('(?:a{0,0}){0,0}', '(?:a{0})'),
            array('(?:a{0,0}){0}', '(?:a{0})'),
            array('(?:a{0,0}){0,1}', '(?:a{0})'),
            array('(?:a{0,0}){0,2}', '(?:a{0})'),
            array('(?:a{0,0}){0,}', '(?:a{0})'),
            array('(?:a{0,0}){1,1}', '(?:a{0})'),
            array('(?:a{0,0}){1}', '(?:a{0})'),
            array('(?:a{0,0}){1,2}', '(?:a{0})'),
            array('(?:a{0,0}){1,}', '(?:a{0})'),
            array('(?:a{0,0}){2,2}', '(?:a{0})'),
            array('(?:a{0,0}){2}', '(?:a{0})'),
            array('(?:a{0,0}){2,3}', '(?:a{0})'),
            array('(?:a{0,0}){2,}', '(?:a{0})'),

            array('(?:a{0}){0,0}', '(?:a{0})'),
            array('(?:a{0}){0}', '(?:a{0})'),
            array('(?:a{0}){0,1}', '(?:a{0})'),
            array('(?:a{0}){0,2}', '(?:a{0})'),
            array('(?:a{0}){0,}', '(?:a{0})'),
            array('(?:a{0}){1,1}', '(?:a{0})'),
            array('(?:a{0}){1}', '(?:a{0})'),
            array('(?:a{0}){1,2}', '(?:a{0})'),
            array('(?:a{0}){1,}', '(?:a{0})'),
            array('(?:a{0}){2,2}', '(?:a{0})'),
            array('(?:a{0}){2}', '(?:a{0})'),
            array('(?:a{0}){2,3}', '(?:a{0})'),
            array('(?:a{0}){2,}', '(?:a{0})'),

            array('(?:a{0,1}){0,0}', '(?:a{0})'),
            array('(?:a{0,1}){0}', '(?:a{0})'),
            array('(?:a{0,1}){0,1}', '(?:a?)'),
            array('(?:a{0,1}){0,2}', '(?:a{0,2})'),
            array('(?:a{0,1}){0,}', '(?:a*)'),
            array('(?:a{0,1}){1,1}', '(?:a?)'),
            array('(?:a{0,1}){1}', '(?:a?)'),
            array('(?:a{0,1}){1,2}', '(?:a{0,2})'),
            array('(?:a{0,1}){1,}', '(?:a*)'),
            array('(?:a{0,1}){2,2}', '(?:a{0,2})'),
            array('(?:a{0,1}){2}', '(?:a{0,2})'),
            array('(?:a{0,1}){2,3}', '(?:a{0,3})'),
            array('(?:a{0,1}){2,}', '(?:a*)'),

            array('(?:a{0,2}){0,0}', '(?:a{0})'),
            array('(?:a{0,2}){0}', '(?:a{0})'),
            array('(?:a{0,2}){0,1}', '(?:a{0,2})'),
            array('(?:a{0,2}){0,2}', '(?:a{0,4})'),
            array('(?:a{0,2}){0,}', '(?:a*)'),
            array('(?:a{0,2}){1,1}', '(?:a{0,2})'),
            array('(?:a{0,2}){1}', '(?:a{0,2})'),
            array('(?:a{0,2}){1,2}', '(?:a{0,4})'),
            array('(?:a{0,2}){1,}', '(?:a*)'),
            array('(?:a{0,2}){2,2}', '(?:a{0,4})'),
            array('(?:a{0,2}){2}', '(?:a{0,4})'),
            array('(?:a{0,2}){2,3}', '(?:a{0,6})'),
            array('(?:a{0,2}){2,}', '(?:a*)'),

            array('(?:a{0,}){0,0}', '(?:a{0})'),
            array('(?:a{0,}){0}', '(?:a{0})'),
            array('(?:a{0,}){0,1}', '(?:a*)'),
            array('(?:a{0,}){0,2}', '(?:a*)'),
            array('(?:a{0,}){0,}', '(?:a*)'),
            array('(?:a{0,}){1,1}', '(?:a*)'),
            array('(?:a{0,}){1}', '(?:a*)'),
            array('(?:a{0,}){1,2}', '(?:a*)'),
            array('(?:a{0,}){1,}', '(?:a*)'),
            array('(?:a{0,}){2,2}', '(?:a*)'),
            array('(?:a{0,}){2}', '(?:a*)'),
            array('(?:a{0,}){2,3}', '(?:a*)'),
            array('(?:a{0,}){2,}', '(?:a*)'),

            array('(?:a{1,1}){0,0}', '(?:a{0})'),
            array('(?:a{1,1}){0}', '(?:a{0})'),
            array('(?:a{1,1}){0,1}', '(?:a?)'),
            array('(?:a{1,1}){0,2}', '(?:a{0,2})'),
            array('(?:a{1,1}){0,}', '(?:a*)'),
            array('(?:a{1,1}){1,1}', '(?:a{1})'),
            array('(?:a{1,1}){1}', '(?:a{1})'),
            array('(?:a{1,1}){1,2}', '(?:a{1,2})'),
            array('(?:a{1,1}){1,}', '(?:a+)'),
            array('(?:a{1,1}){2,2}', '(?:a{2})'),
            array('(?:a{1,1}){2}', '(?:a{2})'),
            array('(?:a{1,1}){2,3}', '(?:a{2,3})'),
            array('(?:a{1,1}){2,}', '(?:a{2,})'),

            array('(?:a{1}){0,0}', '(?:a{0})'),
            array('(?:a{1}){0}', '(?:a{0})'),
            array('(?:a{1}){0,1}', '(?:a?)'),
            array('(?:a{1}){0,2}', '(?:a{0,2})'),
            array('(?:a{1}){0,}', '(?:a*)'),
            array('(?:a{1}){1,1}', '(?:a{1})'),
            array('(?:a{1}){1}', '(?:a{1})'),
            array('(?:a{1}){1,2}', '(?:a{1,2})'),
            array('(?:a{1}){1,}', '(?:a+)'),
            array('(?:a{1}){2,2}', '(?:a{2})'),
            array('(?:a{1}){2}', '(?:a{2})'),
            array('(?:a{1}){2,3}', '(?:a{2,3})'),
            array('(?:a{1}){2,}', '(?:a{2,})'),

            array('(?:a{1,2}){0,0}', '(?:a{0})'),
            array('(?:a{1,2}){0}', '(?:a{0})'),
            array('(?:a{1,2}){0,1}', '(?:a{0,2})'),
            array('(?:a{1,2}){0,2}', '(?:a{0,4})'),
            array('(?:a{1,2}){0,}', '(?:a*)'),
            array('(?:a{1,2}){1,1}', '(?:a{1,2})'),
            array('(?:a{1,2}){1}', '(?:a{1,2})'),
            array('(?:a{1,2}){1,2}', '(?:a{1,4})'),
            array('(?:a{1,2}){1,}', '(?:a+)'),
            array('(?:a{1,2}){2,2}', '(?:a{2,4})'),
            array('(?:a{1,2}){2}', '(?:a{2,4})'),
            array('(?:a{1,2}){2,3}', '(?:a{2,6})'),
            array('(?:a{1,2}){2,}', '(?:a{2,})'),

            array('(?:a{1,}){0,0}', '(?:a{0})'),
            array('(?:a{1,}){0}', '(?:a{0})'),
            array('(?:a{1,}){0,1}', '(?:a*)'),
            array('(?:a{1,}){0,2}', '(?:a*)'),
            array('(?:a{1,}){0,}', '(?:a*)'),
            array('(?:a{1,}){1,1}', '(?:a+)'),
            array('(?:a{1,}){1}', '(?:a+)'),
            array('(?:a{1,}){1,2}', '(?:a+)'),
            array('(?:a{1,}){1,}', '(?:a+)'),
            array('(?:a{1,}){2,2}', '(?:a{2,})'),
            array('(?:a{1,}){2}', '(?:a{2,})'),
            array('(?:a{1,}){2,3}', '(?:a{2,})'),
            array('(?:a{1,}){2,}', '(?:a{2,})'),

            array('(?:a{2,2}){0,0}', '(?:a{0})'),
            array('(?:a{2,2}){0}', '(?:a{0})'),
            array('(?:a{2,2}){0,1}', '(?:a{2,2}){0,1}'),
            array('(?:a{2,2}){0,2}', '(?:a{2,2}){0,2}'),
            array('(?:a{2,2}){0,}', '(?:a*)'),
            array('(?:a{2,2}){1,1}', '(?:a{2})'),
            array('(?:a{2,2}){1}', '(?:a{2})'),
            array('(?:a{2,2}){1,2}', '(?:a{2,2}){1,2}'),
            array('(?:a{2,2}){1,}', '(?:a{2,})'),
            array('(?:a{2,2}){2,2}', '(?:a{4})'),
            array('(?:a{2,2}){2}', '(?:a{4})'),
            array('(?:a{2,2}){2,3}', '(?:a{2,2}){2,3}'),
            array('(?:a{2,2}){2,}', '(?:a{4,})'),

            array('(?:a{2}){0,0}', '(?:a{0})'),
            array('(?:a{2}){0}', '(?:a{0})'),
            array('(?:a{2}){0,1}', '(?:a{2}){0,1}'),
            array('(?:a{2}){0,2}', '(?:a{2}){0,2}'),
            array('(?:a{2}){0,}', '(?:a*)'),
            array('(?:a{2}){1,1}', '(?:a{2})'),
            array('(?:a{2}){1}', '(?:a{2})'),
            array('(?:a{2}){1,2}', '(?:a{2}){1,2}'),
            array('(?:a{2}){1,}', '(?:a{2,})'),
            array('(?:a{2}){2,2}', '(?:a{4})'),
            array('(?:a{2}){2}', '(?:a{4})'),
            array('(?:a{2}){2,3}', '(?:a{2}){2,3}'),
            array('(?:a{2}){2,}', '(?:a{4,})'),

            array('(?:a{2,3}){0,0}', '(?:a{0})'),
            array('(?:a{2,3}){0}', '(?:a{0})'),
            array('(?:a{2,3}){0,1}', '(?:a{0,3})'),
            array('(?:a{2,3}){0,2}', '(?:a{0,6})'),
            array('(?:a{2,3}){0,}', '(?:a*)'),
            array('(?:a{2,3}){1,1}', '(?:a{2,3})'),
            array('(?:a{2,3}){1}', '(?:a{2,3})'),
            array('(?:a{2,3}){1,2}', '(?:a{2,6})'),
            array('(?:a{2,3}){1,}', '(?:a{2,})'),
            array('(?:a{2,3}){2,2}', '(?:a{4,6})'),
            array('(?:a{2,3}){2}', '(?:a{4,6})'),
            array('(?:a{2,3}){2,3}', '(?:a{4,9})'),
            array('(?:a{2,3}){2,}', '(?:a{4,})'),

            array('(?:a{2,}){0,0}', '(?:a{0})'),
            array('(?:a{2,}){0}', '(?:a{0})'),
            array('(?:a{2,}){0,1}', '(?:a*)'),
            array('(?:a{2,}){0,2}', '(?:a*)'),
            array('(?:a{2,}){0,}', '(?:a*)'),
            array('(?:a{2,}){1,1}', '(?:a{2,})'),
            array('(?:a{2,}){1}', '(?:a{2,})'),
            array('(?:a{2,}){1,2}', '(?:a{2,})'),
            array('(?:a{2,}){1,}', '(?:a{2,})'),
            array('(?:a{2,}){2,2}', '(?:a{4,})'),
            array('(?:a{2,}){2}', '(?:a{4,})'),
            array('(?:a{2,}){2,3}', '(?:a{4,})'),
            array('(?:a{2,}){2,}', '(?:a{4,})'),


            array('(?:a?)?', '(?:a?)'),
            array('(?:a?)+', '(?:a*)'),
            array('(?:a?)*', '(?:a*)'),
            array('(?:a+)?', '(?:a*)'),
            array('(?:a+)+', '(?:a+)'),
            array('(?:a+)*', '(?:a*)'),
            array('(?:a*)?', '(?:a*)'),
            array('(?:a*)+', '(?:a*)'),
            array('(?:a*)*', '(?:a*)'),
            array('(?:a?){0,1}', '(?:a?)'),
            array('(?:a?){0,}', '(?:a*)'),
            array('(?:a?){1,2}', '(?:a{0,2})'),
            array('(?:a?){1,}', '(?:a*)'),
            array('(?:a?){2,4}', '(?:a{0,4})'),
            array('(?:a+){0,1}', '(?:a*)'),
            array('(?:a+){0,}', '(?:a*)'),
            array('(?:a+){1,2}', '(?:a+)'),
            array('(?:a+){1,}', '(?:a+)'),
            array('(?:a+){2,4}', '(?:a{2,})'),
            array('(?:a*){0,1}', '(?:a*)'),
            array('(?:a*){0,}', '(?:a*)'),
            array('(?:a*){1,2}', '(?:a*)'),
            array('(?:a*){1,}', '(?:a*)'),
            array('(?:a*){2,4}', '(?:a*)'),

            array('(?:a{0,1})?', '(?:a?)'),
            array('(?:a{0,})?', '(?:a*)'),
            array('(?:a{1,2})?', '(?:a{0,2})'),
            array('(?:a{1,})?', '(?:a*)'),
            array('(?:a{2,4})?', '(?:a{0,4})'),
            array('(?:a{0,1})+', '(?:a*)'),
            array('(?:a{0,})+', '(?:a*)'),
            array('(?:a{1,2})+', '(?:a+)'),
            array('(?:a{1,})+', '(?:a+)'),
            array('(?:a{2,4})+', '(?:a{2,})'),
            array('(?:a{0,1})*', '(?:a*)'),
            array('(?:a{0,})*', '(?:a*)'),
            array('(?:a{1,2})*', '(?:a*)'),
            array('(?:a{1,})*', '(?:a*)'),
            array('(?:a{2,4})*', '(?:a*)'),

            array('(?:a{2,}){5,}', '(?:a{10,})'),
            array('(?:a{5,}){2,}', '(?:a{10,})'),
            array('(?:a{2,}){2,}', '(?:a{4,})'),
            array('(?:a{2,3}){2,3}', '(?:a{4,9})'),

            array('(?:a{2,3}){4,5}', '(?:a{8,15})'),
            array('(?:a{4,5}){2,3}', '(?:a{8,15})'),
            array('(?:a{2,3}){3,4}', '(?:a{6,12})'),
            array('(?:a{3,4}){2,3}', '(?:a{6,12})'),

            array('(?:a{0,0}){1,3}', '(?:a{0})'),
            array('(?:a{0,1}){2,3}', '(?:a{0,3})'),
            array('(?:a{1,3}){4,6}', '(?:a{4,18})'),


            array('(?:a?)?|b', '(?:a?)|b'),
            array('(?:a?)+|b', '(?:a*)|b'),
            array('(?:a?)*|b', '(?:a*)|b'),
            array('(?:a+)?|b', '(?:a*)|b'),
            array('(?:a+)+|b', '(?:a+)|b'),
            array('(?:a+)*|b', '(?:a*)|b'),
            array('(?:a*)?|b', '(?:a*)|b'),
            array('(?:a*)+|b', '(?:a*)|b'),
            array('(?:a*)*|b', '(?:a*)|b'),
            array('(?:a?){0,1}|b', '(?:a?)|b'),
            array('(?:a?){0,}|b', '(?:a*)|b'),
            array('(?:a?){1,2}|b', '(?:a{0,2})|b'),
            array('(?:a?){1,}|b', '(?:a*)|b'),
            array('(?:a?){2,4}|b', '(?:a{0,4})|b'),
            array('(?:a+){0,1}|b', '(?:a*)|b'),
            array('(?:a+){0,}|b', '(?:a*)|b'),
            array('(?:a+){1,2}|b', '(?:a+)|b'),
            array('(?:a+){1,}|b', '(?:a+)|b'),
            array('(?:a+){2,4}|b', '(?:a{2,})|b'),
            array('(?:a*){0,1}|b', '(?:a*)|b'),
            array('(?:a*){0,}|b', '(?:a*)|b'),
            array('(?:a*){1,2}|b', '(?:a*)|b'),
            array('(?:a*){1,}|b', '(?:a*)|b'),
            array('(?:a*){2,4}|b', '(?:a*)|b'),

            array('(?:a{0,1})?|b', '(?:a?)|b'),
            array('(?:a{0,})?|b', '(?:a*)|b'),
            array('(?:a{1,2})?|b', '(?:a{0,2})|b'),
            array('(?:a{1,})?|b', '(?:a*)|b'),
            array('(?:a{2,4})?|b', '(?:a{0,4})|b'),
            array('(?:a{0,1})+|b', '(?:a*)|b'),
            array('(?:a{0,})+|b', '(?:a*)|b'),
            array('(?:a{1,2})+|b', '(?:a+)|b'),
            array('(?:a{1,})+|b', '(?:a+)|b'),
            array('(?:a{2,4})+|b', '(?:a{2,})|b'),
            array('(?:a{0,1})*|b', '(?:a*)|b'),
            array('(?:a{0,})*|b', '(?:a*)|b'),
            array('(?:a{1,2})*|b', '(?:a*)|b'),
            array('(?:a{1,})*|b', '(?:a*)|b'),
            array('(?:a{2,4})*|b', '(?:a*)|b'),

            array('(?:a{2,}){5,}|b', '(?:a{10,})|b'),
            array('(?:a{5,}){2,}|b', '(?:a{10,})|b'),
            array('(?:a{2,}){2,}|b', '(?:a{4,})|b'),
            array('(?:a{2,3}){2,3}|b', '(?:a{4,9})|b'),

            array('(?:a{2,3}){4,5}|b', '(?:a{8,15})|b'),
            array('(?:a{4,5}){2,3}|b', '(?:a{8,15})|b'),
            array('(?:a{2,3}){3,4}|b', '(?:a{6,12})|b'),
            array('(?:a{3,4}){2,3}|b', '(?:a{6,12})|b'),

            array('(?:a{0,0}){1,3}|b', '(?:a{0})|b'),
            array('(?:a{0,1}){2,3}|b', '(?:a{0,3})|b'),
            array('(?:a{1,3}){4,6}|b', '(?:a{4,18})|b'),


            array('(?:(?:a?)?|b)', '(?:(?:a?)|b)'),
            array('(?:(?:a?)+|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a?)*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a+)?|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a+)+|b)', '(?:(?:a+)|b)'),
            array('(?:(?:a+)*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*)?|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*)+|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*)*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a?){0,1}|b)', '(?:(?:a?)|b)'),
            array('(?:(?:a?){0,}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a?){1,2}|b)', '(?:(?:a{0,2})|b)'),
            array('(?:(?:a?){1,}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a?){2,4}|b)', '(?:(?:a{0,4})|b)'),
            array('(?:(?:a+){0,1}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a+){0,}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a+){1,2}|b)', '(?:(?:a+)|b)'),
            array('(?:(?:a+){1,}|b)', '(?:(?:a+)|b)'),
            array('(?:(?:a+){2,4}|b)', '(?:(?:a{2,})|b)'),
            array('(?:(?:a*){0,1}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*){0,}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*){1,2}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*){1,}|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a*){2,4}|b)', '(?:(?:a*)|b)'),

            array('(?:(?:a{0,1})?|b)', '(?:(?:a?)|b)'),
            array('(?:(?:a{0,})?|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{1,2})?|b)', '(?:(?:a{0,2})|b)'),
            array('(?:(?:a{1,})?|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{2,4})?|b)', '(?:(?:a{0,4})|b)'),
            array('(?:(?:a{0,1})+|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{0,})+|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{1,2})+|b)', '(?:(?:a+)|b)'),
            array('(?:(?:a{1,})+|b)', '(?:(?:a+)|b)'),
            array('(?:(?:a{2,4})+|b)', '(?:(?:a{2,})|b)'),
            array('(?:(?:a{0,1})*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{0,})*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{1,2})*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{1,})*|b)', '(?:(?:a*)|b)'),
            array('(?:(?:a{2,4})*|b)', '(?:(?:a*)|b)'),

            array('(?:(?:a{2,}){5,}|b)', '(?:(?:a{10,})|b)'),
            array('(?:(?:a{5,}){2,}|b)', '(?:(?:a{10,})|b)'),
            array('(?:(?:a{2,}){2,}|b)', '(?:(?:a{4,})|b)'),
            array('(?:(?:a{2,3}){2,3}|b)', '(?:(?:a{4,9})|b)'),

            array('(?:(?:a{2,3}){4,5}|b)', '(?:(?:a{8,15})|b)'),
            array('(?:(?:a{4,5}){2,3}|b)', '(?:(?:a{8,15})|b)'),
            array('(?:(?:a{2,3}){3,4}|b)', '(?:(?:a{6,12})|b)'),
            array('(?:(?:a{3,4}){2,3}|b)', '(?:(?:a{6,12})|b)'),

            array('(?:(?:a{0,0}){1,3}|b)', '(?:(?:a{0})|b)'),
            array('(?:(?:a{0,1}){2,3}|b)', '(?:(?:a{0,3})|b)'),
            array('(?:(?:a{1,3}){4,6}|b)', '(?:(?:a{4,18})|b)'),


            array('(?:a?)?|c', '(?:a?)|c'),

            array('(?:a?b?)?|c', '(?:a?b?)?|c'), //TODO

            array('a??', 'a??'),
            array('a?+', 'a?+'),
            array('a?*', 'a*'),
            array('a?{0,1}', 'a?'),
            array('a+?', 'a+?'),
            array('a++', 'a++'),
            array('a+*', 'a*'),
            array('a+{0,1}', 'a*'),
            array('a*?', 'a*?'),
            array('a*+', 'a*+'),
            array('a**', 'a*'),
            array('a*{0,1}', 'a*'),

            array('a{1,2}{3,4}', 'a{3,8}'),
            array('a{2,3}{4,5}', 'a{8,15}'),
            array('a{2,3}{3,5}', 'a{6,15}'),

            // Simple tests on combinations of quantifiers
            array('(?:a?)?', '(?:a?)'),
            array('(?:a?)+', '(?:a*)'),
            array('(?:a?)*', '(?:a*)'),
            array('(?:a+)?', '(?:a*)'),
            array('(?:a+)+', '(?:a+)'),
            array('(?:a+)*', '(?:a*)'),
            array('(?:a*)?', '(?:a*)'),
            array('(?:a*)+', '(?:a*)'),
            array('(?:a*)*', '(?:a*)'),
            array('(a?)?', '(a?)'),
            array('(a?)+', '(a*)'),
            array('(a?)*', '(a*)'),
            array('(a+)?', '(a*)'),
            array('(a+)+', '(a+)'),
            array('(a+)*', '(a*)'),
            array('(a*)?', '(a*)'),
            array('(a*)+', '(a*)'),
            array('(a*)*', '(a*)'),
            array('(?:a?){1,2}', '(?:a{0,2})'),
            array('(?:a+){1,2}', '(?:a+)'),
            array('(?:a*){1,2}', '(?:a*)'),
            array('(a?){1,2}', '(a{0,2})'),
            array('(a+){1,2}', '(a+)'),
            array('(a*){1,2}', '(a*)'),
            // Integration tests on a combination of quantifiers:
            // Match a single character within the group with a single character to the left
            array('a(?:a?)?', 'a(?:a?)'), // или a{1,2}
            array('a(?:a?)+', 'a(?:a*)'),
            array('a(?:a?)*', 'a(?:a*)'),
            array('a(?:a+)?', 'a(?:a*)'),
            array('a(?:a+)+', 'a(?:a+)'),
            array('a(?:a+)*', 'a(?:a*)'),
            array('a(?:a*)?', 'a(?:a*)'),
            array('a(?:a*)+', 'a(?:a*)'),
            array('a(?:a*)*', 'a(?:a*)'),
            // Integration tests on a combination of quantifiers:
            // Match a single character inside a subpattern with a single character to the left
            array('a(a?)?', 'a(a?)'),
            array('a(a?)+', 'a(a*)'),
            array('a(a?)*', 'a(a*)'),
            array('a(a+)?', 'a(a*)'),
            array('a(a+)+', 'a(a+)'),
            array('a(a+)*', 'a(a*)'),
            array('a(a*)?', 'a(a*)'),
            array('a(a*)+', 'a(a*)'),
            array('a(a*)*', 'a(a*)'),
            // Integration tests on a combination of quantifiers:
            // single match character within the group with a single character to the right
            array('(?:a?)?a', '(?:a?)a'),
            array('(?:a?)+a', '(?:a*)a'),
            array('(?:a?)*a', '(?:a*)a'),
            array('(?:a+)?a', '(?:a*)a'),
            array('(?:a+)+a', '(?:a+)a'),
            array('(?:a+)*a', '(?:a*)a'),
            array('(?:a*)?a', '(?:a*)a'),
            array('(?:a*)+a', '(?:a*)a'),
            array('(?:a*)*a', '(?:a*)a'),
            // Integration tests on a combination of quantifiers:
            // single match character inside a subpattern with a single character to the right
            array('(a?)?a', '(a?)a'),
            array('(a?)+a', '(a*)a'),
            array('(a?)*a', '(a*)a'),
            array('(a+)?a', '(a*)a'),
            array('(a+)+a', '(a+)a'),
            array('(a+)*a', '(a*)a'),
            array('(a*)?a', '(a*)a'),
            array('(a*)+a', '(a*)a'),
            array('(a*)*a', '(a*)a'),
            // Integration tests on a combination of quantifiers:
            // single match character within the group with a single character to the left
            array('a(?:a?){1,2}', 'a(?:a{0,2})'),
            array('a(?:a+){1,2}', 'a(?:a+)'),
            array('a(?:a*){1,2}', 'a(?:a*)'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with a single character to the left
            array('a(a?){1,2}', 'a(a{0,2})'),
            array('a(a+){1,2}', 'a(a+)'),
            array('a(a*){1,2}', 'a(a*)'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with a single character to the right
            array('(?:a?){1,2}a', '(?:a{0,2})a'),
            array('(?:a+){1,2}a', '(?:a+)a'),
            array('(?:a*){1,2}a', '(?:a*)a'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with a single character to the right
            array('(a?){1,2}a', '(a{0,2})a'),
            array('(a+){1,2}a', '(a+)a'),
            array('(a*){1,2}a', '(a*)a'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(?:a?)?', 'ab(?:a?)'),
            array('ab(?:a?)+', 'ab(?:a*)'),
            array('ab(?:a?)*', 'ab(?:a*)'),
            array('ab(?:a+)?', 'ab(?:a*)'),
            array('ab(?:a+)+', 'ab(?:a+)'),
            array('ab(?:a+)*', 'ab(?:a*)'),
            array('ab(?:a*)?', 'ab(?:a*)'),
            array('ab(?:a*)+', 'ab(?:a*)'),
            array('ab(?:a*)*', 'ab(?:a*)'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost Character in the sequence
            // Characters left
            array('ab(a?)?', 'ab(a?)'),
            array('ab(a?)+', 'ab(a*)'),
            array('ab(a?)*', 'ab(a*)'),
            array('ab(a+)?', 'ab(a*)'),
            array('ab(a+)+', 'ab(a+)'),
            array('ab(a+)*', 'ab(a*)'),
            array('ab(a*)?', 'ab(a*)'),
            array('ab(a*)+', 'ab(a*)'),
            array('ab(a*)*', 'ab(a*)'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters from the right
            array('(?:a?)?ab', '(?:a?)ab'),
            array('(?:a?)+ab', '(?:a*)ab'),
            array('(?:a?)*ab', '(?:a*)ab'),
            array('(?:a+)?ab', '(?:a*)ab'),
            array('(?:a+)+ab', '(?:a+)ab'),
            array('(?:a+)*ab', '(?:a*)ab'),
            array('(?:a*)?ab', '(?:a*)ab'),
            array('(?:a*)+ab', '(?:a*)ab'),
            array('(?:a*)*ab', '(?:a*)ab'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters to the right
            array('(a?)?ab', '(a?)ab'),
            array('(a?)+ab', '(a*)ab'),
            array('(a?)*ab', '(a*)ab'),
            array('(a+)?ab', '(a*)ab'),
            array('(a+)+ab', '(a+)ab'),
            array('(a+)*ab', '(a*)ab'),
            array('(a*)?ab', '(a*)ab'),
            array('(a*)+ab', '(a*)ab'),
            array('(a*)*ab', '(a*)ab'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters on the left
            array('ab(?:a?){1,2}', 'ab(?:a{0,2})'),
            array('ab(?:a+){1,2}', 'ab(?:a+)'),
            array('ab(?:a*){1,2}', 'ab(?:a*)'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters left
            array('ab(a?){1,2}', 'ab(a{0,2})'),
            array('ab(a+){1,2}', 'ab(a+)'),
            array('ab(a*){1,2}', 'ab(a*)'),
            // Integration tests on a combination of quantifiers: single match
            // Character within the group with the leftmost character of the
            // A sequence of characters from the right
            array('(?:a?){1,2}ab', '(?:a{0,2})ab'),
            array('(?:a+){1,2}ab', '(?:a+)ab'),
            array('(?:a*){1,2}ab', '(?:a*)ab'),
            // Integration tests on a combination of quantifiers: single match
            // Character inside a subpattern with the leftmost character in the sequence
            // Characters to the right
            array('(a?){1,2}ab', '(a{0,2})ab'),
            array('(a+){1,2}ab', '(a+)ab'),
            array('(a*){1,2}ab', '(a*)ab'),
            // Integration tests on a combination of quantifiers: three or more quantifiers
            /*array('(?:(?:a*)?)?', 'a*'),
            array('(?:(?:a*)?)+', 'a*'),
            array('(?:(?:a*)?)*', 'a*'),
            array('(?:(?:a*)+)?', 'a*'),
            array('(?:(?:a*)+)+', 'a*'),
            array('(?:(?:a*)+)*', 'a*'),
            array('(?:(?:a*)*)?', 'a*'),
            array('(?:(?:a*)*)+', 'a*'),
            array('(?:(?:a*)*)*', 'a*'),
            array('(?:(?:a+)?)?', 'a*'),
            array('(?:(?:a+)?)+', 'a*'),
            array('(?:(?:a+)?)*', 'a*'),
            array('(?:(?:a+)+)?', 'a*'),
            array('(?:(?:a+)+)+', 'a+'),
            array('(?:(?:a+)+)*', 'a*'),
            array('(?:(?:a+)*)?', 'a*'),
            array('(?:(?:a+)*)+', 'a*'),
            array('(?:(?:a+)*)*', 'a*'),
            array('(?:(?:a?)?)?', 'a?'),
            array('(?:(?:a?)?)+', 'a*'),
            array('(?:(?:a?)?)*', 'a*'),
            array('(?:(?:a?)+)?', 'a*'),
            array('(?:(?:a?)+)+', 'a*'),
            array('(?:(?:a?)+)*', 'a*'),
            array('(?:(?:a?)*)?', 'a*'),
            array('(?:(?:a?)*)+', 'a*'),
            array('(?:(?:a?)*)*', 'a*'),
            array('(?:(?:aa*)?)?', 'a*'),
            array('(?:(?:aa*)?)+', 'a*'),
            array('(?:(?:aa*)?)*', 'a*'),
            array('(?:(?:aa*)+)?', 'a*'),
            array('(?:(?:aa*)+)+', 'a+'),
            array('(?:(?:aa*)+)*', 'a*'),
            array('(?:(?:aa*)*)?', 'a*'),
            array('(?:(?:aa*)*)+', 'a*'),
            array('(?:(?:aa*)*)*', 'a*'),
            array('(?:(?:aa+)?)?', 'a*'),
            array('(?:(?:aa+)?)+', 'a*'),
            array('(?:(?:aa+)?)*', 'a*'),
            array('(?:(?:aa+)+)?', 'a*'),
            array('(?:(?:aa+)+)+', 'a{2,}'),
            array('(?:(?:aa+)+)*', 'a*'),
            array('(?:(?:aa+)*)?', 'a*'),
            array('(?:(?:aa+)*)+', 'a*'),
            array('(?:(?:aa+)*)*', 'a*'),
            array('(?:(?:aa?)?)?', 'a{1,2}'),
            array('(?:(?:aa?)?)+', 'a*'),
            array('(?:(?:aa?)?)*', 'a*'),
            array('(?:(?:aa?)+)?', 'a*'),
            array('(?:(?:aa?)+)+', 'a*'),
            array('(?:(?:aa?)+)*', 'a*'),
            array('(?:(?:aa?)*)?', 'a*'),
            array('(?:(?:aa?)*)+', 'a*'),
            array('(?:(?:aa?)*)*', 'a*'),*/
        );
    }

    protected function get_test_useless_circumflex_assertion_trivial() {
        return array(
            array('^ab', '^ab'),
            array('^^ab', '^^ab'),
            array('a^b', 'ab'),
            array('ab^', 'ab'),
            array('^a^b', '^ab'),
            array('^ab^', '^ab'),

            array('^a|^b', '^a|^b'),
            array('^a|(^b)', '^a|(^b)'),
        );
    }

    protected function get_test_useless_dollar_assertion_trivial() {
        return array(
            array('ab$', 'ab$'),
            array('ab$$', 'ab$$'),
            array('a$b', 'ab'),
            array('$ab', 'ab'),
            array('a$b$', 'ab$'),
            array('$ab$', 'ab$'),

            array('a$|b$', 'a$|b$'),
            array('a$|(b$)', 'a$|(b$)'),
        );
    }

    protected function get_test_exact_match_trivial() {
        return array(
            array('a', 'a'),
            array('^a$', 'a'),

            array('a^a$', 'a^a$'),
            array('^a$a', '^a$a'),

            array('^a$|^b$', 'a|b'),
        );
    }

    protected function get_test_nullable_regex_trivial() {
        return array(
            array('a', 'a'),
            array('a*', ''),
            array('a|', ''),
        );
    }
}

